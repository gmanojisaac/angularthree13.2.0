(globalThis.webpackChunkangularthree13_2_0=globalThis.webpackChunkangularthree13_2_0||[]).push([[179],{"./src/stories/Button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Primary:()=>Primary,Secondary:()=>Secondary,Large:()=>Large,Small:()=>Small});const __WEBPACK_DEFAULT_EXPORT__={title:"Example/Button",component:__webpack_require__("./src/stories/button.component.ts").Z,argTypes:{backgroundColor:{control:"color"}}},Template=args=>({props:args}),Primary=Template.bind({});Primary.args={primary:!0,label:"Button"};const Secondary=Template.bind({});Secondary.args={label:"Button"};const Large=Template.bind({});Large.args={size:"large",label:"Button"};const Small=Template.bind({});Small.args={size:"small",label:"Button"}},"./src/stories/Header.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,LoggedIn:()=>LoggedIn,LoggedOut:()=>LoggedOut});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_button_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/button.component.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Example/Header",component:__webpack_require__("./src/stories/header.component.ts").Z,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_button_component__WEBPACK_IMPORTED_MODULE_1__.Z],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.ez]})],parameters:{layout:"fullscreen"}},Template=args=>({props:args}),LoggedIn=Template.bind({});LoggedIn.args={user:{name:"Jane Doe"}};const LoggedOut=Template.bind({});LoggedOut.args={}},"./src/stories/Page.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LoggedIn:()=>LoggedIn,LoggedOut:()=>LoggedOut,default:()=>Page_stories});var asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),esm=__webpack_require__("./node_modules/@storybook/testing-library/dist/esm/index.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),button_component=__webpack_require__("./src/stories/button.component.ts"),header_component=__webpack_require__("./src/stories/header.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),pagengResource=__webpack_require__("./src/stories/page.css?ngResource"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let PageComponent=class PageComponent{constructor(){this.user=null}doLogout(){this.user=null}doLogin(){this.user={name:"Jane Doe"}}doCreateAccount(){this.user={name:"Jane Doe"}}};PageComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"storybook-page",template:'<article>\n    <storybook-header\n      [user]="user"\n      (onLogout)="doLogout()"\n      (onLogin)="doLogin()"\n      (onCreateAccount)="doCreateAccount()"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href="https://componentdriven.org" target="_blank" rel="noopener noreferrer">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          "args" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href="https://storybook.js.org/tutorials/" target="_blank" rel="noopener noreferrer">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href="https://storybook.js.org/docs" target="_blank" rel="noopener noreferrer"> docs </a>\n        .\n      </p>\n      <div class="tip-wrapper">\n        <span class="tip">Tip</span> Adjust the width of the canvas with the\n        <svg width="10" height="10" viewBox="0 0 12 12" xmlns="http://www.w3.org/2000/svg">\n          <g fill="none" fillRule="evenodd">\n            <path\n              d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"\n              id="a"\n              fill="#999"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>',styles:[pagengResource]})],PageComponent);const Page_stories={title:"Example/Page",component:PageComponent,parameters:{layout:"fullscreen"},decorators:[(0,client.moduleMetadata)({declarations:[button_component.Z,header_component.Z],imports:[common.ez]})]},Template=args=>({props:args}),LoggedOut=Template.bind({}),LoggedIn=Template.bind({});LoggedIn.play=function(){var _ref=(0,asyncToGenerator.Z)((function*({canvasElement}){const canvas=(0,esm.uh)(canvasElement),loginButton=yield canvas.getByRole("button",{name:/Log in/i});yield esm.mV.click(loginButton)}));return function(_x){return _ref.apply(this,arguments)}}()},"./src/polyfills.ts":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/zone.js/fesm2015/zone.js")},"./src/stories/button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_button_css_ngResource__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/button.css?ngResource"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let ButtonComponent=class ButtonComponent{constructor(){this.primary=!1,this.size="medium",this.label="Button",this.onClick=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter}get classes(){const mode=this.primary?"storybook-button--primary":"storybook-button--secondary";return["storybook-button",`storybook-button--${this.size}`,mode]}};ButtonComponent.propDecorators={primary:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],backgroundColor:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],size:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],label:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],onClick:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output}]},ButtonComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"storybook-button",template:' <button\n    type="button"\n    (click)="onClick.emit($event)"\n    [ngClass]="classes"\n    [ngStyle]="{ \'background-color\': backgroundColor }"\n  >\n    {{ label }}\n  </button>',styles:[_button_css_ngResource__WEBPACK_IMPORTED_MODULE_0__]})],ButtonComponent);const __WEBPACK_DEFAULT_EXPORT__=ButtonComponent},"./src/stories/header.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_header_css_ngResource__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/header.css?ngResource"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let HeaderComponent=class HeaderComponent{constructor(){this.user=null,this.onLogin=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onLogout=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onCreateAccount=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter}};HeaderComponent.propDecorators={user:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],onLogin:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output}],onLogout:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output}],onCreateAccount:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output}]},HeaderComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"storybook-header",template:'<header>\n    <div class="wrapper">\n      <div>\n        <svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">\n          <g fill="none" fillRule="evenodd">\n            <path\n              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"\n              fill="#FFF"\n            />\n            <path\n              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"\n              fill="#555AB9"\n            />\n            <path\n              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"\n              fill="#91BAF8"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf="user">\n          <span class="welcome">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf="user"\n            size="small"\n            (onClick)="onLogout.emit($event)"\n            label="Log out"\n          ></storybook-button>\n        </div>\n        <div *ngIf="!user">\n          <storybook-button\n            *ngIf="!user"\n            size="small"\n            class="margin-left"\n            (onClick)="onLogin.emit($event)"\n            label="Log in"\n          ></storybook-button>\n          <storybook-button\n            *ngIf="!user"\n            primary\n            size="small"\n            primary="true"\n            class="margin-left"\n            (onClick)="onCreateAccount.emit($event)"\n            label="Sign up"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>',styles:[_header_css_ngResource__WEBPACK_IMPORTED_MODULE_0__]})],HeaderComponent);const __WEBPACK_DEFAULT_EXPORT__=HeaderComponent},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{parameters:()=>parameters});var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"ComponentState","id":"interface-ComponentState-42e06883b801ee9fa054e6e5ab69bfc663d35a986215a50826feadeb136b7772e3210d9caddc2b53b1a7fac791a7305b32e2927e27bf8cb5475f0211e5358832","file":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, Output } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Subject } from \'rxjs\';\\nimport { distinctUntilKeyChanged, map, startWith } from \'rxjs/operators\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\n@Component({\\n  selector: \'app-rxstate-example\',\\n  templateUrl: \'./rxstate-example.component.html\',\\n  styleUrls: [\'./rxstate-example.component.scss\']\\n})\\nexport class RxstateExampleComponent  {\\n\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\ninterface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n@Component({\\n  selector: \'rxa-side-effects-solution\',\\n  template: `\\n    <h3>\\n      Side Effects\\n    </h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"model$ | async as vm\\"\\n      (expandedChange)=\\"listExpandedChanges.next($event)\\"\\n      [expanded]=\\"vm.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header class=\\"list\\">\\n        <mat-progress-bar *ngIf=\\"false\\" [mode]=\\"\'query\'\\"></mat-progress-bar>\\n        <mat-panel-title>\\n          List\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span\\n          >{{ vm.list.length }} Repositories Updated every:\\n            {{ vm.refreshInterval }} ms\\n          </span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"refreshClicks$.next($event)\\">\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"vm.list?.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of vm.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SideEffectsSolution extends RxState<ComponentState>\\n  implements OnInit, OnDestroy {\\n  model$ = this.select();\\n\\n  listExpandedChanges = new Subject<boolean>();\\n  refreshClicks$ = new Subject<Event>();\\n\\n  @Input()\\n  set refreshInterval(refreshInterval: number) {\\n    if (refreshInterval > 4000) {\\n      this.set({ refreshInterval });\\n    }\\n  }\\n\\n  listExpanded: boolean = initComponentState.listExpanded;\\n  @Output()\\n  listExpandedChange = this.$.pipe(distinctUntilKeyChanged(\'listExpanded\'), map(s => s.listExpanded));\\n\\n  constructor(private listService: ListService) {\\n    super();\\n    this.set(initComponentState);\\n    this.connect(\'listExpanded\', this.listExpandedChanges);\\n    this.connect(\'list\', this.listService.list$.pipe(map(this.parseListItems)));\\n    this.hold(this.refreshClicks$.pipe(startWith(true)), () => this.listService.refetchList())\\n  }\\n\\n  ngOnInit(): void {\\n    this.refreshClicks$.next(undefined);\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n","properties":[{"name":"list","deprecated":false,"deprecationMessage":"","type":"DemoBasicsItem[]","optional":false,"description":"","line":29},{"name":"listExpanded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"refreshInterval","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ComponentState","id":"interface-ComponentState-e1a2a59a5e894120dfe6acfa7f1282d1080d19bc3d0618a1406a1fd1a3d98e2d900cb2f1855bcf37a37b0caba0abd5e5bf62b249337ec0b021ffbd15f6555cb6-1","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Observable,switchMap } from \'rxjs\';\\nimport { filter } from \'rxjs/operators\';\\nimport { Subject } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { Injectable } from \'@angular/core\';\\nimport { merge,  timer } from \'rxjs\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\nexport interface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n\\n\\n@Injectable()\\nexport class Presenter extends RxState<ComponentState> {\\n  refreshClicks = new Subject<Event>();\\n  listExpandedChanges = new Subject<boolean>();\\n\\n  vm$ = this.select();\\n  // 👇 user interaction is collected in presenter\\n  refreshListTrigger$ = merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )\\n\\n  constructor() {\\n    super();\\n    this.set(initComponentState);\\n      // 👇 user open close data is stored in store\\n    this.connect(\\n      this.listExpandedChanges.pipe(map((b) => ({ listExpanded: b })))\\n    );\\n  }\\n\\n}\\n\\n\\n@Injectable()\\nexport class Adapter extends RxState<Pick<ComponentState, \'list\'>> {\\n\\n  list$ = this.select(\'list\');\\n  constructor(\\n    private listService: ListService\\n  ) {\\n    super();\\n      // 👇 store list is populated using service\\n    this.connect(\'list\', this.listService.list$\\n      .pipe(map(this.parseListItems))\\n    );\\n  }\\n\\n  refresh = () => {\\n    this.listService.refetchList()\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-rxstate-presenter\',\\n  templateUrl: \'./rxstate-presenter.component.html\',\\n  styleUrls: [\'./rxstate-presenter.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RxstatePresenterComponent {\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\n@Component({\\n  selector: \'rxa-presenter-pattern-solution\',\\n  template: `\\n    <h3>Presenter Pattern</h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"ps.vm$ | async as m\\"\\n      (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n      [expanded]=\\"m.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          User Name\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span *ngIf=\\"!m.listExpanded\\"\\n          >{{ m.list.length }} Repositories Updated every:\\n            {{ m.refreshInterval }} ms</span\\n          >\\n          <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"ps.refreshClicks.next($event)\\"\\n      >\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"m.list.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of m.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [Presenter, Adapter]\\n})\\nexport class PresenterPatternSolution extends RxState<any> {\\n\\n  @Input()\\n  set refreshInterval(refreshInterval$: Observable<number>) {\\n    this.ps.connect(\'refreshInterval\', refreshInterval$.pipe(\\n      filter(i => null? i > 100: false)\\n    ));\\n  }\\n\\n  constructor(\\n    public ps: Presenter,\\n    public ad: Adapter\\n  ) {\\n    super();\\n    // 👇 update the store\\n    this.ps.connect(\'list\', this.ad.list$);\\n    // 👇 side effects is managed here\\n    this.hold(this.ps.refreshListTrigger$, this.ad.refresh);\\n  }\\n}\\n","properties":[{"name":"list","deprecated":false,"deprecationMessage":"","type":"DemoBasicsItem[]","optional":false,"description":"","line":14},{"name":"listExpanded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":15},{"name":"refreshInterval","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"ComponentState-1"},{"name":"DemoBasicsItem","id":"interface-DemoBasicsItem-42e06883b801ee9fa054e6e5ab69bfc663d35a986215a50826feadeb136b7772e3210d9caddc2b53b1a7fac791a7305b32e2927e27bf8cb5475f0211e5358832","file":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, Output } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Subject } from \'rxjs\';\\nimport { distinctUntilKeyChanged, map, startWith } from \'rxjs/operators\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\n@Component({\\n  selector: \'app-rxstate-example\',\\n  templateUrl: \'./rxstate-example.component.html\',\\n  styleUrls: [\'./rxstate-example.component.scss\']\\n})\\nexport class RxstateExampleComponent  {\\n\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\ninterface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n@Component({\\n  selector: \'rxa-side-effects-solution\',\\n  template: `\\n    <h3>\\n      Side Effects\\n    </h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"model$ | async as vm\\"\\n      (expandedChange)=\\"listExpandedChanges.next($event)\\"\\n      [expanded]=\\"vm.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header class=\\"list\\">\\n        <mat-progress-bar *ngIf=\\"false\\" [mode]=\\"\'query\'\\"></mat-progress-bar>\\n        <mat-panel-title>\\n          List\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span\\n          >{{ vm.list.length }} Repositories Updated every:\\n            {{ vm.refreshInterval }} ms\\n          </span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"refreshClicks$.next($event)\\">\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"vm.list?.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of vm.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SideEffectsSolution extends RxState<ComponentState>\\n  implements OnInit, OnDestroy {\\n  model$ = this.select();\\n\\n  listExpandedChanges = new Subject<boolean>();\\n  refreshClicks$ = new Subject<Event>();\\n\\n  @Input()\\n  set refreshInterval(refreshInterval: number) {\\n    if (refreshInterval > 4000) {\\n      this.set({ refreshInterval });\\n    }\\n  }\\n\\n  listExpanded: boolean = initComponentState.listExpanded;\\n  @Output()\\n  listExpandedChange = this.$.pipe(distinctUntilKeyChanged(\'listExpanded\'), map(s => s.listExpanded));\\n\\n  constructor(private listService: ListService) {\\n    super();\\n    this.set(initComponentState);\\n    this.connect(\'listExpanded\', this.listExpandedChanges);\\n    this.connect(\'list\', this.listService.list$.pipe(map(this.parseListItems)));\\n    this.hold(this.refreshClicks$.pipe(startWith(true)), () => this.listService.refetchList())\\n  }\\n\\n  ngOnInit(): void {\\n    this.refreshClicks$.next(undefined);\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"DemoBasicsItem","id":"interface-DemoBasicsItem-e1a2a59a5e894120dfe6acfa7f1282d1080d19bc3d0618a1406a1fd1a3d98e2d900cb2f1855bcf37a37b0caba0abd5e5bf62b249337ec0b021ffbd15f6555cb6-1","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Observable,switchMap } from \'rxjs\';\\nimport { filter } from \'rxjs/operators\';\\nimport { Subject } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { Injectable } from \'@angular/core\';\\nimport { merge,  timer } from \'rxjs\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\nexport interface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n\\n\\n@Injectable()\\nexport class Presenter extends RxState<ComponentState> {\\n  refreshClicks = new Subject<Event>();\\n  listExpandedChanges = new Subject<boolean>();\\n\\n  vm$ = this.select();\\n  // 👇 user interaction is collected in presenter\\n  refreshListTrigger$ = merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )\\n\\n  constructor() {\\n    super();\\n    this.set(initComponentState);\\n      // 👇 user open close data is stored in store\\n    this.connect(\\n      this.listExpandedChanges.pipe(map((b) => ({ listExpanded: b })))\\n    );\\n  }\\n\\n}\\n\\n\\n@Injectable()\\nexport class Adapter extends RxState<Pick<ComponentState, \'list\'>> {\\n\\n  list$ = this.select(\'list\');\\n  constructor(\\n    private listService: ListService\\n  ) {\\n    super();\\n      // 👇 store list is populated using service\\n    this.connect(\'list\', this.listService.list$\\n      .pipe(map(this.parseListItems))\\n    );\\n  }\\n\\n  refresh = () => {\\n    this.listService.refetchList()\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-rxstate-presenter\',\\n  templateUrl: \'./rxstate-presenter.component.html\',\\n  styleUrls: [\'./rxstate-presenter.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RxstatePresenterComponent {\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\n@Component({\\n  selector: \'rxa-presenter-pattern-solution\',\\n  template: `\\n    <h3>Presenter Pattern</h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"ps.vm$ | async as m\\"\\n      (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n      [expanded]=\\"m.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          User Name\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span *ngIf=\\"!m.listExpanded\\"\\n          >{{ m.list.length }} Repositories Updated every:\\n            {{ m.refreshInterval }} ms</span\\n          >\\n          <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"ps.refreshClicks.next($event)\\"\\n      >\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"m.list.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of m.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [Presenter, Adapter]\\n})\\nexport class PresenterPatternSolution extends RxState<any> {\\n\\n  @Input()\\n  set refreshInterval(refreshInterval$: Observable<number>) {\\n    this.ps.connect(\'refreshInterval\', refreshInterval$.pipe(\\n      filter(i => null? i > 100: false)\\n    ));\\n  }\\n\\n  constructor(\\n    public ps: Presenter,\\n    public ad: Adapter\\n  ) {\\n    super();\\n    // 👇 update the store\\n    this.ps.connect(\'list\', this.ad.list$);\\n    // 👇 side effects is managed here\\n    this.hold(this.ps.refreshListTrigger$, this.ad.refresh);\\n  }\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"DemoBasicsItem-1"},{"name":"DemoBasicsItem","id":"interface-DemoBasicsItem-e1a2a59a5e894120dfe6acfa7f1282d1080d19bc3d0618a1406a1fd1a3d98e2d900cb2f1855bcf37a37b0caba0abd5e5bf62b249337ec0b021ffbd15f6555cb6-2","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Observable,switchMap } from \'rxjs\';\\nimport { filter } from \'rxjs/operators\';\\nimport { Subject } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { Injectable } from \'@angular/core\';\\nimport { merge,  timer } from \'rxjs\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\nexport interface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n\\n\\n@Injectable()\\nexport class Presenter extends RxState<ComponentState> {\\n  refreshClicks = new Subject<Event>();\\n  listExpandedChanges = new Subject<boolean>();\\n\\n  vm$ = this.select();\\n  // 👇 user interaction is collected in presenter\\n  refreshListTrigger$ = merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )\\n\\n  constructor() {\\n    super();\\n    this.set(initComponentState);\\n      // 👇 user open close data is stored in store\\n    this.connect(\\n      this.listExpandedChanges.pipe(map((b) => ({ listExpanded: b })))\\n    );\\n  }\\n\\n}\\n\\n\\n@Injectable()\\nexport class Adapter extends RxState<Pick<ComponentState, \'list\'>> {\\n\\n  list$ = this.select(\'list\');\\n  constructor(\\n    private listService: ListService\\n  ) {\\n    super();\\n      // 👇 store list is populated using service\\n    this.connect(\'list\', this.listService.list$\\n      .pipe(map(this.parseListItems))\\n    );\\n  }\\n\\n  refresh = () => {\\n    this.listService.refetchList()\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-rxstate-presenter\',\\n  templateUrl: \'./rxstate-presenter.component.html\',\\n  styleUrls: [\'./rxstate-presenter.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RxstatePresenterComponent {\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\n@Component({\\n  selector: \'rxa-presenter-pattern-solution\',\\n  template: `\\n    <h3>Presenter Pattern</h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"ps.vm$ | async as m\\"\\n      (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n      [expanded]=\\"m.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          User Name\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span *ngIf=\\"!m.listExpanded\\"\\n          >{{ m.list.length }} Repositories Updated every:\\n            {{ m.refreshInterval }} ms</span\\n          >\\n          <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"ps.refreshClicks.next($event)\\"\\n      >\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"m.list.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of m.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [Presenter, Adapter]\\n})\\nexport class PresenterPatternSolution extends RxState<any> {\\n\\n  @Input()\\n  set refreshInterval(refreshInterval$: Observable<number>) {\\n    this.ps.connect(\'refreshInterval\', refreshInterval$.pipe(\\n      filter(i => null? i > 100: false)\\n    ));\\n  }\\n\\n  constructor(\\n    public ps: Presenter,\\n    public ad: Adapter\\n  ) {\\n    super();\\n    // 👇 update the store\\n    this.ps.connect(\'list\', this.ad.list$);\\n    // 👇 side effects is managed here\\n    this.hold(this.ps.refreshListTrigger$, this.ad.refresh);\\n  }\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":95},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":96}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":2,"duplicateName":"DemoBasicsItem-2"},{"name":"Ingredient","id":"interface-Ingredient-b14ab551f5cec3e33d9aeb81a8f917c5c869e2d3d7aad1fbf23973cc4e8d0639e81c3f62951b0d4333f94ff3758068ab422022f7faaa876fe580c43065fe528e","file":"src/app/threejs-basic/receipe.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Recipe {\\r\\n  id: string;\\r\\n  description: string;\\r\\n  ingredients: Ingredient[];\\r\\n  name: string;\\r\\n  pictureUri: string;\\r\\n  steps: string[];\\r\\n}\\r\\n\\r\\nexport interface Ingredient {\\r\\n  quantity?: Quantity;\\r\\n  name: string;\\r\\n}\\r\\n\\r\\nexport interface Quantity {\\r\\n  amount: number;\\r\\n  unit: string;\\r\\n}\\r\\n\\r\\nexport function createRecipe(recipe: Recipe): Recipe {\\r\\n  return recipe;\\r\\n}\\r\\n\\r\\nexport function createIngredient(ingredient: Ingredient): Ingredient {\\r\\n  return ingredient;\\r\\n}\\r\\n\\r\\nexport function createQuantity(quantity: Quantity): Quantity {\\r\\n  return quantity;\\r\\n}\\r\\n\\r\\nexport interface ListServerItem {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  created: string;\\r\\n}","properties":[{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"quantity","deprecated":false,"deprecationMessage":"","type":"Quantity","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ListServerItem","id":"interface-ListServerItem-b14ab551f5cec3e33d9aeb81a8f917c5c869e2d3d7aad1fbf23973cc4e8d0639e81c3f62951b0d4333f94ff3758068ab422022f7faaa876fe580c43065fe528e","file":"src/app/threejs-basic/receipe.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Recipe {\\r\\n  id: string;\\r\\n  description: string;\\r\\n  ingredients: Ingredient[];\\r\\n  name: string;\\r\\n  pictureUri: string;\\r\\n  steps: string[];\\r\\n}\\r\\n\\r\\nexport interface Ingredient {\\r\\n  quantity?: Quantity;\\r\\n  name: string;\\r\\n}\\r\\n\\r\\nexport interface Quantity {\\r\\n  amount: number;\\r\\n  unit: string;\\r\\n}\\r\\n\\r\\nexport function createRecipe(recipe: Recipe): Recipe {\\r\\n  return recipe;\\r\\n}\\r\\n\\r\\nexport function createIngredient(ingredient: Ingredient): Ingredient {\\r\\n  return ingredient;\\r\\n}\\r\\n\\r\\nexport function createQuantity(quantity: Quantity): Quantity {\\r\\n  return quantity;\\r\\n}\\r\\n\\r\\nexport interface ListServerItem {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  created: string;\\r\\n}","properties":[{"name":"created","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ListServiceState","id":"interface-ListServiceState-c93d5823c95097391d4ff660e5c13b4d2907e5208236ccc8e2b98052f7dfe1f39479afc80f8ab427a87990574e23c3e126b0070b468d33a04f6f37f3c7d40ce0","file":"src/app/service/list.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, of } from \'rxjs\';\\nimport { ListServerItem } from \'../threejs-basic/receipe\';\\nimport { catchError, delay, distinctUntilChanged, filter, map } from \'rxjs/operators\';\\n\\ninterface ListServiceState {\\n  list: any[];\\n  loading: boolean;\\n  error: string;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ListService {\\n  private state$ = new BehaviorSubject<Partial<ListServiceState>>({\\n    list: [],\\n    loading: false,\\n    error: \'\',\\n  });\\n\\n  list$ = this.state$.pipe(\\n    map((s) => s.list),\\n    distinctUntilChanged()\\n  );\\n\\n  errorSignal$ = this.state$.pipe(\\n    map((s) => s.error),\\n    filter((b) => !!b)\\n  );\\n  successSignal$ = this.state$.pipe(\\n    map(({ loading, error }) => ({ loading, error })),\\n    filter((o) => o.loading === false && o.error !== \'\')\\n  );\\n\\n  loadingSignal$ = this.state$.pipe(map(({ loading }) => loading));\\n\\n  constructor() {\\n    this.state$.subscribe(console.log);\\n  }\\n\\n  refetchList() {\\n    this.state$.next({ ...this.state$.getValue(), loading: true });\\n    this.httpGetListItem({ num: 1 })\\n      .pipe(catchError((e) => of({ error: e, loading: false, list: [] })))\\n      .subscribe((slice) => {\\n        console.log(\'list: \', this.state$.getValue());\\n        return this.state$.next({\\n          error: \'\',\\n          list: [...this.state$.value.list, ...slice.list],\\n          loading: false,\\n        });\\n      });\\n  }\\n\\n  httpGetListItem = (arg?: any): Observable<{ list: any[] }> =>\\n    of(getData(arg)).pipe(\\n      delay(~~(Math.random() * 5000)),\\n      map((list) => ({ list }))\\n    );\\n}\\n\\nexport function getData(cfg = { num: 5 }): ListServerItem[] {\\n  const randId = (s: string) => s + ~~(Math.random() * 100);\\n  return new Array(cfg.num).fill(cfg.num).map((_) => ({\\n    id: randId(\'id\'),\\n    name: randId(\'name\'),\\n    created: Date.now() / 1000 + \'\',\\n  }));\\n}","properties":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"list","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":7},{"name":"loading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Quantity","id":"interface-Quantity-b14ab551f5cec3e33d9aeb81a8f917c5c869e2d3d7aad1fbf23973cc4e8d0639e81c3f62951b0d4333f94ff3758068ab422022f7faaa876fe580c43065fe528e","file":"src/app/threejs-basic/receipe.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Recipe {\\r\\n  id: string;\\r\\n  description: string;\\r\\n  ingredients: Ingredient[];\\r\\n  name: string;\\r\\n  pictureUri: string;\\r\\n  steps: string[];\\r\\n}\\r\\n\\r\\nexport interface Ingredient {\\r\\n  quantity?: Quantity;\\r\\n  name: string;\\r\\n}\\r\\n\\r\\nexport interface Quantity {\\r\\n  amount: number;\\r\\n  unit: string;\\r\\n}\\r\\n\\r\\nexport function createRecipe(recipe: Recipe): Recipe {\\r\\n  return recipe;\\r\\n}\\r\\n\\r\\nexport function createIngredient(ingredient: Ingredient): Ingredient {\\r\\n  return ingredient;\\r\\n}\\r\\n\\r\\nexport function createQuantity(quantity: Quantity): Quantity {\\r\\n  return quantity;\\r\\n}\\r\\n\\r\\nexport interface ListServerItem {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  created: string;\\r\\n}","properties":[{"name":"amount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16},{"name":"unit","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Recipe","id":"interface-Recipe-b14ab551f5cec3e33d9aeb81a8f917c5c869e2d3d7aad1fbf23973cc4e8d0639e81c3f62951b0d4333f94ff3758068ab422022f7faaa876fe580c43065fe528e","file":"src/app/threejs-basic/receipe.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Recipe {\\r\\n  id: string;\\r\\n  description: string;\\r\\n  ingredients: Ingredient[];\\r\\n  name: string;\\r\\n  pictureUri: string;\\r\\n  steps: string[];\\r\\n}\\r\\n\\r\\nexport interface Ingredient {\\r\\n  quantity?: Quantity;\\r\\n  name: string;\\r\\n}\\r\\n\\r\\nexport interface Quantity {\\r\\n  amount: number;\\r\\n  unit: string;\\r\\n}\\r\\n\\r\\nexport function createRecipe(recipe: Recipe): Recipe {\\r\\n  return recipe;\\r\\n}\\r\\n\\r\\nexport function createIngredient(ingredient: Ingredient): Ingredient {\\r\\n  return ingredient;\\r\\n}\\r\\n\\r\\nexport function createQuantity(quantity: Quantity): Quantity {\\r\\n  return quantity;\\r\\n}\\r\\n\\r\\nexport interface ListServerItem {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  created: string;\\r\\n}","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"ingredients","deprecated":false,"deprecationMessage":"","type":"Ingredient[]","optional":false,"description":"","line":4},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"pictureUri","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"steps","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"stagestatege","id":"interface-stagestatege-7c3aac4158e86cc26fbaf97c99c840e1e4f5f0611c92dbb3b56befaab625c6f9c0ae3cdd6a47da1beaf5535b6c9aa55e0369432cbd9b6fe9f6f4da277027ced3","file":"src/app/threejs-soba/stage-stage/stage-stage.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\nimport {  presetsObj } from \'@angular-three/soba/staging\';\\r\\nimport {\\r\\n  NgtSobaEnvironment\\r\\n} from \'@angular-three/soba/staging\';\\r\\n\\r\\nenum presets {\\r\\n  rembrant = \'rembrandt\',\\r\\n  portrait = \'portrait\',\\r\\n  upfront = \'upfront\',\\r\\n  soft = \'soft\',\\r\\n}\\r\\n\\r\\ninterface stagestatege {\\r\\n   blur: number; opacity?: number; position?: [x: number, y: number, z: number]; \\r\\n}\\r\\n@Component({\\r\\n  selector: \'app-stage-stage\',\\r\\n  templateUrl: \'./stage-stage.component.html\',\\r\\n  styleUrls: [\'./stage-stage.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class StageStageComponent {\\r\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\r\\n  cameraFov: number = 75;\\r\\n  lights = true;\\r\\n  controls = true;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n\\r\\n  contactShadow :stagestatege= {\\r\\n    blur: 2,\\r\\n    opacity: 0.5,\\r\\n    position: [0, 0, 0],\\r\\n};\\r\\nshadows= true;\\r\\nintensity= .10;\\r\\nenvironment : NgtSobaEnvironment[\\"preset\\"]= \\"forest\\";\\r\\n\\r\\npreset= presets.portrait;\\r\\n\\r\\n  constructor() { }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n  }\\r\\n\\r\\n}\\r\\n","properties":[{"name":"blur","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16},{"name":"opacity","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":16},{"name":"position","deprecated":false,"deprecationMessage":"","type":"[, , ]","optional":true,"description":"","line":16}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"State","id":"interface-State-672e9ebd4f7f37a6c4ebc07274697505264ce86473a906a77657dd527ecf44052774d6ab9621e9c63703bbe9895d14d6c0b6ce603356e61f7049cdfc7987e434","file":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState, select, selectSlice } from \'@rx-angular/state\';\\nimport { map } from \'rxjs\';\\nimport { UserdataService } from \'../../service/userdata.service\';\\nimport { Recipe } from \'../receipe\';\\n\\nexport interface State {\\n  recipes: Recipe[];\\n  recipeIndex: number;\\n}\\n\\n@Component({\\n  selector: \'app-marmi-rxstate\',\\n  templateUrl: \'./marmi-rxstate.component.html\',\\n  styleUrls: [\'./marmi-rxstate.component.scss\'],  \\n  providers: [RxState],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class MarmiRxstateComponent {\\n  // 👇 Using select/selectslice create observables for using in template for display\\n  recipe$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => recipes?.[recipeIndex])\\n  );\\n  // 👇 create boolean observable for use in template\\n  hasPrevious$ = this._state\\n    .select(\'recipeIndex\')\\n    .pipe(select(map((index) => index > 0)));\\n\\n  // 👇 create boolean observable for use in template\\n  hasNext$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => {\\n      console.count(\'compute hasNext...\');\\n      return recipeIndex + 1 < recipes.length;\\n    })\\n  );\\n  // 👇 create store in template \\n  recipes$ = this._state.select(\'recipes\');\\n\\n  constructor(\\n    private _recipeRepository: UserdataService,\\n    private _state: RxState<State>\\n  ) {\\n    // 👇 set command initializes the store state\\n    this._state.set({ recipeIndex: 0 });\\n    // 👇 Data from template/service is connected to the store state recepes\\n    this._state.connect(\'recipes\', this._recipeRepository.getRecipes());\\n  }\\n\\n  // 👇 set command directly interacts with store for no side effect\\n  next() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex + 1 }));\\n  }\\n\\n  previous() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex - 1 }));\\n  }\\n\\n  reset() {\\n    this._state.set({ recipeIndex: 0 });\\n  }\\n}\\n\\n;\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-recipe-preview\',\\n  template: `<wm-card *ngIf=\\"recipe\\" [pictureUri]=\\"recipe.pictureUri\\">\\n    <h2 data-role=\\"recipe-name\\">{{ recipe.name }}</h2>\\n    <ng-content></ng-content>\\n  </wm-card>`,\\n  styles: [\\n    `\\n      h2 {\\n        font-size: 1.2em;\\n        text-align: center;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n})\\nexport class RecipePreviewComponent {\\n  @Input() recipe?: Recipe;\\n}\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-card\',\\n  template: ` <img *ngIf=\\"pictureUri\\" class=\\"picture\\" [src]=\\"pictureUri\\" />\\n    <div class=\\"content\\">\\n      <ng-content></ng-content>\\n    </div>`,\\n  styles: [\\n    `\\n      :host {\\n        display: block;\\n        border-radius: 10px;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n        overflow: hidden;\\n        text-align: left;\\n        width: 300px;\\n      }\\n      .picture {\\n        object-fit: cover;\\n        height: 300px;\\n        width: 100%;\\n      }\\n      .content {\\n        margin: 10px;\\n      }\\n    `,\\n  ],\\n})\\nexport class CardComponent {\\n  @Input() pictureUri?: string;\\n}\\n","properties":[{"name":"recipeIndex","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":10},{"name":"recipes","deprecated":false,"deprecationMessage":"","type":"Recipe[]","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"User","id":"interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc","file":"src/stories/User.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface User {}\\n","properties":[],"indexSignatures":[],"methods":[]}],"injectables":[{"name":"Adapter","id":"injectable-Adapter-e1a2a59a5e894120dfe6acfa7f1282d1080d19bc3d0618a1406a1fd1a3d98e2d900cb2f1855bcf37a37b0caba0abd5e5bf62b249337ec0b021ffbd15f6555cb6","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","properties":[{"name":"list$","defaultValue":"this.select(\'list\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60},{"name":"refresh","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71}],"methods":[{"name":"parseListItems","args":[{"name":"l","type":"ListServerItem[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DemoBasicsItem[]","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"l","type":"ListServerItem[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Observable,switchMap } from \'rxjs\';\\nimport { filter } from \'rxjs/operators\';\\nimport { Subject } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { Injectable } from \'@angular/core\';\\nimport { merge,  timer } from \'rxjs\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\nexport interface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n\\n\\n@Injectable()\\nexport class Presenter extends RxState<ComponentState> {\\n  refreshClicks = new Subject<Event>();\\n  listExpandedChanges = new Subject<boolean>();\\n\\n  vm$ = this.select();\\n  // 👇 user interaction is collected in presenter\\n  refreshListTrigger$ = merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )\\n\\n  constructor() {\\n    super();\\n    this.set(initComponentState);\\n      // 👇 user open close data is stored in store\\n    this.connect(\\n      this.listExpandedChanges.pipe(map((b) => ({ listExpanded: b })))\\n    );\\n  }\\n\\n}\\n\\n\\n@Injectable()\\nexport class Adapter extends RxState<Pick<ComponentState, \'list\'>> {\\n\\n  list$ = this.select(\'list\');\\n  constructor(\\n    private listService: ListService\\n  ) {\\n    super();\\n      // 👇 store list is populated using service\\n    this.connect(\'list\', this.listService.list$\\n      .pipe(map(this.parseListItems))\\n    );\\n  }\\n\\n  refresh = () => {\\n    this.listService.refetchList()\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-rxstate-presenter\',\\n  templateUrl: \'./rxstate-presenter.component.html\',\\n  styleUrls: [\'./rxstate-presenter.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RxstatePresenterComponent {\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\n@Component({\\n  selector: \'rxa-presenter-pattern-solution\',\\n  template: `\\n    <h3>Presenter Pattern</h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"ps.vm$ | async as m\\"\\n      (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n      [expanded]=\\"m.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          User Name\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span *ngIf=\\"!m.listExpanded\\"\\n          >{{ m.list.length }} Repositories Updated every:\\n            {{ m.refreshInterval }} ms</span\\n          >\\n          <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"ps.refreshClicks.next($event)\\"\\n      >\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"m.list.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of m.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [Presenter, Adapter]\\n})\\nexport class PresenterPatternSolution extends RxState<any> {\\n\\n  @Input()\\n  set refreshInterval(refreshInterval$: Observable<number>) {\\n    this.ps.connect(\'refreshInterval\', refreshInterval$.pipe(\\n      filter(i => null? i > 100: false)\\n    ));\\n  }\\n\\n  constructor(\\n    public ps: Presenter,\\n    public ad: Adapter\\n  ) {\\n    super();\\n    // 👇 update the store\\n    this.ps.connect(\'list\', this.ad.list$);\\n    // 👇 side effects is managed here\\n    this.hold(this.ps.refreshListTrigger$, this.ad.refresh);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"listService","type":"ListService","deprecated":false,"deprecationMessage":""}],"line":60,"jsdoctags":[{"name":"listService","type":"ListService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"RxState","type":"injectable"},{"name":"ListService","id":"injectable-ListService-c93d5823c95097391d4ff660e5c13b4d2907e5208236ccc8e2b98052f7dfe1f39479afc80f8ab427a87990574e23c3e126b0070b468d33a04f6f37f3c7d40ce0","file":"src/app/service/list.service.ts","properties":[{"name":"errorSignal$","defaultValue":"this.state$.pipe(\\n    map((s) => s.error),\\n    filter((b) => !!b)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"httpGetListItem","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56},{"name":"list$","defaultValue":"this.state$.pipe(\\n    map((s) => s.list),\\n    distinctUntilChanged()\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"loadingSignal$","defaultValue":"this.state$.pipe(map(({ loading }) => loading))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36},{"name":"state$","defaultValue":"new BehaviorSubject<Partial<ListServiceState>>({\\n    list: [],\\n    loading: false,\\n    error: \'\',\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[121]},{"name":"successSignal$","defaultValue":"this.state$.pipe(\\n    map(({ loading, error }) => ({ loading, error })),\\n    filter((o) => o.loading === false && o.error !== \'\')\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31}],"methods":[{"name":"refetchList","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, of } from \'rxjs\';\\nimport { ListServerItem } from \'../threejs-basic/receipe\';\\nimport { catchError, delay, distinctUntilChanged, filter, map } from \'rxjs/operators\';\\n\\ninterface ListServiceState {\\n  list: any[];\\n  loading: boolean;\\n  error: string;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ListService {\\n  private state$ = new BehaviorSubject<Partial<ListServiceState>>({\\n    list: [],\\n    loading: false,\\n    error: \'\',\\n  });\\n\\n  list$ = this.state$.pipe(\\n    map((s) => s.list),\\n    distinctUntilChanged()\\n  );\\n\\n  errorSignal$ = this.state$.pipe(\\n    map((s) => s.error),\\n    filter((b) => !!b)\\n  );\\n  successSignal$ = this.state$.pipe(\\n    map(({ loading, error }) => ({ loading, error })),\\n    filter((o) => o.loading === false && o.error !== \'\')\\n  );\\n\\n  loadingSignal$ = this.state$.pipe(map(({ loading }) => loading));\\n\\n  constructor() {\\n    this.state$.subscribe(console.log);\\n  }\\n\\n  refetchList() {\\n    this.state$.next({ ...this.state$.getValue(), loading: true });\\n    this.httpGetListItem({ num: 1 })\\n      .pipe(catchError((e) => of({ error: e, loading: false, list: [] })))\\n      .subscribe((slice) => {\\n        console.log(\'list: \', this.state$.getValue());\\n        return this.state$.next({\\n          error: \'\',\\n          list: [...this.state$.value.list, ...slice.list],\\n          loading: false,\\n        });\\n      });\\n  }\\n\\n  httpGetListItem = (arg?: any): Observable<{ list: any[] }> =>\\n    of(getData(arg)).pipe(\\n      delay(~~(Math.random() * 5000)),\\n      map((list) => ({ list }))\\n    );\\n}\\n\\nexport function getData(cfg = { num: 5 }): ListServerItem[] {\\n  const randId = (s: string) => s + ~~(Math.random() * 100);\\n  return new Array(cfg.num).fill(cfg.num).map((_) => ({\\n    id: randId(\'id\'),\\n    name: randId(\'name\'),\\n    created: Date.now() / 1000 + \'\',\\n  }));\\n}","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":36},"type":"injectable"},{"name":"Presenter","id":"injectable-Presenter-e1a2a59a5e894120dfe6acfa7f1282d1080d19bc3d0618a1406a1fd1a3d98e2d900cb2f1855bcf37a37b0caba0abd5e5bf62b249337ec0b021ffbd15f6555cb6","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","properties":[{"name":"listExpandedChanges","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"refreshClicks","defaultValue":"new Subject<Event>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"refreshListTrigger$","defaultValue":"merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37},{"name":"vm$","defaultValue":"this.select()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Observable,switchMap } from \'rxjs\';\\nimport { filter } from \'rxjs/operators\';\\nimport { Subject } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { Injectable } from \'@angular/core\';\\nimport { merge,  timer } from \'rxjs\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\nexport interface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n\\n\\n@Injectable()\\nexport class Presenter extends RxState<ComponentState> {\\n  refreshClicks = new Subject<Event>();\\n  listExpandedChanges = new Subject<boolean>();\\n\\n  vm$ = this.select();\\n  // 👇 user interaction is collected in presenter\\n  refreshListTrigger$ = merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )\\n\\n  constructor() {\\n    super();\\n    this.set(initComponentState);\\n      // 👇 user open close data is stored in store\\n    this.connect(\\n      this.listExpandedChanges.pipe(map((b) => ({ listExpanded: b })))\\n    );\\n  }\\n\\n}\\n\\n\\n@Injectable()\\nexport class Adapter extends RxState<Pick<ComponentState, \'list\'>> {\\n\\n  list$ = this.select(\'list\');\\n  constructor(\\n    private listService: ListService\\n  ) {\\n    super();\\n      // 👇 store list is populated using service\\n    this.connect(\'list\', this.listService.list$\\n      .pipe(map(this.parseListItems))\\n    );\\n  }\\n\\n  refresh = () => {\\n    this.listService.refetchList()\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-rxstate-presenter\',\\n  templateUrl: \'./rxstate-presenter.component.html\',\\n  styleUrls: [\'./rxstate-presenter.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RxstatePresenterComponent {\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\n@Component({\\n  selector: \'rxa-presenter-pattern-solution\',\\n  template: `\\n    <h3>Presenter Pattern</h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"ps.vm$ | async as m\\"\\n      (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n      [expanded]=\\"m.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          User Name\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span *ngIf=\\"!m.listExpanded\\"\\n          >{{ m.list.length }} Repositories Updated every:\\n            {{ m.refreshInterval }} ms</span\\n          >\\n          <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"ps.refreshClicks.next($event)\\"\\n      >\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"m.list.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of m.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [Presenter, Adapter]\\n})\\nexport class PresenterPatternSolution extends RxState<any> {\\n\\n  @Input()\\n  set refreshInterval(refreshInterval$: Observable<number>) {\\n    this.ps.connect(\'refreshInterval\', refreshInterval$.pipe(\\n      filter(i => null? i > 100: false)\\n    ));\\n  }\\n\\n  constructor(\\n    public ps: Presenter,\\n    public ad: Adapter\\n  ) {\\n    super();\\n    // 👇 update the store\\n    this.ps.connect(\'list\', this.ad.list$);\\n    // 👇 side effects is managed here\\n    this.hold(this.ps.refreshListTrigger$, this.ad.refresh);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":43},"extends":"RxState","type":"injectable"},{"name":"UserdataService","id":"injectable-UserdataService-578176cc93c06b8f7597e18b9ef25032660d51a631d62d054caefc59ccf754a795756f817f5e2aab56626d8edc2e12ef101ede50cd9fffcf49240d1c3b131891","file":"src/app/service/userdata.service.ts","properties":[{"name":"_recipes","defaultValue":"[\\r\\n    createRecipe({\\r\\n      id: \'cauliflower-pomegranate-and-pistachio-salad\',\\r\\n      description:\\r\\n        \'It was a little moment of revelation, I remember, when I first combined roasted cauliflower and raw grated cauliflower in the same dish. So different from one another, but working so well combined. This is lovely as it is, served as part of a spread, or spooned alongside some roast chicken or lamb. Don’t throw away the leaves of the cauliflower here. They’re lovely to eat, roasted and crisp, or grated raw as you would the rest of the cauliflower. If you want to get ahead, roast the cauliflower up to 4–6 hours in advance. Keep at room temperature and then just combine with the remaining ingredients when ready to serve.\',\\r\\n      name: \'Cauliflower, pomegranate and pistachio salad\',\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'large cauliflower (800g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'medium onion, roughly sliced (130g)\',\\r\\n        },\\r\\n        { quantity: { amount: 80, unit: \'ml\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 25, unit: \'g\' },\\r\\n          name: \'parsley, roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 10, unit: \'g\' }, name: \'mint, roughly chopped\' },\\r\\n        {\\r\\n          quantity: { amount: 10, unit: \'g\' },\\r\\n          name: \'tarragon, roughly chopped\',\\r\\n        },\\r\\n        { name: \'seeds from ½ medium pomegranate (80g)\' },\\r\\n        {\\r\\n          quantity: { amount: 40, unit: \'g\' },\\r\\n          name: \'pistachio kernels, lightly toasted and roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'tsp\' }, name: \'ground cumin\' },\\r\\n        { quantity: { amount: 1, unit: \'unit\' }, name: \'½ tbsp lemon juice\' },\\r\\n        { name: \'salt\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Cauliflower,-pomegranate-and-pistachio-salad.jpg\',\\r\\n      steps: [\\r\\n        \'Preheat the oven to 200°C fan.\',\\r\\n        \'Coarsely grate a third of the cauliflower and set aside in a bowl. Break the remaining cauliflower into florets, roughly 3cm wide, and add these to a separate bowl with the cauliflower leaves, if you have any, and onion. Toss everything together with 2 tablespoons of oil and ¼ teaspoon of salt, then spread out on a large parchment-lined baking tray. Roast for about 20 minutes, until cooked through and golden-brown. Remove from the oven and set aside to cool.\',\\r\\n        \'Once cool, put the roasted vegetables into a large bowl with the 50ml oil, the grated cauliflower and the remaining ingredients, along with ¼ teaspoon of salt. Toss gently, just to combine, then transfer to a platter and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'braised-eggs-with-leek-and-za-atar\',\\r\\n      description:\\r\\n        \'This is a quick way to get a very comforting meal on the table in a wonderfully short amount of time. It’s a dish as happily eaten for brunch, with coffee, as it is for a light supper with some crusty white bread and a glass of wine. The leeks and spinach can be made up to a day ahead and kept in the fridge, ready for the eggs to be cracked in and braised.\',\\r\\n      name: \'Braised eggs with leek and za’atar\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 30, unit: \'g\' }, name: \'unsalted butter\' },\\r\\n        { quantity: { amount: 2, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name:\\r\\n            \'large leeks (or 4 smaller), trimmed and cut into ½ cm slices (530g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'cumin seeds, toasted and lightly crushed\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name:\\r\\n            \'small preserved lemons, pips discarded, skin and flesh finely chopped (30g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 300, unit: \'ml\' },\\r\\n          name: \'vegetable stock 200g baby spinach leaves\',\\r\\n        },\\r\\n        { quantity: { amount: 6, unit: \'unit\' }, name: \'large eggs\' },\\r\\n        {\\r\\n          quantity: { amount: 90, unit: \'g\' },\\r\\n          name: \'feta, broken into 2cm pieces\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'tbsp\' }, name: \\"za\'atar\\" },\\r\\n        { name: \'salt and black pepper\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Braised-eggs-with-leek-and-za%E2%80%99atar.jpg\',\\r\\n      steps: [\\r\\n        \'Put the butter and 1 tablespoon of oil into a large sauté pan, for which you have a lid, and place on a medium high heat. Once the butter starts to foam, add the leeks, ½ teaspoon of salt and plenty of pepper. Fry for 3 minutes, stirring frequently, until the leeks are soft. Add the cumin, lemon and vegetable stock and boil rapidly for 4–5 minutes, until most of the stock has evaporated. Fold in the spinach and cook for a minute, until wilted, then reduce the heat to medium.\',\\r\\n        \'Use a large spoon to make 6 indentations in the mixture and break one egg into each space. Sprinkle the eggs with a pinch of salt, dot the feta around the eggs, then cover the pan. Simmer for 4–5 minutes, until the egg whites are cooked but the yolks are still runny.\',\\r\\n        \'Mix the za’atar with the remaining tablespoon of oil and brush over the eggs. Serve at once, straight from the pan.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'buckwheat-and-ricotta-hotcakes-with-preserved-lemon-salsa\',\\r\\n      description:\\r\\n        \'I prefer to use buckwheat groats for this batter, rather than buckwheat flour: they have a more intense flavour, as well as a more interesting texture. Pickle the onions the night before serving, if you can: their flavour and colour will both get more vibrant with time. If you want, top with a fried egg, though if you do so, you won’t need the extra ricotta to serve.\',\\r\\n      name: \'Buckwheat and ricotta hotcakes with preserved lemon salsa\',\\r\\n      ingredients: [\\r\\n        { name: \'For the hotcakes\' },\\r\\n        {\\r\\n          quantity: { amount: 150, unit: \'g\' },\\r\\n          name:\\r\\n            \'raw buckwheat groats, soaked in plenty of cold water for 3-4 hours (any less, and they won&rsquo;t soften enough, longer and they will disintegrate)\',\\r\\n        },\\r\\n        { quantity: { amount: 150, unit: \'ml\' }, name: \'whole milk\' },\\r\\n        {\\r\\n          quantity: { amount: 20, unit: \'g\' },\\r\\n          name: \'parmesan, finely grated\',\\r\\n        },\\r\\n        { quantity: { amount: 50, unit: \'g\' }, name: \'basil leaves\' },\\r\\n        { quantity: { amount: 30, unit: \'g\' }, name: \'dill\' },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'eggs, whites and yolks separated\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n        {\\r\\n          quantity: { amount: 140, unit: \'g\' },\\r\\n          name:\\r\\n            \'ricotta (or just 60g if serving with fried eggs: see introduction)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 40, unit: \'g\' },\\r\\n          name: \'unsalted butter, for frying\',\\r\\n        },\\r\\n        { name: \'For the pickled onion salsa\' },\\r\\n        { quantity: { amount: 60, unit: \'ml\' }, name: \'white-wine vinegar\' },\\r\\n        { quantity: { amount: 2, unit: \'tsp\' }, name: \'sumac\' },\\r\\n        { name: \'¾ tsp caster sugar\' },\\r\\n        { name: \'Finely shaved peel of 1 lime\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name:\\r\\n            \'garlic clove, roughly bashed with the flat of a knife but left unpeeled\',\\r\\n        },\\r\\n        { name: \'½ red onion, peeled and cut into 2- to 3mm-thick slices\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'½ tbsp olive oil, plus extra to serve\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name:\\r\\n            \'-2 small preserved lemons, flesh cut off and discarded, skin chopped into 0.5cm dice\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 10, unit: \'g\' },\\r\\n          name: \'coriander leaves, chopped\',\\r\\n        },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Buckwheat-and-ricotta-hotcakes-with-preserved-lemon-salsa.jpg\',\\r\\n      steps: [\\r\\n        \'Start with the salsa. Combine the vinegar, sumac, sugar, lime peel, garlic and onion in a medium bowl with half a teaspoon of salt, then leave to pickle for at least three hours (and preferably overnight).\',\\r\\n        \'To make the hotcake batter, put the buckwheat groats, milk, parmesan, basil, dill and egg yolks in a food processor with half a teaspoon of salt. Whizz on high speed until you have a uniform batter, then tip into a large bowl, stir in 60g ricotta and set to one side. Don&rsquo;t worry if the batter discolours after a few minutes: it will brighten up again once fried.\',\\r\\n        \'Whisk the egg whites to stiff peaks, then, using a spatula, gradually and gently fold them into the batter: you want to keep as much air in the mixture as possible, so take care not to overwork it.\',\\r\\n        \'Drain the pickled onions, discarding the lime peel and garlic, and put them in a medium bowl with the oil, preserved lemon, coriander and a generous grind of pepper. Stir to combine and set aside.\',\\r\\n        \'Melt 10g butter in a large, nonstick frying pan on a medium-high heat. You&rsquo;ll need about three tablespoons of batter per pancake, and you&rsquo;ll need to cook them in batches of two or three at a time, spaced well apart. Once the pancakes are in the pan, fry them for about four minutes, turning halfway, until golden on both sides, then transfer to a plate lined with kitchen towel to drain. Keep warm while you repeat with the remaining batter, adding more butter as and when you need it. (If you plan to top your hotcakes with fried eggs, make these once all the batter is cooked.)\',\\r\\n        \'Serve two or three warm pancakes a portion with the salsa and remaining ricotta (if you&rsquo;re not adding an egg) alongside. Add a final drizzle of olive oil and a generous grind of pepper, and serve hot.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'stuffed-romano-peppers-with-ricotta-and-mascarpone\',\\r\\n      description: \'Use the best quality ricotta you can find for this.\',\\r\\n      name: \'Stuffed Romano peppers with ricotta and mascarpone\',\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 6, unit: \'unit\' },\\r\\n          name: \'Romano peppers (650g)\',\\r\\n        },\\r\\n        { quantity: { amount: 200, unit: \'g\' }, name: \'ricotta\' },\\r\\n        {\\r\\n          quantity: { amount: 100, unit: \'g\' },\\r\\n          name: \'mascarpone or cream cheese\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 40, unit: \'g\' },\\r\\n          name: \'pine nuts, lightly toasted\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 10, unit: \'g\' },\\r\\n          name: \'fresh oregano leaves, roughly chopped\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'grated lemon zest, plus 1 tsp juice\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'best-quality balsamic vinegar\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'small green chilli, cut into paper-thin slices\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Stuffed-Romano-peppers-with-ricotta-and-mascarpone.jpg\',\\r\\n      steps: [\\r\\n        \'Preheat the oven to 180C.\',\\r\\n        \'Use a little knife to make a small vertical incision – about 6 centimeters long – from the top towards the end of each pepper. You will use this incision to scoop out the seeds later. Arrange the pepper on a roasting tray and place in the oven for 30 minutes, until soft. Remove and set aside to cool before using a small spoon to carefully extract and discard the seeds. The aim is to leave the stem on the peppers when they are stuffed so take your time here: it’s a fiddly job. Peel the skin off the peppers – again, don’t rush here – and set aside on a kitchen paper-lined plate to dry.\',\\r\\n        \'To make the filling place the cheeses, nuts, oregano, lemon zest, lemon juice and 1 teaspoon of olive oil in a large bowl. Add half a teaspoon of salt and a good grind of black pepper and whisk well. Spoon about 2 tablespoons of the cheese mixture into each pepper and press evenly inside. Don’t worry if the incision increases in the process: you can use your hands to seal the pepper.\',\\r\\n        \'Wipe the peppers clean and place them on individual serving plates. Drizzle 2 teaspoons of olive oil around each pepper and then dot the oil with a few drops of the balsamic. Sprinkle over a few slices of the green chilli and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'slow-cooked-chicken-with-a-crisp-corn-crust\',\\r\\n      description:\\r\\n        \'This is a wonderful meal on an autumn day, served with a crisp green salad. The slow-cooked chicken is packed full of flavour and the crust – gluten-free, rich and corny – makes for a welcome (and lighter) change to a heavier mash.\\\\nYou can make the chicken well in advance if you want to get ahead: it keeps in the fridge for up to 3 days or can be frozen for 1 month. You want it to go into the oven defrosted, though, so it will need thawing out of the freezer. The batter needs to be made fresh and spooned on top of the chicken just before the dish gets baked, but it then can just go back in the oven. It can also be baked a few hours in advance – just warm through for 10 minutes, covered in foil, before serving. I love the combination of the chicken and the corn, but the chicken also works well as it is, served on top of rice, in a wrap or with a buttery jacket potato.\',\\r\\n      name: \'Slow-cooked chicken with a crisp corn crust\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 3, unit: \'unit\' },\\r\\n          name: \'red onions, thinly sliced (500g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'garlic cloves, crushed\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'rose harissa (60g)\' },\\r\\n        { quantity: { amount: 2, unit: \'tsp\' }, name: \'sweet smoked paprika\' },\\r\\n        {\\r\\n          quantity: { amount: 850, unit: \'g\' },\\r\\n          name:\\r\\n            \'chicken thighs, skinless and boneless (about 9&ndash;10 thighs)\',\\r\\n        },\\r\\n        { quantity: { amount: 200, unit: \'ml\' }, name: \'passata\' },\\r\\n        {\\r\\n          quantity: { amount: 5, unit: \'unit\' },\\r\\n          name: \'large tomatoes, quartered (400g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 200, unit: \'g\' },\\r\\n          name:\\r\\n            \'jarred roasted red peppers, drained and cut into 2cm thick rounds\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 15, unit: \'g\' },\\r\\n          name: \'dark chocolate (70% cocoa solids)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 20, unit: \'g\' },\\r\\n          name: \'coriander, roughly chopped\',\\r\\n        },\\r\\n        { name: \'salt and black pepper\' },\\r\\n        { name: \'SWEETCORN BATTER\' },\\r\\n        {\\r\\n          quantity: { amount: 70, unit: \'g\' },\\r\\n          name: \'unsalted butter, melted\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 500, unit: \'g\' },\\r\\n          name:\\r\\n            \'corn kernels, fresh or frozen and defrosted (shaved corn kernels from 4 large corn cobs, if starting from fresh)\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'whole milk\' },\\r\\n        {\\r\\n          quantity: { amount: 3, unit: \'unit\' },\\r\\n          name: \'eggs, yolks and whites separated\',\\r\\n        },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Slow-cooked-chicken-with-a-crisp-corn-crust.jpg\',\\r\\n      steps: [\\r\\n        \'Heat the oil in a large sauté pan, for which you have a lid, on a medium high heat. Add the onions and fry for 8–9 minutes, stirring a few times, until caramelised and soft. Reduce the heat to medium and add the garlic, harissa, paprika, chicken, 1 teaspoon of salt and a good grind of black pepper. Cook for 5 minutes, stirring frequently, then add the passata and tomatoes. Pour over 350ml of water, bring to the boil, then simmer on a medium heat, covered, for 30 minutes, stirring every once in a while.\',\\r\\n        \'Add the peppers and chocolate and continue to simmer for another 35–40 minutes, with the pan now uncovered, stirring frequently, until the sauce is getting thick and the chicken is falling apart. Remove from the heat and stir in the coriander. If you are serving the chicken as it is (as a stew without the batter), it’s ready to serve (or freeze, once it’s come to room temperature) at this stage. If you are making the corn topping, spoon the chicken into a ceramic baking dish – one with high sides that measures about 20 x 30cm – and set aside.\',\\r\\n        \'Preheat the oven to 180°C fan.\',\\r\\n        \'Pour the butter into a blender with the corn, milk, egg yolks and ¾ teaspoon salt. Blitz for a few seconds, to form a rough paste, then spoon into a large bowl. Place the egg whites in a separate clean bowl and whisk to form firm peaks. Fold these gently into the runny corn mixture until just combined, then pour the mix evenly over the chicken.\',\\r\\n        \'Bake for 35 minutes, until the top is golden-brown: keep an eye on it after 25 minutes to make sure the top is not taking on too much colour: you might need to cover it with tin foil for the final 10 minutes. Remove from the oven and set aside for 10 minutes before serving.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'pappardelle-with-rose-harissa-black-olives-and-capers\',\\r\\n      description:\\r\\n        \'Pappare means ‘to gobble up’, in Italian, which is the destiny of this dish (particularly in Tara’s house, where her husband Chris makes it most Sunday nights). I like it spicy, but the quantity of harissa can easily be reduced. Make the sauce 3 days ahead if you like and keep in the fridge until needed.\',\\r\\n      name: \'Pappardelle with rose harissa, black olives and capers\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 2, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'large onion, thinly sliced (220g)\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'rose harissa\' },\\r\\n        {\\r\\n          name: \'(or 50% more or less, depending on variety: see p.301) (45g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 400, unit: \'g\' },\\r\\n          name: \'cherry tomatoes, halved\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 55, unit: \'g\' },\\r\\n          name: \'pitted Kalamata olives, torn in half\',\\r\\n        },\\r\\n        { quantity: { amount: 20, unit: \'g\' }, name: \'baby capers\' },\\r\\n        {\\r\\n          quantity: { amount: 500, unit: \'g\' },\\r\\n          name: \'dried pappardelle pasta (or another wide, flat pasta)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 15, unit: \'g\' },\\r\\n          name: \'parsley, roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 120, unit: \'g\' }, name: \'Greek-style yoghurt\' },\\r\\n        { name: \'salt\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Pappardelle-with-rose-harissa,-black-olives-and-capers.jpg\',\\r\\n      steps: [\\r\\n        \'Put the oil into a large sauté pan, for which you have a lid, and place on a medium high heat. Once hot, add the onion and fry for 8 minutes, stirring every once in a while, until soft and caramelised. Add the harissa, tomatoes, olives, capers and ½ teaspoon of salt and continue to fry for 3–4 minutes, stirring frequently, until the tomatoes start to break down. Add 200ml of water and stir through. Once boiling, reduce the heat to medium low, cover the pan and simmer for 10 minutes. Remove the lid of the sauce and continue to cook for 4–5 minutes, until the sauce is thick and rich. Stir in 10g of the parsley and set aside.\',\\r\\n        \'Meanwhile, fill a large pot with plenty of salted water and place on a high heat. Once boiling, add the pappardelle and cook according to the packet instructions, until al dente. Drain well.\',\\r\\n        \'Return the pasta to the pot along with the harissa sauce and 1/8 teaspoon of salt. Mix together well, then divide between four shallow bowls. Serve hot, with a spoonful of yoghurt and a final sprinkle of parsley.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'baked-ricotta-with-figs-and-lavender-honey\',\\r\\n      description:\\r\\n        \\"Here\'s an elegant starter that is almost effortless. Choose ripe figs and adjust the amount of honey to their sweetness. Garnish the plate with fresh or dried lavender if you have some and want a visually impressive result.\\",\\r\\n      name: \'Baked ricotta with figs and lavender honey\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 500, unit: \'g\' }, name: \'good quality ricotta\' },\\r\\n        { name: \'½ tsp salt\' },\\r\\n        { name: \'Freshly ground black pepper\' },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'chopped rosemary, plus extra sprigs for garnish\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'fresh figs, cut into quarters or six\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 3, unit: \'tbsp\' },\\r\\n          name: \'lavender honey or heather honey\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 120, unit: \'g\' },\\r\\n          name: \'mixed bitter salad leaves\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'slices sourdough bread, toasted\',\\r\\n        },\\r\\n        { name: \'For the dressing:\' },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'lavender honey or heather honey\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'unit\' }, name: \'tbsp\' },\\r\\n        { name: \'red wine vinegar\' },\\r\\n        { name: \'Pinch salt\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Baked-ricotta-with-figs-and-lavender-honey.jpg\',\\r\\n      steps: [\\r\\n        \'Preheat the oven to 180C/350F/ gas mark 4. Put the ricotta in the centre of a clean tea towel, squeeze to get rid of some of the liquid, then transfer the cheese to a bowl, season and mix well.\',\\r\\n        \'Lightly oil four individual ramekins or one round ovenproof dish about 15cm in diameter (this dish looks great in a brown terracotta one). Spread the ricotta inside and level with a palette knife or a spoon - the cheese should come about 2.5cm up the sides.\',\\r\\n        \'Drizzle half the olive oil over the cheese, sprinkle with chopped rosemary and lay a small rosemary sprig on top. Bake for about 20 minutes for individual ramekins, 28 minutes for a large dish, then remove from the oven, top with the figs, drizzle over half the honey and bake again for eight minutes longer. At this point the figs should be semi-cooked but retain their shape.\',\\r\\n        \'Remove from the oven and allow to cool down slightly. You can serve the cheese slightly warm or at room temperature.\',\\r\\n        \'When ready to serve, whisk together the dressing ingredients in a large bowl. Add the salad leaves and toss. If using individual ramekins, carefully remove the cheese, keeping the figs on top, place on a plate, drizzle the remaining oil and honey on top, and serve with the salad and bread on the side. With the large dish, simply use a large spoon to scoop out a generous portion of cheese and place on the bread slice, making sure some figs are left on top, then drizzle with honey and oil. Place a mound of salad on the side.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'irish-stew\',\\r\\n      description: \'\',\\r\\n      name: \\"Irish\' stew\\",\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 300, unit: \'g\' },\\r\\n          name: \'whole wheat, soaked overnight in water\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'kg lamb loin chops, boned, trimmed and cut into 3cm cubes\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n        { quantity: { amount: 120, unit: \'ml\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 24, unit: \'unit\' },\\r\\n          name: \'shallots, skinned but left whole\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'large carrots, cut into 2.5cm x 5cm batons\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'turnips, peeled and cut into 3cm wedges\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'celeriac, peeled and cut into 2.5cm x 5cm batons\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 350, unit: \'g\' },\\r\\n          name: \'baby charlotte potatoes, halved\',\\r\\n        },\\r\\n        { quantity: { amount: 150, unit: \'ml\' }, name: \'white wine\' },\\r\\n        { quantity: { amount: 1, unit: \'tsp\' }, name: \'caster sugar\' },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name:\\r\\n            \'sprigs of fresh thyme, 4 of oregano and 2 of parsley, tied with string, plus extra parsley to serve\',\\r\\n        },\\r\\n        { quantity: { amount: 450, unit: \'ml\' }, name: \'chicken stock\' },\\r\\n        { name: \'For the paste:\' },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'garlic cloves, peeled and roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 30, unit: \'g\' }, name: \'parsley, chopped\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'½ tsp grated orange zest\',\\r\\n        },\\r\\n        { quantity: { amount: 60, unit: \'ml\' }, name: \'olive oil\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \\"https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Irish\'-stew.jpg\\",\\r\\n      steps: [\\r\\n        \'Heat the oven to 180C/350F/gas mark 4. Drain and rinse the soaked wheat, put it in a medium pan with lots of water, bring to a boil and simmer for an hour, until cooked. Drain and set aside.\',\\r\\n        \\"Season the lamb with a teaspoon of salt and some black pepper. Put one tablespoon of oil in a large, deep sauté pan for which you have a lid; place on a medium-high heat. Add some of the lamb – don\'t overcrowd the pan – and sear for four minutes on all sides. Transfer to a bowl, and repeat with the remaining lamb, adding oil as needed.\\",\\r\\n        \'Lower the heat to medium and add a tablespoon of oil to the pan. Add the shallots and fry for four minutes, until caramelised. Tip these into the lamb bowl, and repeat with the remaining vegetables until they are all nice and brown, adding more oil as you need it.\',\\r\\n        \'Once all the vegetables are seared and removed from the pan, add the wine along with the sugar, herbs, a teaspoon of salt and a good grind of black pepper. Boil on a high heat for about three minutes.\',\\r\\n        \'Tip the lamb, vegetables and whole wheat back into the pot, and add the stock. Cover and boil for five minutes, then transfer to the oven for an hour and a half.\',\\r\\n        \'Meanwhile, make the paste. Put all the ingredients in a food processor with a pinch of salt and work to a rough paste.\',\\r\\n        \'Remove the stew from the oven and check the liquid; if there is a lot, remove the lid and boil for a few minutes. Divide between plates, drizzle over the paste, scatter on the parsley and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'chermoula-basted-halibut-with-farro\',\\r\\n      description:\\r\\n        \\"Farro is an old Italian wheat variety that\'s said to be the same as emmer or spelt, though I\'m not so sure. It can be eaten by some people who are normally intolerant of wheat and is sold pearled or whole.\\",\\r\\n      name: \'Chermoula-basted halibut with farro\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 120, unit: \'g\' }, name: \'farro\' },\\r\\n        {\\r\\n          quantity: { amount: 380, unit: \'g\' },\\r\\n          name: \'podded broad beans, fresh or frozen\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'halibut fillets, about 150g each\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'tbsp\' }, name: \'dried lime powder\' },\\r\\n        { quantity: { amount: 5, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        { name: \'Juice of ½ lemon\' },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n        { quantity: { amount: 1, unit: \'unit\' }, name: \'½ tbsp picked dill\' },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'lemon wedges, to serve\',\\r\\n        },\\r\\n        { name: \'For the chermoula:\' },\\r\\n        { quantity: { amount: 1, unit: \'tsp\' }, name: \'ground cumin\' },\\r\\n        { name: \'½ tsp paprika\' },\\r\\n        { name: \'½ tsp dried lime powder\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'small garlic, crushed\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'tsp\' },\\r\\n          name: \'finely chopped preserved lemon skin\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'chopped flat-leaf parsley\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'chopped fresh coriander leaves\',\\r\\n        },\\r\\n        { quantity: { amount: 2, unit: \'unit\' }, name: \'½ tbsp olive oil\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Chermoula-basted-halibut-with-farro.jpg\',\\r\\n      steps: [\\r\\n        \'Simmer the farro in plenty of water for 20 minutes to an hour – the cooking time will depend on the brand; you want it tender with just a little bite. Drain and set aside.\',\\r\\n        \'Cook the broad beans in salted boiling water for two minutes, drain, refresh under cold water, then remove and discard the skins.\',\\r\\n        \'Preheat the oven to 200C/400F/gas mark 6. Mix the chermoula ingredients and season well. Put the fish in a heatproof dish or oven tray lined with baking paper, brush with the chermoula, and roast for eight to 10 minutes, until just done.\',\\r\\n        \'Mix the farro, beans, Iranian lime, olive oil, lemon juice, salt and pepper in a medium pan, heat up gently and divide among four plates. Top with the fish, garnish with dill and serve with a lemon wedge\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'roasted-chicken-legs-with-dates-olives-and-capers\',\\r\\n      description:\\r\\n        \\"The Silver Palate, by Julee Rosso and Sheila Lukins, is one of the best cookbooks I know and a classic of the 1980s, listing recipes from the first modern quality take-out food shop in New York. Many of the dishes in the book have become legendary. One of them, Chicken Marbella, is the inspiration for this recipe. The chicken needs marinading for at least a day, preferably two, to soften and flavour properly; I wouldn\'t cut corners here.\\",\\r\\n      name: \'Roast chicken with dates, olives and capers\',\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 8, unit: \'unit\' },\\r\\n          name: \'chicken legs, drumstick and thigh attached, skin on (2kg net)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 5, unit: \'unit\' },\\r\\n          name: \'garlic cloves, crushed\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 15, unit: \'g\' },\\r\\n          name: \'fresh oregano, torn, plus extra for garnish\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'red wine vinegar\' },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        { quantity: { amount: 100, unit: \'g\' }, name: \'pitted green olives\' },\\r\\n        {\\r\\n          quantity: { amount: 60, unit: \'g\' },\\r\\n          name: \'capers, plus 2 tbsp of their juices\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 70, unit: \'g\' },\\r\\n          name: \', pitted and quartered lengthways Medjoul dates\',\\r\\n        },\\r\\n        { quantity: { amount: 2, unit: \'unit\' }, name: \'bay leaves\' },\\r\\n        { quantity: { amount: 120, unit: \'ml\' }, name: \'dry white wine\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'date syrup or treacle\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Roast-chicken-with-dates,-olives-and-capers.jpg\',\\r\\n      steps: [\\r\\n        \'Place the chicken in a large, non-reactive bowl and add all of the ingredients, apart from the wine and date molasses, along with ¾ teaspoon of salt and a good grind of black pepper. Gently mix everything together, cover the bowl and leave in the fridge to marinate for 1 to 2 days, stirring the ingredients a few times during the process.\',\\r\\n        \'Preheat the oven to 180C.\',\\r\\n        \'Spread out the chicken legs on a large baking tray, along with all the marinade ingredients. Whisk together the wine and molasses and pour over the meat. Place in the oven and cook for 50 minutes, basting 2 or 3 times, until the meat is golden brown on top and cooked through.\',\\r\\n        \'Remove from the oven, transfer everything to a large platter, sprinkle over some freshly picked oregano leaves and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":9,"modifierKind":[121]}],"methods":[{"name":"getRecipes","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":538,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { of, delay, defer } from \'rxjs\';\\r\\nimport { createRecipe } from \'../threejs-basic/receipe\';\\r\\n\\r\\n@Injectable({\\r\\n  providedIn: \'root\'\\r\\n})\\r\\nexport class UserdataService {\\r\\n  private _recipes = [\\r\\n    createRecipe({\\r\\n      id: \'cauliflower-pomegranate-and-pistachio-salad\',\\r\\n      description:\\r\\n        \'It was a little moment of revelation, I remember, when I first combined roasted cauliflower and raw grated cauliflower in the same dish. So different from one another, but working so well combined. This is lovely as it is, served as part of a spread, or spooned alongside some roast chicken or lamb. Don’t throw away the leaves of the cauliflower here. They’re lovely to eat, roasted and crisp, or grated raw as you would the rest of the cauliflower. If you want to get ahead, roast the cauliflower up to 4–6 hours in advance. Keep at room temperature and then just combine with the remaining ingredients when ready to serve.\',\\r\\n      name: \'Cauliflower, pomegranate and pistachio salad\',\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'large cauliflower (800g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'medium onion, roughly sliced (130g)\',\\r\\n        },\\r\\n        { quantity: { amount: 80, unit: \'ml\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 25, unit: \'g\' },\\r\\n          name: \'parsley, roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 10, unit: \'g\' }, name: \'mint, roughly chopped\' },\\r\\n        {\\r\\n          quantity: { amount: 10, unit: \'g\' },\\r\\n          name: \'tarragon, roughly chopped\',\\r\\n        },\\r\\n        { name: \'seeds from ½ medium pomegranate (80g)\' },\\r\\n        {\\r\\n          quantity: { amount: 40, unit: \'g\' },\\r\\n          name: \'pistachio kernels, lightly toasted and roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'tsp\' }, name: \'ground cumin\' },\\r\\n        { quantity: { amount: 1, unit: \'unit\' }, name: \'½ tbsp lemon juice\' },\\r\\n        { name: \'salt\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Cauliflower,-pomegranate-and-pistachio-salad.jpg\',\\r\\n      steps: [\\r\\n        \'Preheat the oven to 200°C fan.\',\\r\\n        \'Coarsely grate a third of the cauliflower and set aside in a bowl. Break the remaining cauliflower into florets, roughly 3cm wide, and add these to a separate bowl with the cauliflower leaves, if you have any, and onion. Toss everything together with 2 tablespoons of oil and ¼ teaspoon of salt, then spread out on a large parchment-lined baking tray. Roast for about 20 minutes, until cooked through and golden-brown. Remove from the oven and set aside to cool.\',\\r\\n        \'Once cool, put the roasted vegetables into a large bowl with the 50ml oil, the grated cauliflower and the remaining ingredients, along with ¼ teaspoon of salt. Toss gently, just to combine, then transfer to a platter and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'braised-eggs-with-leek-and-za-atar\',\\r\\n      description:\\r\\n        \'This is a quick way to get a very comforting meal on the table in a wonderfully short amount of time. It’s a dish as happily eaten for brunch, with coffee, as it is for a light supper with some crusty white bread and a glass of wine. The leeks and spinach can be made up to a day ahead and kept in the fridge, ready for the eggs to be cracked in and braised.\',\\r\\n      name: \'Braised eggs with leek and za’atar\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 30, unit: \'g\' }, name: \'unsalted butter\' },\\r\\n        { quantity: { amount: 2, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name:\\r\\n            \'large leeks (or 4 smaller), trimmed and cut into ½ cm slices (530g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'cumin seeds, toasted and lightly crushed\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name:\\r\\n            \'small preserved lemons, pips discarded, skin and flesh finely chopped (30g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 300, unit: \'ml\' },\\r\\n          name: \'vegetable stock 200g baby spinach leaves\',\\r\\n        },\\r\\n        { quantity: { amount: 6, unit: \'unit\' }, name: \'large eggs\' },\\r\\n        {\\r\\n          quantity: { amount: 90, unit: \'g\' },\\r\\n          name: \'feta, broken into 2cm pieces\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'tbsp\' }, name: \\"za\'atar\\" },\\r\\n        { name: \'salt and black pepper\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Braised-eggs-with-leek-and-za%E2%80%99atar.jpg\',\\r\\n      steps: [\\r\\n        \'Put the butter and 1 tablespoon of oil into a large sauté pan, for which you have a lid, and place on a medium high heat. Once the butter starts to foam, add the leeks, ½ teaspoon of salt and plenty of pepper. Fry for 3 minutes, stirring frequently, until the leeks are soft. Add the cumin, lemon and vegetable stock and boil rapidly for 4–5 minutes, until most of the stock has evaporated. Fold in the spinach and cook for a minute, until wilted, then reduce the heat to medium.\',\\r\\n        \'Use a large spoon to make 6 indentations in the mixture and break one egg into each space. Sprinkle the eggs with a pinch of salt, dot the feta around the eggs, then cover the pan. Simmer for 4–5 minutes, until the egg whites are cooked but the yolks are still runny.\',\\r\\n        \'Mix the za’atar with the remaining tablespoon of oil and brush over the eggs. Serve at once, straight from the pan.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'buckwheat-and-ricotta-hotcakes-with-preserved-lemon-salsa\',\\r\\n      description:\\r\\n        \'I prefer to use buckwheat groats for this batter, rather than buckwheat flour: they have a more intense flavour, as well as a more interesting texture. Pickle the onions the night before serving, if you can: their flavour and colour will both get more vibrant with time. If you want, top with a fried egg, though if you do so, you won’t need the extra ricotta to serve.\',\\r\\n      name: \'Buckwheat and ricotta hotcakes with preserved lemon salsa\',\\r\\n      ingredients: [\\r\\n        { name: \'For the hotcakes\' },\\r\\n        {\\r\\n          quantity: { amount: 150, unit: \'g\' },\\r\\n          name:\\r\\n            \'raw buckwheat groats, soaked in plenty of cold water for 3-4 hours (any less, and they won&rsquo;t soften enough, longer and they will disintegrate)\',\\r\\n        },\\r\\n        { quantity: { amount: 150, unit: \'ml\' }, name: \'whole milk\' },\\r\\n        {\\r\\n          quantity: { amount: 20, unit: \'g\' },\\r\\n          name: \'parmesan, finely grated\',\\r\\n        },\\r\\n        { quantity: { amount: 50, unit: \'g\' }, name: \'basil leaves\' },\\r\\n        { quantity: { amount: 30, unit: \'g\' }, name: \'dill\' },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'eggs, whites and yolks separated\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n        {\\r\\n          quantity: { amount: 140, unit: \'g\' },\\r\\n          name:\\r\\n            \'ricotta (or just 60g if serving with fried eggs: see introduction)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 40, unit: \'g\' },\\r\\n          name: \'unsalted butter, for frying\',\\r\\n        },\\r\\n        { name: \'For the pickled onion salsa\' },\\r\\n        { quantity: { amount: 60, unit: \'ml\' }, name: \'white-wine vinegar\' },\\r\\n        { quantity: { amount: 2, unit: \'tsp\' }, name: \'sumac\' },\\r\\n        { name: \'¾ tsp caster sugar\' },\\r\\n        { name: \'Finely shaved peel of 1 lime\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name:\\r\\n            \'garlic clove, roughly bashed with the flat of a knife but left unpeeled\',\\r\\n        },\\r\\n        { name: \'½ red onion, peeled and cut into 2- to 3mm-thick slices\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'½ tbsp olive oil, plus extra to serve\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name:\\r\\n            \'-2 small preserved lemons, flesh cut off and discarded, skin chopped into 0.5cm dice\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 10, unit: \'g\' },\\r\\n          name: \'coriander leaves, chopped\',\\r\\n        },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Buckwheat-and-ricotta-hotcakes-with-preserved-lemon-salsa.jpg\',\\r\\n      steps: [\\r\\n        \'Start with the salsa. Combine the vinegar, sumac, sugar, lime peel, garlic and onion in a medium bowl with half a teaspoon of salt, then leave to pickle for at least three hours (and preferably overnight).\',\\r\\n        \'To make the hotcake batter, put the buckwheat groats, milk, parmesan, basil, dill and egg yolks in a food processor with half a teaspoon of salt. Whizz on high speed until you have a uniform batter, then tip into a large bowl, stir in 60g ricotta and set to one side. Don&rsquo;t worry if the batter discolours after a few minutes: it will brighten up again once fried.\',\\r\\n        \'Whisk the egg whites to stiff peaks, then, using a spatula, gradually and gently fold them into the batter: you want to keep as much air in the mixture as possible, so take care not to overwork it.\',\\r\\n        \'Drain the pickled onions, discarding the lime peel and garlic, and put them in a medium bowl with the oil, preserved lemon, coriander and a generous grind of pepper. Stir to combine and set aside.\',\\r\\n        \'Melt 10g butter in a large, nonstick frying pan on a medium-high heat. You&rsquo;ll need about three tablespoons of batter per pancake, and you&rsquo;ll need to cook them in batches of two or three at a time, spaced well apart. Once the pancakes are in the pan, fry them for about four minutes, turning halfway, until golden on both sides, then transfer to a plate lined with kitchen towel to drain. Keep warm while you repeat with the remaining batter, adding more butter as and when you need it. (If you plan to top your hotcakes with fried eggs, make these once all the batter is cooked.)\',\\r\\n        \'Serve two or three warm pancakes a portion with the salsa and remaining ricotta (if you&rsquo;re not adding an egg) alongside. Add a final drizzle of olive oil and a generous grind of pepper, and serve hot.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'stuffed-romano-peppers-with-ricotta-and-mascarpone\',\\r\\n      description: \'Use the best quality ricotta you can find for this.\',\\r\\n      name: \'Stuffed Romano peppers with ricotta and mascarpone\',\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 6, unit: \'unit\' },\\r\\n          name: \'Romano peppers (650g)\',\\r\\n        },\\r\\n        { quantity: { amount: 200, unit: \'g\' }, name: \'ricotta\' },\\r\\n        {\\r\\n          quantity: { amount: 100, unit: \'g\' },\\r\\n          name: \'mascarpone or cream cheese\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 40, unit: \'g\' },\\r\\n          name: \'pine nuts, lightly toasted\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 10, unit: \'g\' },\\r\\n          name: \'fresh oregano leaves, roughly chopped\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'grated lemon zest, plus 1 tsp juice\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'best-quality balsamic vinegar\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'small green chilli, cut into paper-thin slices\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Stuffed-Romano-peppers-with-ricotta-and-mascarpone.jpg\',\\r\\n      steps: [\\r\\n        \'Preheat the oven to 180C.\',\\r\\n        \'Use a little knife to make a small vertical incision – about 6 centimeters long – from the top towards the end of each pepper. You will use this incision to scoop out the seeds later. Arrange the pepper on a roasting tray and place in the oven for 30 minutes, until soft. Remove and set aside to cool before using a small spoon to carefully extract and discard the seeds. The aim is to leave the stem on the peppers when they are stuffed so take your time here: it’s a fiddly job. Peel the skin off the peppers – again, don’t rush here – and set aside on a kitchen paper-lined plate to dry.\',\\r\\n        \'To make the filling place the cheeses, nuts, oregano, lemon zest, lemon juice and 1 teaspoon of olive oil in a large bowl. Add half a teaspoon of salt and a good grind of black pepper and whisk well. Spoon about 2 tablespoons of the cheese mixture into each pepper and press evenly inside. Don’t worry if the incision increases in the process: you can use your hands to seal the pepper.\',\\r\\n        \'Wipe the peppers clean and place them on individual serving plates. Drizzle 2 teaspoons of olive oil around each pepper and then dot the oil with a few drops of the balsamic. Sprinkle over a few slices of the green chilli and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'slow-cooked-chicken-with-a-crisp-corn-crust\',\\r\\n      description:\\r\\n        \'This is a wonderful meal on an autumn day, served with a crisp green salad. The slow-cooked chicken is packed full of flavour and the crust – gluten-free, rich and corny – makes for a welcome (and lighter) change to a heavier mash.\\\\nYou can make the chicken well in advance if you want to get ahead: it keeps in the fridge for up to 3 days or can be frozen for 1 month. You want it to go into the oven defrosted, though, so it will need thawing out of the freezer. The batter needs to be made fresh and spooned on top of the chicken just before the dish gets baked, but it then can just go back in the oven. It can also be baked a few hours in advance – just warm through for 10 minutes, covered in foil, before serving. I love the combination of the chicken and the corn, but the chicken also works well as it is, served on top of rice, in a wrap or with a buttery jacket potato.\',\\r\\n      name: \'Slow-cooked chicken with a crisp corn crust\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 3, unit: \'unit\' },\\r\\n          name: \'red onions, thinly sliced (500g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'garlic cloves, crushed\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'rose harissa (60g)\' },\\r\\n        { quantity: { amount: 2, unit: \'tsp\' }, name: \'sweet smoked paprika\' },\\r\\n        {\\r\\n          quantity: { amount: 850, unit: \'g\' },\\r\\n          name:\\r\\n            \'chicken thighs, skinless and boneless (about 9&ndash;10 thighs)\',\\r\\n        },\\r\\n        { quantity: { amount: 200, unit: \'ml\' }, name: \'passata\' },\\r\\n        {\\r\\n          quantity: { amount: 5, unit: \'unit\' },\\r\\n          name: \'large tomatoes, quartered (400g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 200, unit: \'g\' },\\r\\n          name:\\r\\n            \'jarred roasted red peppers, drained and cut into 2cm thick rounds\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 15, unit: \'g\' },\\r\\n          name: \'dark chocolate (70% cocoa solids)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 20, unit: \'g\' },\\r\\n          name: \'coriander, roughly chopped\',\\r\\n        },\\r\\n        { name: \'salt and black pepper\' },\\r\\n        { name: \'SWEETCORN BATTER\' },\\r\\n        {\\r\\n          quantity: { amount: 70, unit: \'g\' },\\r\\n          name: \'unsalted butter, melted\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 500, unit: \'g\' },\\r\\n          name:\\r\\n            \'corn kernels, fresh or frozen and defrosted (shaved corn kernels from 4 large corn cobs, if starting from fresh)\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'whole milk\' },\\r\\n        {\\r\\n          quantity: { amount: 3, unit: \'unit\' },\\r\\n          name: \'eggs, yolks and whites separated\',\\r\\n        },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Slow-cooked-chicken-with-a-crisp-corn-crust.jpg\',\\r\\n      steps: [\\r\\n        \'Heat the oil in a large sauté pan, for which you have a lid, on a medium high heat. Add the onions and fry for 8–9 minutes, stirring a few times, until caramelised and soft. Reduce the heat to medium and add the garlic, harissa, paprika, chicken, 1 teaspoon of salt and a good grind of black pepper. Cook for 5 minutes, stirring frequently, then add the passata and tomatoes. Pour over 350ml of water, bring to the boil, then simmer on a medium heat, covered, for 30 minutes, stirring every once in a while.\',\\r\\n        \'Add the peppers and chocolate and continue to simmer for another 35–40 minutes, with the pan now uncovered, stirring frequently, until the sauce is getting thick and the chicken is falling apart. Remove from the heat and stir in the coriander. If you are serving the chicken as it is (as a stew without the batter), it’s ready to serve (or freeze, once it’s come to room temperature) at this stage. If you are making the corn topping, spoon the chicken into a ceramic baking dish – one with high sides that measures about 20 x 30cm – and set aside.\',\\r\\n        \'Preheat the oven to 180°C fan.\',\\r\\n        \'Pour the butter into a blender with the corn, milk, egg yolks and ¾ teaspoon salt. Blitz for a few seconds, to form a rough paste, then spoon into a large bowl. Place the egg whites in a separate clean bowl and whisk to form firm peaks. Fold these gently into the runny corn mixture until just combined, then pour the mix evenly over the chicken.\',\\r\\n        \'Bake for 35 minutes, until the top is golden-brown: keep an eye on it after 25 minutes to make sure the top is not taking on too much colour: you might need to cover it with tin foil for the final 10 minutes. Remove from the oven and set aside for 10 minutes before serving.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'pappardelle-with-rose-harissa-black-olives-and-capers\',\\r\\n      description:\\r\\n        \'Pappare means ‘to gobble up’, in Italian, which is the destiny of this dish (particularly in Tara’s house, where her husband Chris makes it most Sunday nights). I like it spicy, but the quantity of harissa can easily be reduced. Make the sauce 3 days ahead if you like and keep in the fridge until needed.\',\\r\\n      name: \'Pappardelle with rose harissa, black olives and capers\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 2, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'large onion, thinly sliced (220g)\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'rose harissa\' },\\r\\n        {\\r\\n          name: \'(or 50% more or less, depending on variety: see p.301) (45g)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 400, unit: \'g\' },\\r\\n          name: \'cherry tomatoes, halved\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 55, unit: \'g\' },\\r\\n          name: \'pitted Kalamata olives, torn in half\',\\r\\n        },\\r\\n        { quantity: { amount: 20, unit: \'g\' }, name: \'baby capers\' },\\r\\n        {\\r\\n          quantity: { amount: 500, unit: \'g\' },\\r\\n          name: \'dried pappardelle pasta (or another wide, flat pasta)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 15, unit: \'g\' },\\r\\n          name: \'parsley, roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 120, unit: \'g\' }, name: \'Greek-style yoghurt\' },\\r\\n        { name: \'salt\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Pappardelle-with-rose-harissa,-black-olives-and-capers.jpg\',\\r\\n      steps: [\\r\\n        \'Put the oil into a large sauté pan, for which you have a lid, and place on a medium high heat. Once hot, add the onion and fry for 8 minutes, stirring every once in a while, until soft and caramelised. Add the harissa, tomatoes, olives, capers and ½ teaspoon of salt and continue to fry for 3–4 minutes, stirring frequently, until the tomatoes start to break down. Add 200ml of water and stir through. Once boiling, reduce the heat to medium low, cover the pan and simmer for 10 minutes. Remove the lid of the sauce and continue to cook for 4–5 minutes, until the sauce is thick and rich. Stir in 10g of the parsley and set aside.\',\\r\\n        \'Meanwhile, fill a large pot with plenty of salted water and place on a high heat. Once boiling, add the pappardelle and cook according to the packet instructions, until al dente. Drain well.\',\\r\\n        \'Return the pasta to the pot along with the harissa sauce and 1/8 teaspoon of salt. Mix together well, then divide between four shallow bowls. Serve hot, with a spoonful of yoghurt and a final sprinkle of parsley.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'baked-ricotta-with-figs-and-lavender-honey\',\\r\\n      description:\\r\\n        \\"Here\'s an elegant starter that is almost effortless. Choose ripe figs and adjust the amount of honey to their sweetness. Garnish the plate with fresh or dried lavender if you have some and want a visually impressive result.\\",\\r\\n      name: \'Baked ricotta with figs and lavender honey\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 500, unit: \'g\' }, name: \'good quality ricotta\' },\\r\\n        { name: \'½ tsp salt\' },\\r\\n        { name: \'Freshly ground black pepper\' },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tsp\' },\\r\\n          name: \'chopped rosemary, plus extra sprigs for garnish\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'fresh figs, cut into quarters or six\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 3, unit: \'tbsp\' },\\r\\n          name: \'lavender honey or heather honey\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 120, unit: \'g\' },\\r\\n          name: \'mixed bitter salad leaves\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'slices sourdough bread, toasted\',\\r\\n        },\\r\\n        { name: \'For the dressing:\' },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'lavender honey or heather honey\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'unit\' }, name: \'tbsp\' },\\r\\n        { name: \'red wine vinegar\' },\\r\\n        { name: \'Pinch salt\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Baked-ricotta-with-figs-and-lavender-honey.jpg\',\\r\\n      steps: [\\r\\n        \'Preheat the oven to 180C/350F/ gas mark 4. Put the ricotta in the centre of a clean tea towel, squeeze to get rid of some of the liquid, then transfer the cheese to a bowl, season and mix well.\',\\r\\n        \'Lightly oil four individual ramekins or one round ovenproof dish about 15cm in diameter (this dish looks great in a brown terracotta one). Spread the ricotta inside and level with a palette knife or a spoon - the cheese should come about 2.5cm up the sides.\',\\r\\n        \'Drizzle half the olive oil over the cheese, sprinkle with chopped rosemary and lay a small rosemary sprig on top. Bake for about 20 minutes for individual ramekins, 28 minutes for a large dish, then remove from the oven, top with the figs, drizzle over half the honey and bake again for eight minutes longer. At this point the figs should be semi-cooked but retain their shape.\',\\r\\n        \'Remove from the oven and allow to cool down slightly. You can serve the cheese slightly warm or at room temperature.\',\\r\\n        \'When ready to serve, whisk together the dressing ingredients in a large bowl. Add the salad leaves and toss. If using individual ramekins, carefully remove the cheese, keeping the figs on top, place on a plate, drizzle the remaining oil and honey on top, and serve with the salad and bread on the side. With the large dish, simply use a large spoon to scoop out a generous portion of cheese and place on the bread slice, making sure some figs are left on top, then drizzle with honey and oil. Place a mound of salad on the side.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'irish-stew\',\\r\\n      description: \'\',\\r\\n      name: \\"Irish\' stew\\",\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 300, unit: \'g\' },\\r\\n          name: \'whole wheat, soaked overnight in water\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'kg lamb loin chops, boned, trimmed and cut into 3cm cubes\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n        { quantity: { amount: 120, unit: \'ml\' }, name: \'olive oil\' },\\r\\n        {\\r\\n          quantity: { amount: 24, unit: \'unit\' },\\r\\n          name: \'shallots, skinned but left whole\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'large carrots, cut into 2.5cm x 5cm batons\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'turnips, peeled and cut into 3cm wedges\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'celeriac, peeled and cut into 2.5cm x 5cm batons\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 350, unit: \'g\' },\\r\\n          name: \'baby charlotte potatoes, halved\',\\r\\n        },\\r\\n        { quantity: { amount: 150, unit: \'ml\' }, name: \'white wine\' },\\r\\n        { quantity: { amount: 1, unit: \'tsp\' }, name: \'caster sugar\' },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name:\\r\\n            \'sprigs of fresh thyme, 4 of oregano and 2 of parsley, tied with string, plus extra parsley to serve\',\\r\\n        },\\r\\n        { quantity: { amount: 450, unit: \'ml\' }, name: \'chicken stock\' },\\r\\n        { name: \'For the paste:\' },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'unit\' },\\r\\n          name: \'garlic cloves, peeled and roughly chopped\',\\r\\n        },\\r\\n        { quantity: { amount: 30, unit: \'g\' }, name: \'parsley, chopped\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'½ tsp grated orange zest\',\\r\\n        },\\r\\n        { quantity: { amount: 60, unit: \'ml\' }, name: \'olive oil\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \\"https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Irish\'-stew.jpg\\",\\r\\n      steps: [\\r\\n        \'Heat the oven to 180C/350F/gas mark 4. Drain and rinse the soaked wheat, put it in a medium pan with lots of water, bring to a boil and simmer for an hour, until cooked. Drain and set aside.\',\\r\\n        \\"Season the lamb with a teaspoon of salt and some black pepper. Put one tablespoon of oil in a large, deep sauté pan for which you have a lid; place on a medium-high heat. Add some of the lamb – don\'t overcrowd the pan – and sear for four minutes on all sides. Transfer to a bowl, and repeat with the remaining lamb, adding oil as needed.\\",\\r\\n        \'Lower the heat to medium and add a tablespoon of oil to the pan. Add the shallots and fry for four minutes, until caramelised. Tip these into the lamb bowl, and repeat with the remaining vegetables until they are all nice and brown, adding more oil as you need it.\',\\r\\n        \'Once all the vegetables are seared and removed from the pan, add the wine along with the sugar, herbs, a teaspoon of salt and a good grind of black pepper. Boil on a high heat for about three minutes.\',\\r\\n        \'Tip the lamb, vegetables and whole wheat back into the pot, and add the stock. Cover and boil for five minutes, then transfer to the oven for an hour and a half.\',\\r\\n        \'Meanwhile, make the paste. Put all the ingredients in a food processor with a pinch of salt and work to a rough paste.\',\\r\\n        \'Remove the stew from the oven and check the liquid; if there is a lot, remove the lid and boil for a few minutes. Divide between plates, drizzle over the paste, scatter on the parsley and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'chermoula-basted-halibut-with-farro\',\\r\\n      description:\\r\\n        \\"Farro is an old Italian wheat variety that\'s said to be the same as emmer or spelt, though I\'m not so sure. It can be eaten by some people who are normally intolerant of wheat and is sold pearled or whole.\\",\\r\\n      name: \'Chermoula-basted halibut with farro\',\\r\\n      ingredients: [\\r\\n        { quantity: { amount: 120, unit: \'g\' }, name: \'farro\' },\\r\\n        {\\r\\n          quantity: { amount: 380, unit: \'g\' },\\r\\n          name: \'podded broad beans, fresh or frozen\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'halibut fillets, about 150g each\',\\r\\n        },\\r\\n        { quantity: { amount: 1, unit: \'tbsp\' }, name: \'dried lime powder\' },\\r\\n        { quantity: { amount: 5, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        { name: \'Juice of ½ lemon\' },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n        { quantity: { amount: 1, unit: \'unit\' }, name: \'½ tbsp picked dill\' },\\r\\n        {\\r\\n          quantity: { amount: 4, unit: \'unit\' },\\r\\n          name: \'lemon wedges, to serve\',\\r\\n        },\\r\\n        { name: \'For the chermoula:\' },\\r\\n        { quantity: { amount: 1, unit: \'tsp\' }, name: \'ground cumin\' },\\r\\n        { name: \'½ tsp paprika\' },\\r\\n        { name: \'½ tsp dried lime powder\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'unit\' },\\r\\n          name: \'small garlic, crushed\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 2, unit: \'tsp\' },\\r\\n          name: \'finely chopped preserved lemon skin\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'chopped flat-leaf parsley\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'chopped fresh coriander leaves\',\\r\\n        },\\r\\n        { quantity: { amount: 2, unit: \'unit\' }, name: \'½ tbsp olive oil\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Chermoula-basted-halibut-with-farro.jpg\',\\r\\n      steps: [\\r\\n        \'Simmer the farro in plenty of water for 20 minutes to an hour – the cooking time will depend on the brand; you want it tender with just a little bite. Drain and set aside.\',\\r\\n        \'Cook the broad beans in salted boiling water for two minutes, drain, refresh under cold water, then remove and discard the skins.\',\\r\\n        \'Preheat the oven to 200C/400F/gas mark 6. Mix the chermoula ingredients and season well. Put the fish in a heatproof dish or oven tray lined with baking paper, brush with the chermoula, and roast for eight to 10 minutes, until just done.\',\\r\\n        \'Mix the farro, beans, Iranian lime, olive oil, lemon juice, salt and pepper in a medium pan, heat up gently and divide among four plates. Top with the fish, garnish with dill and serve with a lemon wedge\',\\r\\n      ],\\r\\n    }),\\r\\n    createRecipe({\\r\\n      id: \'roasted-chicken-legs-with-dates-olives-and-capers\',\\r\\n      description:\\r\\n        \\"The Silver Palate, by Julee Rosso and Sheila Lukins, is one of the best cookbooks I know and a classic of the 1980s, listing recipes from the first modern quality take-out food shop in New York. Many of the dishes in the book have become legendary. One of them, Chicken Marbella, is the inspiration for this recipe. The chicken needs marinading for at least a day, preferably two, to soften and flavour properly; I wouldn\'t cut corners here.\\",\\r\\n      name: \'Roast chicken with dates, olives and capers\',\\r\\n      ingredients: [\\r\\n        {\\r\\n          quantity: { amount: 8, unit: \'unit\' },\\r\\n          name: \'chicken legs, drumstick and thigh attached, skin on (2kg net)\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 5, unit: \'unit\' },\\r\\n          name: \'garlic cloves, crushed\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 15, unit: \'g\' },\\r\\n          name: \'fresh oregano, torn, plus extra for garnish\',\\r\\n        },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'red wine vinegar\' },\\r\\n        { quantity: { amount: 3, unit: \'tbsp\' }, name: \'olive oil\' },\\r\\n        { quantity: { amount: 100, unit: \'g\' }, name: \'pitted green olives\' },\\r\\n        {\\r\\n          quantity: { amount: 60, unit: \'g\' },\\r\\n          name: \'capers, plus 2 tbsp of their juices\',\\r\\n        },\\r\\n        {\\r\\n          quantity: { amount: 70, unit: \'g\' },\\r\\n          name: \', pitted and quartered lengthways Medjoul dates\',\\r\\n        },\\r\\n        { quantity: { amount: 2, unit: \'unit\' }, name: \'bay leaves\' },\\r\\n        { quantity: { amount: 120, unit: \'ml\' }, name: \'dry white wine\' },\\r\\n        {\\r\\n          quantity: { amount: 1, unit: \'tbsp\' },\\r\\n          name: \'date syrup or treacle\',\\r\\n        },\\r\\n        { name: \'Salt and black pepper\' },\\r\\n      ],\\r\\n      pictureUri:\\r\\n        \'https://ottolenghi.co.uk/media/contentmanager/content/cache/646x458//Roast-chicken-with-dates,-olives-and-capers.jpg\',\\r\\n      steps: [\\r\\n        \'Place the chicken in a large, non-reactive bowl and add all of the ingredients, apart from the wine and date molasses, along with ¾ teaspoon of salt and a good grind of black pepper. Gently mix everything together, cover the bowl and leave in the fridge to marinate for 1 to 2 days, stirring the ingredients a few times during the process.\',\\r\\n        \'Preheat the oven to 180C.\',\\r\\n        \'Spread out the chicken legs on a large baking tray, along with all the marinade ingredients. Whisk together the wine and molasses and pour over the meat. Place in the oven and cook for 50 minutes, basting 2 or 3 times, until the meat is golden brown on top and cooked through.\',\\r\\n        \'Remove from the oven, transfer everything to a large platter, sprinkle over some freshly picked oregano leaves and serve.\',\\r\\n      ],\\r\\n    }),\\r\\n  ];\\r\\n\\r\\n  getRecipes() {\\r\\n    return defer(() => {\\r\\n      console.count(`fetching recipes...`);\\r\\n      return of(this._recipes).pipe(delay(1000));\\r\\n    });\\r\\n  }\\r\\n\\r\\n}\\r\\n","type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"Projectile","id":"class-Projectile-ca74499af1728f6220f5b54237788f557270a8fcd7a94987d40577d33ea3c05d9e5b1191f63415ab40256119fb3bccc2c6b31993239aaafee0c154dd905e34dd","file":"src/app/threejs-basic/kinematics/kinematics.component.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from \\"@angular/core\\";\\n\\nimport { NgtCreatedState, NgtTriplet } from \\"@angular-three/core\\";\\n\\nimport { BoxProps, GetByIndex, SphereProps } from \\"@angular-three/cannon\\";\\nimport { Camera, Ray, Vector3 } from \\"three\\";\\nimport { ViewChild } from \\"@angular/core\\";\\nimport { NgtPhysicSphere } from \\"@angular-three/cannon/bodies\\";\\n\\nclass Projectile {\\n  constructor(public position: NgtTriplet, public ttl: number = 30) { }\\n}\\nclass Target {\\n  constructor(public position: NgtTriplet, public color: string) { }\\n}\\n\\n@Component({\\n  selector: \'app-kinematics\',\\n  templateUrl: \'./kinematics.component.html\',\\n  styleUrls: [\'./kinematics.component.scss\']\\n})\\nexport class KinematicsComponent  implements AfterViewInit {\\n  @ViewChild(\'player\') player!: NgtPhysicSphere;\\n\\n  projectiles: Array<Projectile> = [];\\n  cubes: Array<Target> = [];\\n\\n  playerRadius = 0.5;\\n  ballRadius = 0.1;\\n\\n  private camera!: Camera;\\n\\n  constructor(private cd: ChangeDetectorRef) {\\n    for (let i = 0; i < 30; i++) {\\n      this.cubes.push(new Target([\\n        -10 + Math.random() * 20,\\n        Math.random() + 1,\\n        -10 + Math.random() * 20\\n      ], \'#\' + Math.floor(Math.random() * 16777215).toString(16).padEnd(6, \'0\')));\\n    }\\n  }\\n\\n  ngAfterViewInit(): void {\\n    // if setInterval is removed, will need to call detectChanges below\\n    setInterval(() => {\\n      this.projectiles.forEach((item, index) => {\\n        item.ttl--;\\n        if (item.ttl <= 0) {\\n         this.projectiles.splice(index, 1)\\n        }\\n      })\\n    }, 100);\\n  }\\n\\n  created(event: NgtCreatedState) {\\n    this.camera = event.camera;\\n  }\\n  //event after canvas was created is used to copy camera object locally\\n  getCubeProps: GetByIndex<BoxProps> = (index: number) => (\\n    {\\n      mass: 1,\\n      material: { friction: 0, restitution: 0.3 },\\n      args: [1, 1, 1],\\n    }\\n  )\\n\\n  getBallProps: GetByIndex<SphereProps> = (index: number) => (\\n    {\\n      mass: 2,\\n      args: [this.ballRadius]\\n    }\\n  )\\n\\n  private getShootDirection(): Vector3 {\\n    const vector = new Vector3(0, 0, 1)\\n    vector.unproject(this.camera)\\n    const ray = new Ray(this.camera.position, vector.sub(this.camera.position).normalize())\\n    return ray.direction;\\n  }\\n\\n\\n  shoot() {\\n    const shootDirection = this.getShootDirection()\\n\\n    // position the ball to bounce off the player sphere\\n    const position = [\\n      this.camera.position.x + shootDirection.x * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.y + shootDirection.y * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.z + shootDirection.z * (this.playerRadius * 1.01 + this.ballRadius),\\n    ] as NgtTriplet;\\n\\n    this.projectiles.push(new Projectile(position));\\n\\n    // if setInterval is removed above, need to uncomment for ball to appear\\n    //this.cd.detectChanges();\\n  }\\n//add projectiles after getting the shoot direction and position\\n  tick() {\\n    this.player.api.position.copy(this.camera.position);\\n  }\\n}\\n//sphere position moves with camera\\n\\n\\nimport {  EventEmitter, Input, OnDestroy, Output } from \'@angular/core\';\\nimport { NgtCanvasStore, NgtRender } from \'@angular-three/core\';\\n\\n//\\n// adapted from three.js games fps example https://github.com/mrdoob/three.js/blob/master/examples/games_fps.html\\n//\\n@Component({\\n  selector: \'first-person-controls\',\\n  template: \'<ngt-group (ready)=\\"ready()\\" (animateReady)=\\"animate($event.state)\\"></ngt-group>\'\\n})\\nexport class FirstPersonControlsComponent implements OnDestroy {\\n  @Input() container: HTMLElement = document.body;\\n  @Input() viewerheight = 1.5;\\n  @Input() movespeed = 1;\\n  @Input() rotatefactor = 2000;\\n\\n  @Output() shoot = new EventEmitter();\\n\\n  private keyStates = new Map<string, boolean>([]);\\n  private camera!: Camera;\\n\\n  private cleanup!: () => void;\\n\\n  constructor(private canvasStore: NgtCanvasStore) { }\\n\\n  ngOnDestroy(): void {\\n    this.cleanup();\\n  }\\n\\n  ready() {\\n    const camera = this.canvasStore.get((s) => s.camera);\\n    camera.rotation.order = \'YXZ\';\\n    this.camera = camera;\\n\\n    // movement\\n    const keydown = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, true);\\n    }\\n    document.addEventListener(\'keydown\', keydown);\\n\\n    const keyup = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, false);\\n    }\\n    document.addEventListener(\'keyup\', keyup);\\n\\n    const mousedown = () => {\\n      document.body.requestPointerLock();\\n    }\\n    this.container.addEventListener(\'mousedown\', mousedown);\\n\\n    const mouseup = () => {\\n      this.shoot.emit();\\n    }\\n    document.body.addEventListener(\'mouseup\', mouseup);\\n\\n    // rotation\\n    const mousemove = (event: MouseEvent) => {\\n      if (document.pointerLockElement === document.body) {\\n        camera.rotation.y -= event.movementX / this.rotatefactor;\\n        camera.rotation.x -= event.movementY / this.rotatefactor;\\n      }\\n    }\\n    document.body.addEventListener(\'mousemove\', mousemove);\\n\\n    this.cleanup = () => {\\n      document.exitPointerLock();\\n      document.removeEventListener(\'keydown\', keydown);\\n      document.removeEventListener(\'keyup\', keyup);\\n      this.container.removeEventListener(\'mousedown\', mousedown);\\n      document.body.removeEventListener(\'mouseup\', mouseup);\\n      document.body.removeEventListener(\'mousemove\', mousemove);\\n    }\\n  }\\n\\n  private getForwardVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n\\n    return playerDirection;\\n  }\\n\\n  private getSideVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n    playerDirection.cross(this.camera.up);\\n\\n    return playerDirection;\\n  }\\n\\n  private playerVelocity = new Vector3();\\n\\n  private updateVelocity(deltaTime: number) {\\n    const speedDelta = deltaTime * 8;\\n\\n    if (this.keyStates.get(\'KeyW\') || this.keyStates.get(\'ArrowUp\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(speedDelta));\\n    }\\n\\n    if (this.keyStates.get(\'KeyS\') || this.keyStates.get(\'ArrowDown\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(-speedDelta));\\n    }\\n\\n    //if (this.keyStates.get(\'KeyA\' || this.keyStates.get(\'ArrowLeft\'))) {\\n      //this.playerVelocity.add(this.getSideVector().multiplyScalar(-speedDelta));\\n    //}\\n\\n    if (this.keyStates.get(\'KeyD\') || this.keyStates.get(\'ArrowRight\')) {\\n      this.playerVelocity.add(this.getSideVector().multiplyScalar(speedDelta));\\n    }\\n  }\\n\\n  private moveCamera(deltaTime: number) {\\n    // slow after mouse up\\n    let damping = Math.exp(-3 * deltaTime) - 1;\\n\\n    this.playerVelocity.addScaledVector(this.playerVelocity, damping);\\n\\n    const deltaPosition = this.playerVelocity.clone().multiplyScalar(deltaTime);\\n    if (this.camera) {\\n      this.camera.position.add(deltaPosition);\\n      this.camera.position.y = this.viewerheight;\\n    }\\n  }\\n\\n  animate({ delta }: NgtRender) {\\n    this.updateVelocity(delta * this.movespeed);  // check for input\\n    this.moveCamera(delta); // move player\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"position","type":"NgtTriplet","deprecated":false,"deprecationMessage":""},{"name":"ttl","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"30"}],"line":10,"jsdoctags":[{"name":"position","type":"NgtTriplet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"ttl","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"30","tagName":{"text":"param"}}]},"properties":[{"name":"position","deprecated":false,"deprecationMessage":"","type":"NgtTriplet","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"ttl","defaultValue":"30","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Target","id":"class-Target-ca74499af1728f6220f5b54237788f557270a8fcd7a94987d40577d33ea3c05d9e5b1191f63415ab40256119fb3bccc2c6b31993239aaafee0c154dd905e34dd","file":"src/app/threejs-basic/kinematics/kinematics.component.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from \\"@angular/core\\";\\n\\nimport { NgtCreatedState, NgtTriplet } from \\"@angular-three/core\\";\\n\\nimport { BoxProps, GetByIndex, SphereProps } from \\"@angular-three/cannon\\";\\nimport { Camera, Ray, Vector3 } from \\"three\\";\\nimport { ViewChild } from \\"@angular/core\\";\\nimport { NgtPhysicSphere } from \\"@angular-three/cannon/bodies\\";\\n\\nclass Projectile {\\n  constructor(public position: NgtTriplet, public ttl: number = 30) { }\\n}\\nclass Target {\\n  constructor(public position: NgtTriplet, public color: string) { }\\n}\\n\\n@Component({\\n  selector: \'app-kinematics\',\\n  templateUrl: \'./kinematics.component.html\',\\n  styleUrls: [\'./kinematics.component.scss\']\\n})\\nexport class KinematicsComponent  implements AfterViewInit {\\n  @ViewChild(\'player\') player!: NgtPhysicSphere;\\n\\n  projectiles: Array<Projectile> = [];\\n  cubes: Array<Target> = [];\\n\\n  playerRadius = 0.5;\\n  ballRadius = 0.1;\\n\\n  private camera!: Camera;\\n\\n  constructor(private cd: ChangeDetectorRef) {\\n    for (let i = 0; i < 30; i++) {\\n      this.cubes.push(new Target([\\n        -10 + Math.random() * 20,\\n        Math.random() + 1,\\n        -10 + Math.random() * 20\\n      ], \'#\' + Math.floor(Math.random() * 16777215).toString(16).padEnd(6, \'0\')));\\n    }\\n  }\\n\\n  ngAfterViewInit(): void {\\n    // if setInterval is removed, will need to call detectChanges below\\n    setInterval(() => {\\n      this.projectiles.forEach((item, index) => {\\n        item.ttl--;\\n        if (item.ttl <= 0) {\\n         this.projectiles.splice(index, 1)\\n        }\\n      })\\n    }, 100);\\n  }\\n\\n  created(event: NgtCreatedState) {\\n    this.camera = event.camera;\\n  }\\n  //event after canvas was created is used to copy camera object locally\\n  getCubeProps: GetByIndex<BoxProps> = (index: number) => (\\n    {\\n      mass: 1,\\n      material: { friction: 0, restitution: 0.3 },\\n      args: [1, 1, 1],\\n    }\\n  )\\n\\n  getBallProps: GetByIndex<SphereProps> = (index: number) => (\\n    {\\n      mass: 2,\\n      args: [this.ballRadius]\\n    }\\n  )\\n\\n  private getShootDirection(): Vector3 {\\n    const vector = new Vector3(0, 0, 1)\\n    vector.unproject(this.camera)\\n    const ray = new Ray(this.camera.position, vector.sub(this.camera.position).normalize())\\n    return ray.direction;\\n  }\\n\\n\\n  shoot() {\\n    const shootDirection = this.getShootDirection()\\n\\n    // position the ball to bounce off the player sphere\\n    const position = [\\n      this.camera.position.x + shootDirection.x * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.y + shootDirection.y * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.z + shootDirection.z * (this.playerRadius * 1.01 + this.ballRadius),\\n    ] as NgtTriplet;\\n\\n    this.projectiles.push(new Projectile(position));\\n\\n    // if setInterval is removed above, need to uncomment for ball to appear\\n    //this.cd.detectChanges();\\n  }\\n//add projectiles after getting the shoot direction and position\\n  tick() {\\n    this.player.api.position.copy(this.camera.position);\\n  }\\n}\\n//sphere position moves with camera\\n\\n\\nimport {  EventEmitter, Input, OnDestroy, Output } from \'@angular/core\';\\nimport { NgtCanvasStore, NgtRender } from \'@angular-three/core\';\\n\\n//\\n// adapted from three.js games fps example https://github.com/mrdoob/three.js/blob/master/examples/games_fps.html\\n//\\n@Component({\\n  selector: \'first-person-controls\',\\n  template: \'<ngt-group (ready)=\\"ready()\\" (animateReady)=\\"animate($event.state)\\"></ngt-group>\'\\n})\\nexport class FirstPersonControlsComponent implements OnDestroy {\\n  @Input() container: HTMLElement = document.body;\\n  @Input() viewerheight = 1.5;\\n  @Input() movespeed = 1;\\n  @Input() rotatefactor = 2000;\\n\\n  @Output() shoot = new EventEmitter();\\n\\n  private keyStates = new Map<string, boolean>([]);\\n  private camera!: Camera;\\n\\n  private cleanup!: () => void;\\n\\n  constructor(private canvasStore: NgtCanvasStore) { }\\n\\n  ngOnDestroy(): void {\\n    this.cleanup();\\n  }\\n\\n  ready() {\\n    const camera = this.canvasStore.get((s) => s.camera);\\n    camera.rotation.order = \'YXZ\';\\n    this.camera = camera;\\n\\n    // movement\\n    const keydown = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, true);\\n    }\\n    document.addEventListener(\'keydown\', keydown);\\n\\n    const keyup = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, false);\\n    }\\n    document.addEventListener(\'keyup\', keyup);\\n\\n    const mousedown = () => {\\n      document.body.requestPointerLock();\\n    }\\n    this.container.addEventListener(\'mousedown\', mousedown);\\n\\n    const mouseup = () => {\\n      this.shoot.emit();\\n    }\\n    document.body.addEventListener(\'mouseup\', mouseup);\\n\\n    // rotation\\n    const mousemove = (event: MouseEvent) => {\\n      if (document.pointerLockElement === document.body) {\\n        camera.rotation.y -= event.movementX / this.rotatefactor;\\n        camera.rotation.x -= event.movementY / this.rotatefactor;\\n      }\\n    }\\n    document.body.addEventListener(\'mousemove\', mousemove);\\n\\n    this.cleanup = () => {\\n      document.exitPointerLock();\\n      document.removeEventListener(\'keydown\', keydown);\\n      document.removeEventListener(\'keyup\', keyup);\\n      this.container.removeEventListener(\'mousedown\', mousedown);\\n      document.body.removeEventListener(\'mouseup\', mouseup);\\n      document.body.removeEventListener(\'mousemove\', mousemove);\\n    }\\n  }\\n\\n  private getForwardVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n\\n    return playerDirection;\\n  }\\n\\n  private getSideVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n    playerDirection.cross(this.camera.up);\\n\\n    return playerDirection;\\n  }\\n\\n  private playerVelocity = new Vector3();\\n\\n  private updateVelocity(deltaTime: number) {\\n    const speedDelta = deltaTime * 8;\\n\\n    if (this.keyStates.get(\'KeyW\') || this.keyStates.get(\'ArrowUp\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(speedDelta));\\n    }\\n\\n    if (this.keyStates.get(\'KeyS\') || this.keyStates.get(\'ArrowDown\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(-speedDelta));\\n    }\\n\\n    //if (this.keyStates.get(\'KeyA\' || this.keyStates.get(\'ArrowLeft\'))) {\\n      //this.playerVelocity.add(this.getSideVector().multiplyScalar(-speedDelta));\\n    //}\\n\\n    if (this.keyStates.get(\'KeyD\') || this.keyStates.get(\'ArrowRight\')) {\\n      this.playerVelocity.add(this.getSideVector().multiplyScalar(speedDelta));\\n    }\\n  }\\n\\n  private moveCamera(deltaTime: number) {\\n    // slow after mouse up\\n    let damping = Math.exp(-3 * deltaTime) - 1;\\n\\n    this.playerVelocity.addScaledVector(this.playerVelocity, damping);\\n\\n    const deltaPosition = this.playerVelocity.clone().multiplyScalar(deltaTime);\\n    if (this.camera) {\\n      this.camera.position.add(deltaPosition);\\n      this.camera.position.y = this.viewerheight;\\n    }\\n  }\\n\\n  animate({ delta }: NgtRender) {\\n    this.updateVelocity(delta * this.movespeed);  // check for input\\n    this.moveCamera(delta); // move player\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"position","type":"NgtTriplet","deprecated":false,"deprecationMessage":""},{"name":"color","type":"string","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"position","type":"NgtTriplet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"color","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"position","deprecated":false,"deprecationMessage":"","type":"NgtTriplet","optional":false,"description":"","line":14,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"AbsBillboardComponent","id":"component-AbsBillboardComponent-2aba92a96dad4a379b4946f4fab5e31a7a923f1d3637251376861664e2dd832f8a76f92c8e72bfff94e4624fbb34c6a001c7d33022ca04c4ad5ec2b4b226a843","file":"src/app/threejs-soba/abs-billboard/abs-billboard.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-abs-billboard","styleUrls":["./abs-billboard.component.scss"],"styles":[],"templateUrl":["./abs-billboard.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12},{"name":"cameraPosition","defaultValue":"[-5, 5, 5]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":11},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15}],"methodsClass":[{"name":"getcamera","args":[],"optional":false,"returnType":"{ position: [number, number, number]; fov: number; }","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-abs-billboard\',\\n  templateUrl: \'./abs-billboard.component.html\',\\n  styleUrls: [\'./abs-billboard.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class AbsBillboardComponent implements OnInit {\\n\\n  cameraPosition: [number, number, number] = [-5, 5, 5];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  getcamera(){\\n   return  {position:this.cameraPosition, fov:this.cameraFov  };\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./abs-billboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":17},"implements":["OnInit"],"templateData":"\x3c!--ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"getcamera()\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height: 80vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"false\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-orbit-controls\\n    (ready)=\\"$event.enablePan = true; $event.zoomSpeed = 0.5\\"\\n  ></ngt-soba-orbit-controls>\\n  \\n\\n  <ngt-plane-geometry\\n    #planeGeometry=\\"ngtPlaneGeometry\\"\\n    [args]=\\"[3, 2]\\"\\n  ></ngt-plane-geometry>\\n\\n  <ngt-soba-billboard [position]=\\"[-4, -2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'red\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[-4, 2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'orange\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[0, 0, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'green\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[4, -2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'blue\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[4, 2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'yellow\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader--\x3e\\n\\n    <ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"getcamera()\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height: 80vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"false\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n    <ngt-soba-orbit-controls\\n    (ready)=\\"$event.enablePan = true; $event.zoomSpeed = 0.5\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-billboard [position]=\\"[0.5, 2.05, 0.5]\\">\\n      <ngt-soba-text\\n          text=\\"box\\"\\n          [fontSize]=\\"1\\"\\n          outlineWidth=\\"5%\\"\\n          outlineColor=\\"#000000\\"\\n          [outlineOpacity]=\\"1\\"\\n      ></ngt-soba-text>\\n  </ngt-soba-billboard>\\n\\n  <ngt-mesh [position]=\\"[0.5, 1, 0.5]\\">\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-standard-material [parameters]=\\"{ color: \'red\' }\\"></ngt-mesh-standard-material>\\n  </ngt-mesh>\\n\\n  <ngt-group [position]=\\"[-2.5, -3, -1]\\">\\n      <ngt-soba-billboard [position]=\\"[0, 1.05, 0]\\">\\n          <ngt-soba-text\\n              text=\\"cone\\"\\n              [fontSize]=\\"1\\"\\n              outlineWidth=\\"5%\\"\\n              outlineColor=\\"#000000\\"\\n              [outlineOpacity]=\\"1\\"\\n          ></ngt-soba-text>\\n      </ngt-soba-billboard>\\n\\n      <ngt-mesh>\\n          <ngt-cone-geometry></ngt-cone-geometry>\\n          <ngt-mesh-standard-material [parameters]=\\"{ color: \'green\' }\\"></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  </ngt-group>\\n\\n  <ngt-soba-billboard [position]=\\"[0, 0, -5]\\">\\n      <ngt-mesh>\\n          <ngt-plane-geometry [args]=\\"[2, 2]\\"></ngt-plane-geometry>\\n          <ngt-mesh-standard-material [parameters]=\\"{ color: \'#000066\' }\\"></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"AbsGizmoComponent","id":"component-AbsGizmoComponent-049bda80103d691188c3d77655a7891556abab928bee9b5431a3de9e12bf9afcdfe2b0741f9477afb73a15340d434b418a0a904e5dae9641b91976773a307ce1","file":"src/app/threejs-soba/abs-gizmo/abs-gizmo.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-abs-gizmo","styleUrls":["./abs-gizmo.component.scss"],"styles":[],"templateUrl":["./abs-gizmo.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"alignment","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25},{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":17},{"name":"cameraPosition","defaultValue":"[-5, 5, 5]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":16},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"margin","deprecated":false,"deprecationMessage":"","type":"[\\"80\\", \\"80\\"]","optional":false,"description":"","line":26},{"name":"mode","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24}],"methodsClass":[{"name":"getcamera","args":[],"optional":false,"returnType":"{ position: [number, number, number]; fov: number; }","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  ChangeDetectionStrategy,\\r\\n  Component,\\r\\n  Input\\r\\n} from \'@angular/core\';\\r\\nimport { NgtGLTFLoader } from \'@angular-three/soba/loaders\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-abs-gizmo\',\\r\\n  templateUrl: \'./abs-gizmo.component.html\',\\r\\n  styleUrls: [\'./abs-gizmo.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class AbsGizmoComponent {\\r\\n\\r\\n  cameraPosition: [number, number, number] = [-5, 5, 5];\\r\\n  cameraFov: number = 75;\\r\\n  lights = true;\\r\\n  controls = true;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n\\r\\n  mode: \'viewport\';\\r\\n  alignment: \'bottom-right\';\\r\\n  margin: [80, 80];\\r\\n\\r\\n  constructor() { }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n  }\\r\\n\\r\\n  getcamera(){\\r\\n    return  {position:this.cameraPosition, fov:this.cameraFov  };\\r\\n   }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'ngt-default-gizmo\',\\r\\n  template: `\\r\\n      <ng-container *ngIf=\\"node$ | async as node\\">\\r\\n          <ngt-soba-gizmo-helper\\r\\n              *ngIf=\\"mode === \'viewcube\'\\"\\r\\n              [alignment]=\\"alignment\\"\\r\\n              [margin]=\\"margin\\"\\r\\n          >\\r\\n              <ngt-soba-gizmo-viewcube\\r\\n                  [faces]=\\"[\\r\\n                      \'Right\',\\r\\n                      \'Left\',\\r\\n                      \'Top\',\\r\\n                      \'Bottom\',\\r\\n                      \'Front\',\\r\\n                      \'Back\'\\r\\n                  ]\\"\\r\\n                  [opacity]=\\"1\\"\\r\\n                  color=\\"white\\"\\r\\n                  strokeColor=\\"gray\\"\\r\\n                  textColor=\\"black\\"\\r\\n                  hoverColor=\\"lightgray\\"\\r\\n              ></ngt-soba-gizmo-viewcube>\\r\\n          </ngt-soba-gizmo-helper>\\r\\n          <ngt-soba-gizmo-helper\\r\\n              *ngIf=\\"mode === \'viewport\'\\"\\r\\n              [alignment]=\\"alignment\\"\\r\\n              [margin]=\\"margin\\"\\r\\n          >\\r\\n              <ngt-soba-gizmo-viewport\\r\\n                  [axisColors]=\\"[\'red\', \'green\', \'blue\']\\"\\r\\n                  labelColor=\\"black\\"\\r\\n                  [hideNegativeAxes]=\\"false\\"\\r\\n              ></ngt-soba-gizmo-viewport>\\r\\n          </ngt-soba-gizmo-helper>\\r\\n          <ngt-primitive\\r\\n              [object]=\\"node.scene\\"\\r\\n              [scale]=\\"[0.01, 0.01, 0.01]\\"\\r\\n          ></ngt-primitive>\\r\\n\\r\\n          <ngt-soba-orbit-controls\\r\\n              (ready)=\\"$event.enablePan = false\\"\\r\\n              [makeDefault]=\\"true\\"\\r\\n          ></ngt-soba-orbit-controls>\\r\\n      </ng-container>\\r\\n  `,\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class DefaultGizmo {\\r\\n  node$ = this.gltfLoader.load(\'/assets/LittlestTokyo.glb\');\\r\\n\\r\\n  @Input() mode: \'viewport\' | \'viewcube\' = \'viewcube\';\\r\\n  @Input() alignment:\\r\\n      | \'top-left\'\\r\\n      | \'top-right\'\\r\\n      | \'bottom-right\'\\r\\n      | \'bottom-left\' = \'bottom-right\';\\r\\n  @Input() margin: [number, number] = [80, 80];\\r\\n\\r\\n  constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n}\\r\\n\\r\\n\\r\\n/* \\r\\n        alignment: {\\r\\n            options: [\'top-left\', \'top-right\', \'bottom-right\', \'bottom-left\'],\\r\\n            control: { type: \'select\' },\\r\\n        },\\r\\n        mode: {\\r\\n            options: [\'viewcube\', \'viewport\'],\\r\\n            control: { type: \'select\' },\\r\\n        },\\r\\n*/","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./abs-gizmo.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":26},"templateData":"<ngt-canvas\\r\\n  [shadows]=\\"true\\"\\r\\n  [camera]=\\"getcamera()\\"\\r\\n  [scene]=\'{background: \\"red\\" | color}\'\\r\\n  style=\\"height:100vh; width: 100vw;\\"\\r\\n>\\r\\n  <ngt-stats></ngt-stats>\\r\\n\\r\\n  <ng-container *ngIf=\\"true\\">\\r\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\r\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\r\\n  </ng-container>\\r\\n\\r\\n  <ngt-soba-orbit-controls\\r\\n  *ngIf=\\"true\\"\\r\\n  [makeDefault]=\\"true\\"\\r\\n></ngt-soba-orbit-controls>\\r\\n\\r\\n  <ngt-default-gizmo [mode]=\\"mode\\" [alignment]=\\"alignment\\" [margin]=\\"margin\\"></ngt-default-gizmo>\\r\\n</ngt-canvas>\\r\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"AbsGradientComponent","id":"component-AbsGradientComponent-bb36f7e7b16358a8bb7b25462e36523f8e1d92510a15db9b5615effed1a26bb65c91e55064b3dfc4b5ad644f1ce4004b6c3cc4da393412186d38b955b44e1eee","file":"src/app/threejs-soba/abs-gradient/abs-gradient.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-abs-gradient","styleUrls":["./abs-gradient.component.scss"],"styles":[],"templateUrl":["./abs-gradient.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11},{"name":"cameraPosition","defaultValue":"[-5, 5, 5]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":10},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":12},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14}],"methodsClass":[{"name":"getcamera","args":[],"optional":false,"returnType":"{ position: [number, number, number]; fov: number; }","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-abs-gradient\',\\n  templateUrl: \'./abs-gradient.component.html\',\\n  styleUrls: [\'./abs-gradient.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class AbsGradientComponent implements OnInit {\\n  cameraPosition: [number, number, number] = [-5, 5, 5];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  getcamera(){\\n   return  {position:this.cameraPosition, fov:this.cameraFov  };\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./abs-gradient.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":16},"implements":["OnInit"],"templateData":"\x3c!--ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"getcamera()\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height: 80vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n    <ngt-soba-orbit-controls\\n  *ngIf=\\"true\\"\\n  [makeDefault]=\\"true\\"\\n></ngt-soba-orbit-controls>\\n\\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader--\x3e\\n\\n<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"getcamera()\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n  <ngt-soba-orbit-controls\\n  *ngIf=\\"true\\"\\n  [makeDefault]=\\"true\\"\\n></ngt-soba-orbit-controls>\\n  <ngt-mesh>\\n    <ngt-plane-geometry></ngt-plane-geometry>\\n    <ngt-mesh-basic-material [parameters]=\'{depthWrite: false, side: \\"double\\"|side}\'>\\n        <ngt-soba-gradient-texture [stops]=\\"[0, 1]\\" [colors]=\'[\\"aquamarine\\", \\"hotpink\\"]\'></ngt-soba-gradient-texture>\\n    </ngt-mesh-basic-material>\\n</ngt-mesh>\\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"AbsLineComponent","id":"component-AbsLineComponent-2e88690519020dc15a9a8b64fab4e26e04d2f5e4e0ce70548064d3012c3553dae71cc7a74a1d8ae445d17739e47c2eb63057b75620812cb0535555dd87218ff9","file":"src/app/threejs-soba/abs-line/abs-line.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-abs-line","styleUrls":["./abs-line.component.scss"],"styles":[],"templateUrl":["./abs-line.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16},{"name":"cameraPosition","defaultValue":"[-5, 5, 5]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":15},{"name":"color","defaultValue":"\'red\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34},{"name":"colors","defaultValue":"new Array(this.points.length)\\n    .fill(0)\\n    .map(() => [Math.random(), Math.random(), Math.random()]) as unknown  as THREE.ColorRepresentation[]","deprecated":false,"deprecationMessage":"","type":"THREE.ColorRepresentation[]","optional":false,"description":"","line":29},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"dashed","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"lineWidth","defaultValue":"3","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19},{"name":"points","defaultValue":"hilbert3D(new THREE.Vector3(0), 5).map((p: any) => [\\n    p.x,\\n    p.y,\\n    p.z,\\n  ]) as [number, number, number][]","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23}],"methodsClass":[{"name":"getcamera","args":[],"optional":false,"returnType":"{ position: [number, number, number]; fov: number; }","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n// @ts-ignore\\nimport { hilbert3D } from \'three-stdlib\';\\n\\n\\n\\n@Component({\\n  selector: \'app-abs-line\',\\n  templateUrl: \'./abs-line.component.html\',\\n  styleUrls: [\'./abs-line.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class AbsLineComponent {\\n  cameraPosition: [number, number, number] = [-5, 5, 5];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n\\n  points = hilbert3D(new THREE.Vector3(0), 5).map((p: any) => [\\n    p.x,\\n    p.y,\\n    p.z,\\n  ]) as [number, number, number][];\\n  \\n  colors : THREE.ColorRepresentation[] = new Array(this.points.length)\\n    .fill(0)\\n    .map(() => [Math.random(), Math.random(), Math.random()]) as unknown  as THREE.ColorRepresentation[];\\n\\n//1\\ncolor= \'red\';\\ndashed= true;\\nlineWidth= 3;\\n\\n//2\\n//start : [number, number, number] = [0, 0, 0];\\n//end: [number, number, number] = [4, 7, 5];\\n//segments= 10;\\n//color= \'red\';\\n//dashed= false;\\n//lineWidth= 2;\\n\\n//3\\n//start: [number, number, number]= [0, 0, 0];\\n//end: [number, number, number]= [10, 0, 10];\\n//midA: [number, number, number]= [5, 4, 0];\\n//midB: [number, number, number]= [0, 0, 5];\\n//segments= 10;\\n//color= \'red\';\\n//lineWidth= 2;\\n//dashed= true;\\n\\n//4\\n//color= \'white\';\\n//vertexColors= this.colors;\\n//lineWidth= 3;\\n//dashed= false;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  getcamera(){\\n   return  {position:this.cameraPosition, fov:this.cameraFov  };\\n  }\\n}\\n\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./abs-line.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":36},"templateData":"\\n<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: [0,0,17], fov: 75}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"false\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n<ngt-soba-line [points]=\\"points\\" [lineWidth]=\\"lineWidth\\" [dashed]=\\"dashed\\" [color]=\\"color\\"></ngt-soba-line>\\n<ngt-soba-orbit-controls (ready)=\\"$event.zoomSpeed = 0.5\\"></ngt-soba-orbit-controls>\\n\\n  \x3c!--ngt-soba-quadratic-bezier-line\\n      [start]=\\"start\\"\\n      [end]=\\"end\\"\\n      [segments]=\\"segments\\"\\n      [lineWidth]=\\"lineWidth\\"\\n      [dashed]=\\"dashed\\"\\n      [color]=\\"color\\"\\n    ></ngt-soba-quadratic-bezier-line>\\n    <ngt-soba-orbit-controls (ready)=\\"$event.zoomSpeed = 0.5\\"></ngt-soba-orbit-controls--\x3e\\n\\n      \x3c!--ngt-soba-cubic-bezier-line\\n      [start]=\\"start\\"\\n      [end]=\\"end\\"\\n      [midA]=\\"midA\\"\\n      [midB]=\\"midB\\"\\n      [segments]=\\"segments\\"\\n      [color]=\\"color\\"\\n      [lineWidth]=\\"lineWidth\\"\\n      [dashed]=\\"dashed\\"\\n    ></ngt-soba-cubic-bezier-line>\\n    <ngt-soba-orbit-controls (ready)=\\"$event.zoomSpeed = 0.5\\"></ngt-soba-orbit-controls--\x3e\\n\\n      \x3c!--ngt-soba-line\\n      [points]=\\"points\\"\\n      [vertexColors]=\\"vertexColors\\"\\n      [lineWidth]=\\"lineWidth\\"\\n      [dashed]=\\"dashed\\"\\n      [color]=\\"color\\"\\n    ></ngt-soba-line>\\n    <ngt-soba-orbit-controls (ready)=\\"$event.zoomSpeed = 0.5\\"></ngt-soba-orbit-controls>\\n    \\n  <ngt-soba-orbit-controls\\n    (ready)=\\"$event.zoomSpeed = 0.5\\"\\n  ></ngt-soba-orbit-controls--\x3e\\n\\n\\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"AbsTextComponent","id":"component-AbsTextComponent-46e7e8e23873bebfbb72790c412f61516156ae540e8e2e138eed38a5111737731964a8367a9e2f1223f9239e9d8667c9632bf7039d9b337c766ae61bbdb2cf7a","file":"src/app/threejs-soba/abs-text/abs-text.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-abs-text","styleUrls":["./abs-text.component.scss"],"styles":[],"templateUrl":["./abs-text.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":12},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"DoubleSide","defaultValue":"THREE.DoubleSide","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"text","defaultValue":"`ان عدة الشهور عند الله اثنا عشر شهرا في كتاب الله يوم خلق السماوات والارض\\n  SOME LATIN TEXT HERE منها اربعة حرم ذلك الدين القيم فلاتظلموا فيهن انفسكم\\n  وقاتلوا المشركين كافة كما يقاتلونكم كافة واعلموا ان الله مع المتقين\\n  `","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"turnAnimate","args":[{"name":"object","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"object","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n\\n@Component({\\n  selector: \'app-abs-text\',\\n  templateUrl: \'./abs-text.component.html\',\\n  styleUrls: [\'./abs-text.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class AbsTextComponent  {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  DoubleSide= THREE.DoubleSide;\\n  /*text= `LOREM IPSUM DOLOR SIT AMET, CONSECTETUR ADIPISCING ELIT, SED DO EIUSMOD TEMPOR INCIDIDUNT UT LABORE ET DOLORE\\n  MAGNA ALIQUA. UT ENIM AD MINIM VENIAM, QUIS NOSTRUD EXERCITATION ULLAMCO LABORIS NISI UT ALIQUIP EX EA COMMODO\\n  CONSEQUAT. DUIS AUTE IRURE DOLOR IN REPREHENDERIT IN VOLUPTATE VELIT ESSE CILLUM DOLORE EU FUGIAT NULLA PARIATUR.\\n  EXCEPTEUR SINT OCCAECAT CUPIDATAT NON PROIDENT, SUNT IN CULPA QUI OFFICIA DESERUNT MOLLIT ANIM ID EST LABORUM.`; */\\n\\n  text = `ان عدة الشهور عند الله اثنا عشر شهرا في كتاب الله يوم خلق السماوات والارض\\n  SOME LATIN TEXT HERE منها اربعة حرم ذلك الدين القيم فلاتظلموا فيهن انفسكم\\n  وقاتلوا المشركين كافة كما يقاتلونكم كافة واعلموا ان الله مع المتقين\\n  `;\\n  \\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n  turnAnimate(object: THREE.Object3D) {\\n    object.rotation.y += 0.01;\\n}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./abs-text.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":28},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  \x3c!--ngt-soba-text\\n  [text]=\\"text\\"\\n  [color]=\\"\'#EC2D2D\'\\"\\n  [fontSize]=\\"12\\"\\n  [maxWidth]=\\"200\\"\\n  [lineHeight]=\\"1\\"\\n  [letterSpacing]=\\"0.02\\"\\n  [textAlign]=\\"\'left\'\\"\\n  font=\\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\\"\\n  anchorX=\\"center\\"\\n  anchorY=\\"middle\\"\\n  (animateReady)=\\"turnAnimate($event.entity)\\"\\n>\\n</ngt-soba-text--\x3e\\n\\n\x3c!--ngt-soba-text\\n[text]=\\"text\\"\\n[color]=\\"\'#EC2D2D\'\\"\\n[fontSize]=\\"12\\"\\n[maxWidth]=\\"200\\"\\n[lineHeight]=\\"1\\"\\n[letterSpacing]=\\"0.02\\"\\n[textAlign]=\\"\'left\'\\"\\nfont=\\"https://fonts.cdnfonts.com/s/1761/Garfield.woff\\"\\nanchorX=\\"center\\"\\nanchorY=\\"middle\\"\\n(animateReady)=\\"turnAnimate($event.entity)\\"\\n></ngt-soba-text--\x3e\\n\\n\\n\x3c!--ngt-soba-text\\n[text]=\\"text\\"\\n[fontSize]=\\"12\\"\\n[maxWidth]=\\"200\\"\\n[lineHeight]=\\"1\\"\\n[letterSpacing]=\\"0.02\\"\\n[textAlign]=\\"\'left\'\\"\\nfont=\\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\\"\\nanchorX=\\"center\\"\\nanchorY=\\"middle\\"\\n[fillOpacity]=\\"0\\"\\n[strokeWidth]=\\"\'2.5%\'\\"\\nstrokeColor=\\"#ffffff\\"\\n(animateReady)=\\"turnAnimate($event.entity)\\"\\n></ngt-soba-text--\x3e\\n  \\n\\n\x3c!--ngt-soba-text\\n[text]=\\"text\\"\\n[color]=\\"\'#EC2D2D\'\\"\\n[fontSize]=\\"12\\"\\n[maxWidth]=\\"200\\"\\n[lineHeight]=\\"1\\"\\n[letterSpacing]=\\"0.02\\"\\n[textAlign]=\\"\'left\'\\"\\nfont=\\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\\"\\nanchorX=\\"center\\"\\nanchorY=\\"middle\\"\\n[outlineOffsetX]=\\"\'10%\'\\"\\n[outlineOffsetY]=\\"\'10%\'\\"\\n[outlineBlur]=\\"\'30%\'\\"\\n[outlineOpacity]=\\"0.3\\"\\noutlineColor=\\"#EC2D2D\\"\\n(animateReady)=\\"turnAnimate($event.entity)\\"\\n></ngt-soba-text--\x3e\\n\\n\x3c!--ngt-soba-text\\n[text]=\\"text\\"\\n[color]=\\"\'#EC2D2D\'\\"\\n[fontSize]=\\"12\\"\\n[maxWidth]=\\"200\\"\\n[lineHeight]=\\"1\\"\\n[letterSpacing]=\\"0.02\\"\\ntextAlign=\\"right\\"\\ndirection=\\"auto\\"\\nfont=\\"https://fonts.gstatic.com/s/scheherazade/v20/YA9Ur0yF4ETZN60keViq1kQgtA.woff\\"\\nanchorX=\\"center\\"\\nanchorY=\\"middle\\"\\n(animateReady)=\\"turnAnimate($event.entity)\\"\\n>\\n\\n</ngt-soba-text--\x3e\\n\\n<ngt-soba-text\\n[text]=\\"text\\"\\n[fontSize]=\\"12\\"\\n[maxWidth]=\\"200\\"\\n[lineHeight]=\\"1\\"\\n[letterSpacing]=\\"0.02\\"\\n[textAlign]=\\"\'left\'\\"\\nfont=\\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\\"\\nanchorX=\\"center\\"\\nanchorY=\\"middle\\"\\n(animateReady)=\\"turnAnimate($event.entity)\\"\\n>\\n<ngt-mesh-basic-material\\n  [parameters]=\'{side: DoubleSide, color: \\"turquoise\\", transparent: true }\'\\n></ngt-mesh-basic-material>\\n</ngt-soba-text>\\n\\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>\\n"},{"name":"AppComponent","id":"component-AppComponent-223723a0f4786670f8147dfe5822546b8a09315c275d23fdd272170e24eaeca52ff46dcc72cc6319f98f8ac9afde1f912c89fea2561554fccd236b0355461b89","file":"src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\']\\n})\\nexport class AppComponent {\\n  \\n\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app.component.scss"}],"stylesData":"","templateData":"<router-outlet></router-outlet>"},{"name":"BeforeLoginComponent","id":"component-BeforeLoginComponent-237ec8a79ba10a55781e116f6283fff626ce499c30ca5273cd1b8fe9fe17b7b8ac47b7e48571048d2ec84a0e0dda16c40856278e85207be22131d5689e10ae8a","file":"src/app/before-login/before-login.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-before-login","styleUrls":["./before-login.component.scss"],"styles":[],"templateUrl":["./before-login.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"destroyed","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"displayNameMap","defaultValue":"new Map([\\n    [Breakpoints.XSmall, \'XSmall\'],\\n    [Breakpoints.Small, \'Small\'],\\n    [Breakpoints.Medium, \'Medium\'],\\n    [Breakpoints.Large, \'Large\'],\\n    [Breakpoints.XLarge, \'XLarge\'],\\n  ])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"flexwidth","defaultValue":"\\"100vw\\"","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21}],"methodsClass":[{"name":"change3D","args":[{"name":"selected3D","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selected3D","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,OnDestroy } from \'@angular/core\';\\nimport { Observable,Subject, Subscription } from \'rxjs\';\\nimport {BreakpointObserver, Breakpoints} from \'@angular/cdk/layout\';\\nimport {takeUntil} from \'rxjs/operators\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-before-login\',\\n  templateUrl: \'./before-login.component.html\',\\n  styleUrls: [\'./before-login.component.scss\']\\n})\\nexport class BeforeLoginComponent implements OnInit,OnDestroy {\\n  destroyed = new Subject<void>();\\n  displayNameMap = new Map([\\n    [Breakpoints.XSmall, \'XSmall\'],\\n    [Breakpoints.Small, \'Small\'],\\n    [Breakpoints.Medium, \'Medium\'],\\n    [Breakpoints.Large, \'Large\'],\\n    [Breakpoints.XLarge, \'XLarge\'],\\n  ]);\\n  flexwidth=\\"100vw\\";\\n\\n  constructor(breakpointObserver: BreakpointObserver,private route: ActivatedRoute, private router: Router) {\\n\\n    breakpointObserver.observe([\\n      Breakpoints.XSmall,\\n      Breakpoints.Small,\\n      Breakpoints.Medium,\\n      Breakpoints.Large,\\n      Breakpoints.XLarge,\\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\\n        for (const query of Object.keys(result.breakpoints)) {\\n          if (result.breakpoints[query]) {\\n            console.log(this.displayNameMap.get(query));\\n            switch(this.displayNameMap.get(query)){\\n              case \'XSmall\':\\n                 this.flexwidth=\\"100vw\\";\\n                break;\\n                default:\\n                  this.flexwidth=\\"100vw\\";\\n                  break;\\n \\n            };\\n          }\\n        }\\n    });\\n\\n\\n   }\\n   change3D(selected3D: number) {\\n    switch (selected3D) {\\n      case 1:\\n        this.router.navigate([\'basicthree\']);\\n        break;\\n      case 2:\\n        this.router.navigate([\'items\'], { relativeTo: this.route });\\n        break;\\n      case 3:\\n        this.router.navigate([\'items\'], { relativeTo: this.route });\\n        break;\\n      case 4:\\n        this.router.navigate([\'items\'], { relativeTo: this.route });\\n        break;\\n    }\\n\\n  }\\n  ngOnInit(): void {\\n  }\\n  ngOnDestroy() {\\n    this.destroyed.next();\\n    this.destroyed.complete();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./before-login.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div fxLayout=\\"column\\" style=\\"background-color:  #FFFFB7; height:100vh;\\">\\n     <div fxFlex=\\"grow\\" style=\\"overflow-y: auto;\\" fxLayoutAlign=\\"center center\\">\\n         <p>\\n             <mat-chip-list class=\\"mat-chip-list-stacked\\" aria-label=\\"Fish selection\\">\\n                 <mat-chip color=\\"primary\\" selected>App Collections</mat-chip>\\n             </mat-chip-list>\\n         </p>\\n     </div>\\n     <div style=\\"background-color: FFFFB7;  margin:10em 0em; \\" fxLayoutAlign=\\"center center\\">\\n         <mat-chip-list class=\\"mat-chip-list-stacked\\" aria-label=\\"Fish selection\\">\\n             <mat-chip color=\\"accent\\" selected (click)=\\"change3D(1)\\">Introduction3js</mat-chip>\\n             <mat-chip color=\\"accent\\" selected (click)=\\"change3D(2)\\">BirthdayApp</mat-chip>\\n             <mat-chip color=\\"accent\\" selected (click)=\\"change3D(3)\\">ConsentApp</mat-chip>\\n             <mat-chip color=\\"accent\\" selected (click)=\\"change3D(4)\\">ImmersiveApp</mat-chip>\\n         </mat-chip-list>\\n     </div>\\n </div>"},{"name":"BoxComponent","id":"component-BoxComponent-19dea74262f72e4f13a45db9a8e6829abc013af69d55c86d8820444b284cb44a3673195620f58f5eef6b0a1791a009a778a02dfdbd2ed3a951b989361f329afc","file":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-box","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicBox\\n    #physicBox=\\"ngtPhysicBox\\"\\n    [getPhysicProps]=\\"getBoxProps\\"\\n    [castShadow]=\\"true\\"\\n    [receiveShadow]=\\"true\\"\\n    (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\n>\\n    <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n    <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"boxSize","defaultValue":"[4, 4, 4]","deprecated":false,"deprecationMessage":"","type":"NgtTriplet","optional":false,"description":"","line":80},{"name":"getBoxProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":82}],"methodsClass":[{"name":"onBoxAnimate","args":[{"type":"NgtRender","deprecated":false,"deprecationMessage":""},{"type":"NgtPhysicBox","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"NgtRender","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"NgtPhysicBox","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { BoxProps, SphereProps } from \'@angular-three/cannon\';\\nimport {\\n  ChangeDetectionStrategy,\\n  Input\\n} from \'@angular/core\';\\nimport {\\n  NgtEuler,\\n  NgtRender,\\n  NgtTriplet,\\n  NgtVector3\\n} from \'@angular-three/core\';\\n\\nimport {\\n  NgtPhysicBox\\n} from \'@angular-three/cannon/bodies\';\\n\\n// @ts-ignore\\nimport niceColors from \'nice-color-palettes\';\\nimport * as THREE from \'three\';\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\n\\n\\n@Component({\\n  selector: \'app-cannon-kinematic\',\\n  templateUrl: \'./cannon-kinematic.component.html\',\\n  styleUrls: [\'./cannon-kinematic.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonKinematicComponent implements OnInit {\\n  niceColor = niceColor;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n@Component({\\n  selector: \'app-plane\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [rotation]=\\"rotation\\"\\n          [position]=\\"position\\"\\n          [receiveShadow]=\\"true\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ color }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneComponent {\\n  @Input() color?: THREE.ColorRepresentation;\\n  @Input() position?: NgtVector3;\\n  @Input() rotation?: NgtEuler;\\n}\\n\\n@Component({\\n  selector: \'app-box\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicBox\\n          #physicBox=\\"ngtPhysicBox\\"\\n          [getPhysicProps]=\\"getBoxProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\n      >\\n          <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n          <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BoxComponent {\\n  boxSize: NgtTriplet = [4, 4, 4];\\n\\n  getBoxProps = (): BoxProps => ({\\n      mass: 1,\\n      type: \'Kinematic\',\\n      args: this.boxSize,\\n  });\\n\\n  onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\n      const t = clock.getElapsedTime();\\n      api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\n      api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-spheres\',\\n  template: `\\n      <ngt-instanced-mesh\\n          ngtPhysicSphere\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [getPhysicProps]=\\"getInstancedProps\\"\\n          [args]=\\"[number]\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\n              <ngt-instanced-buffer-attribute\\n                  attach=\\"color\\"\\n                  [args]=\\"[colors, 3]\\"\\n              ></ngt-instanced-buffer-attribute>\\n          </ngt-sphere-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ vertexColors: true }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-instanced-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class InstancedSpheresComponent {\\n  @Input() number = 100;\\n\\n  colors!: Float32Array;\\n\\n  ngOnInit() {\\n      this.colors = new Float32Array(this.number * 3);\\n      const color = new THREE.Color();\\n\\n      for (let i = 0; i < this.number; i++) {\\n          color\\n              .set(niceColor[Math.floor(Math.random() * 5)])\\n              .convertSRGBToLinear()\\n              .toArray(this.colors, i * 3);\\n      }\\n  }\\n\\n  getInstancedProps(index: number) {\\n      return {\\n          args: [1],\\n          mass: 1,\\n          position: [\\n              Math.random() - 0.5,\\n              Math.random() - 0.5,\\n              index * 2,\\n          ] as SphereProps[\'position\'],\\n      } as SphereProps;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"ButtonComponent","id":"component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004","file":"src/stories/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-button","styleUrls":["./button.css"],"styles":[],"template":"<button   type=\\"button\\"\\n   (click)=\\"onClick.emit($event)\\"\\n   [ngClass]=\\"classes\\"\\n   [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n >\\n   {{ label }}\\n </button>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"backgroundColor","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhat background color to use\\n","description":"<p>What background color to use</p>\\n","line":26,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'Button\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":711,"end":724,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":712,"end":720,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"required"},"comment":""}],"rawdescription":"\\n\\nButton contents\\n\\n","description":"<p>Button contents</p>\\n","line":40,"type":"string","decorators":[]},{"name":"primary","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs this the principal call to action on the page?\\n","description":"<p>Is this the principal call to action on the page?</p>\\n","line":20,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"\'medium\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHow large should the button be?\\n","description":"<p>How large should the button be?</p>\\n","line":32,"type":"\\"small\\" | \\"medium\\" | \\"large\\"","decorators":[]}],"outputsClass":[{"name":"onClick","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOptional click handler\\n","description":"<p>Optional click handler</p>\\n","line":46,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'storybook-button\',\\n  template: ` <button\\n    type=\\"button\\"\\n    (click)=\\"onClick.emit($event)\\"\\n    [ngClass]=\\"classes\\"\\n    [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n  >\\n    {{ label }}\\n  </button>`,\\n  styleUrls: [\'./button.css\'],\\n})\\nexport default class ButtonComponent {\\n  /**\\n   * Is this the principal call to action on the page?\\n   */\\n  @Input()\\n  primary = false;\\n\\n  /**\\n   * What background color to use\\n   */\\n  @Input()\\n  backgroundColor?: string;\\n\\n  /**\\n   * How large should the button be?\\n   */\\n  @Input()\\n  size: \'small\' | \'medium\' | \'large\' = \'medium\';\\n\\n  /**\\n   * Button contents\\n   *\\n   * @required\\n   */\\n  @Input()\\n  label = \'Button\';\\n\\n  /**\\n   * Optional click handler\\n   */\\n  @Output()\\n  onClick = new EventEmitter<Event>();\\n\\n  public get classes(): string[] {\\n    const mode = this.primary ? \'storybook-button--primary\' : \'storybook-button--secondary\';\\n\\n    return [\'storybook-button\', `storybook-button--${this.size}`, mode];\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".storybook-button {\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\n  font-weight: 700;\\n  border: 0;\\n  border-radius: 3em;\\n  cursor: pointer;\\n  display: inline-block;\\n  line-height: 1;\\n}\\n.storybook-button--primary {\\n  color: white;\\n  background-color: #1ea7fd;\\n}\\n.storybook-button--secondary {\\n  color: #333;\\n  background-color: transparent;\\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\\n}\\n.storybook-button--small {\\n  font-size: 12px;\\n  padding: 10px 16px;\\n}\\n.storybook-button--medium {\\n  font-size: 14px;\\n  padding: 11px 20px;\\n}\\n.storybook-button--large {\\n  font-size: 16px;\\n  padding: 12px 24px;\\n}\\n","styleUrl":"./button.css"}],"stylesData":"","accessors":{"classes":{"name":"classes","getSignature":{"name":"classes","type":"[]","returnType":"string[]","line":48}}}},{"name":"CameracontrolComponent","id":"component-CameracontrolComponent-245a7a07860aa074ac0661cbcf37a44fdb4dfbe46ffc9edf9aac68ba841f4c1b27092977ee34ecf432d2c1746054978b814ee7e1e683dc58e63fb1ebdd233d5b","file":"src/app/threejs-basic/cameracontrol/cameracontrol.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cameracontrol","styleUrls":["./cameracontrol.component.scss"],"styles":[],"templateUrl":["./cameracontrol.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16}],"methodsClass":[{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""},{"name":"onAnimate","args":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-cameracontrol\',\\n  templateUrl: \'./cameracontrol.component.html\',\\n  styleUrls: [\'./cameracontrol.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CameracontrolComponent implements OnInit  {\\n\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n  hover = false;\\n  active = false;\\n\\n  onAnimate(mesh: THREE.Object3D) {\\n    mesh.rotation.x = mesh.rotation.y += 0.01;\\n  }\\n  goback(){\\n    this.router.navigate([\'/basicthree\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cameracontrol.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\">\\r\\n    <ngt-canvas [camera]=\\"{position: [0, 0, 2]}\\">\\r\\n      <ngt-ambient-light></ngt-ambient-light>\\r\\n      <ngt-spot-light [position]=\\"[1, 1, 1]\\"></ngt-spot-light>\\r\\n      <ngt-mesh\\r\\n        (animateReady)=\\"\\r\\n            $event.object.rotation.x = $event.object.rotation.x + 0.01;\\r\\n            $event.object.rotation.y = $event.object.rotation.y + 0.01\\r\\n          \\"\\r\\n      >\\r\\n        <ngt-mesh-basic-material\\r\\n          [parameters]=\\"{ color: \'turquoise\' }\\"\\r\\n        ></ngt-mesh-basic-material>\\r\\n        <ngt-box-geometry></ngt-box-geometry>\\r\\n      </ngt-mesh>\\r\\n\\r\\n      <ngt-grid-helper></ngt-grid-helper>\\r\\n\\r\\n      <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\\r\\n      \\r\\n    </ngt-canvas>\\r\\n  \\r\\n    <div>\\r\\n      <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\r\\n        Back\\r\\n      </button>\\r\\n      <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\r\\n  \\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\"padding-bottom: 10px;\\">\\r\\n  \\r\\n    </div>\\r\\n  </div>"},{"name":"CamOthroComponent","id":"component-CamOthroComponent-3e6aeb754f84c7b6bc02035b5ef06d524d68a306b9ce31ed2c43ffef4e9b75edd2fe86c215fbebffb3abae4a2d10686741b16ce56df67105d7af79bfaf0f30e3","file":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cam-othro","styleUrls":["./cam-othro.component.scss"],"styles":[],"templateUrl":["./cam-othro.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":22},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":21},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25},{"name":"positions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"NgtVector3[]","optional":false,"description":"","line":28}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy, AfterViewInit} from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\nimport {\\n  NgtVector3,\\n} from \'@angular-three/core\';\\n\\nconst NUM = 3;\\nconst half = (NUM - 1) / 2;\\n\\n\\n\\n\\n@Component({\\n  selector: \'app-cam-othro\',\\n  templateUrl: \'./cam-othro.component.html\',\\n  styleUrls: [\'./cam-othro.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CamOthroComponent  implements  AfterViewInit{\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  positions: NgtVector3[] = [];\\n  constructor() { \\n\\n  }\\n\\n  ngAfterViewInit(): void {\\n    for (let x = 0; x < NUM; x++) {\\n      for (let y = 0; y < NUM; y++) {\\n          this.positions.push([(x - half) * 4, (y - half) * 4, 0]);\\n      }\\n  }\\n  }\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cam-othro.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":28},"implements":["AfterViewInit"],"templateData":"<ngt-canvas [scene]=\\"{background: \'black\'|color}\\"   style=\\"height: 80vh; width: 100vw;\\">\\n  <ngt-soba-orthographic-camera (ready)=\\"$event.zoom = 40\\" [makeDefault]=\\"true\\" [position]=\\"[0, 0, 10]\\"></ngt-soba-orthographic-camera>\\n  <ngt-icosahedron-geometry\\n    #ngtGeometry=\\"ngtIcosahedronGeometry\\"\\n    [args]=\\"[1, 1]\\"\\n  ></ngt-icosahedron-geometry>\\n  <ngt-mesh-basic-material\\n    #ngtMaterial=\\"ngtMeshBasicMaterial\\"\\n    [parameters]=\'{color: \\"white\\", wireframe: true}\'\\n  ></ngt-mesh-basic-material>\\n  <ngt-group [position]=\\"[0, 0, -10]\\">\\n    <ngt-mesh\\n      *ngFor=\\"let position of positions\\"\\n      [geometry]=\\"ngtGeometry.geometry\\"\\n      [material]=\\"ngtMaterial.material\\"\\n      [position]=\\"position\\"\\n    ></ngt-mesh>\\n  </ngt-group>\\n  <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\\n</ngt-canvas>"},{"name":"CannonClumpComponent","id":"component-CannonClumpComponent-fc40598bdd7400dc6ea15875db2bc395c711b447894e92e5f8409e9ab62370f594c6c733b5382b48cd5a2fe7e22a93067092c93b8217b7e753dc80dbc2b3008d","file":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cannon-clump","styleUrls":["./cannon-clump.component.scss"],"styles":[],"templateUrl":["./cannon-clump.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport {\\n  NgtAnimationFrameStore,\\n  NgtStore,\\n  NgtTriplet,\\n  NgtVector3,\\n  tapEffect,\\n} from \'@angular-three/core\';\\n\\nimport {\\n  GetByIndex,\\n  SphereProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicSphere\\n} from \'@angular-three/cannon/bodies\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-cannon-clump\',\\n  templateUrl: \'./cannon-clump.component.html\',\\n  styleUrls: [\'./cannon-clump.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonClumpComponent {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n\\n@Component({\\n  selector: \'storybook-pointer\',\\n  template: `\\n      <ng-container\\n          ngtPhysicSphere\\n          [getPhysicProps]=\\"getSphereProps\\"\\n      ></ng-container>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PointerComponent extends NgtStore implements OnInit {\\n  getSphereProps: GetByIndex<SphereProps> = () => ({\\n      position: [0, 0, 0],\\n      type: \'Kinematic\',\\n      args: [3],\\n  });\\n\\n  @ViewChild(NgtPhysicSphere, { static: true })\\n  physicSphere!: NgtPhysicSphere;\\n\\n  constructor(private animationFrameStore: NgtAnimationFrameStore) {\\n      super();\\n  }\\n\\n  ngOnInit() {\\n      this.effect<void>(\\n          tapEffect(() => {\\n              const uuid = this.animationFrameStore.register({\\n                  callback: ({ viewport, mouse }) => {\\n                      this.physicSphere.api.position.set(\\n                          (mouse.x * viewport.width) / 2,\\n                          (mouse.y * viewport.height) / 2,\\n                          0\\n                      );\\n                  },\\n              });\\n\\n              return () => {\\n                  this.animationFrameStore.unregister(uuid);\\n              };\\n          })\\n      )();\\n  }\\n}\\n\\nconst mat = new THREE.Matrix4();\\nconst vec = new THREE.Vector3();\\n\\n@Component({\\n  selector: \'storybook-clump\',\\n  template: `\\n      <ngt-instanced-mesh\\n          ngtPhysicSphere\\n          #physicSphere=\\"ngtPhysicSphere\\"\\n          [getPhysicProps]=\\"getSphereProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [args]=\\"[count]\\"\\n          (animateReady)=\\"onAnimate($event.object, physicSphere)\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  color: \'red\',\\n                  roughness: 0,\\n                  envMapIntensity: 0.2,\\n                  emissive: \'#370037\'\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-instanced-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ClumpComponent {\\n  get position() {\\n      return [\\n          THREE.MathUtils.randFloatSpread(20),\\n          THREE.MathUtils.randFloatSpread(20),\\n          THREE.MathUtils.randFloatSpread(20),\\n      ] as NgtVector3;\\n  }\\n\\n  count = 40;\\n\\n  getSphereProps: GetByIndex<SphereProps> = () => ({\\n      args: [1],\\n      mass: 1,\\n      angularDamping: 0.1,\\n      linearDamping: 0.65,\\n      position: this.position as NgtTriplet,\\n  });\\n\\n  onAnimate(object: THREE.Object3D, physicSphere: NgtPhysicSphere) {\\n      for (let i = 0; i < this.count; i++) {\\n          // Get current whereabouts of the instanced sphere\\n          (object as THREE.InstancedMesh).getMatrixAt(i, mat);\\n          // Normalize the position and multiply by a negative force.\\n          // This is enough to drive it towards the center-point.\\n          physicSphere.api\\n              .at(i)\\n              .applyForce(\\n                  vec\\n                      .setFromMatrixPosition(mat)\\n                      .normalize()\\n                      .multiplyScalar(-50)\\n                      .toArray(),\\n                  [0, 0, 0]\\n              );\\n      }\\n  }\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cannon-clump.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":30},"templateData":"<ngt-canvas style=\\"height: 80vh; width: 100vw;\\"\\n            [shadows]=\\"true\\"\\n            [dpr]=\\"[1, 2]\\"\\n            [camera]=\\"{ position: [0, 0, 20], fov: 35, near: 1, far: 40 }\\"\\n        >\\n            <ngt-ambient-light [intensity]=\\"0.25\\"></ngt-ambient-light>\\n            <ngt-spot-light\\n                [args]=\\"[undefined, 1, undefined, 0.2, 1]\\"\\n                [position]=\\"[30, 30, 30]\\"\\n                [castShadow]=\\"true\\"\\n                [shadow]=\\"{ mapSize: [512, 512] | vector2 }\\"\\n            ></ngt-spot-light>\\n            <ngt-directional-light\\n                [intensity]=\\"5\\"\\n                [position]=\\"[-10, -10, -10]\\"\\n                color=\\"purple\\"\\n            ></ngt-directional-light>\\n\\n            <ngt-physics [gravity]=\\"[0, 2, 0]\\" [iterations]=\\"10\\">\\n                <storybook-pointer></storybook-pointer>\\n                <storybook-clump></storybook-clump>\\n            </ngt-physics>\\n            <ngt-soba-sky></ngt-soba-sky>\\n            <ngt-soba-environment preset=\\"sunset\\"></ngt-soba-environment>\\n            <ngt-effect-composer>\\n                <ngt-ssao></ngt-ssao>\\n            </ngt-effect-composer>\\n        </ngt-canvas>"},{"name":"CannonCompoundComponent","id":"component-CannonCompoundComponent-80afcd2c664fd8c33210780df76d2d25990a0291295e077e1d229f3b07ea150ddfc0f8feb74383d537a86364b638ce145877175261a54165db6704d031057e32","file":"src/app/threejs-basic/cannon-compound/cannon-compound.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cannon-compound","styleUrls":["./cannon-compound.component.scss"],"styles":[],"templateUrl":["./cannon-compound.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"copy$","defaultValue":"timer(1000).pipe(\\n      tap(() => {\\n          this.isCopied = true;\\n      }),\\n      mapTo(true),\\n      startWith(false)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"isCopied","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40},{"name":"position","defaultValue":"[0, 0, 0]","deprecated":false,"deprecationMessage":"","type":"NgtVector3","optional":false,"description":"","line":42},{"name":"ready$","defaultValue":"timer(2000).pipe(mapTo(true), startWith(false))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31},{"name":"rotation","defaultValue":"[0, 0, 0]","deprecated":false,"deprecationMessage":"","type":"NgtEuler","optional":false,"description":"","line":43}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  Input,\\n  NgModule,\\n  Output,\\n} from \'@angular/core\';\\nimport { mapTo, startWith, tap, timer } from \'rxjs\';\\nimport {\\n  NgtEuler,\\n  NgtTriplet,\\n  NgtVector3,\\n} from \'@angular-three/core\';\\nimport {\\n  CompoundBodyProps,\\n  GetByIndex,\\n  PlaneProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicCompound} from \'@angular-three/cannon/bodies\';\\n\\n@Component({\\n  selector: \'app-cannon-compound\',\\n  templateUrl: \'./cannon-compound.component.html\',\\n  styleUrls: [\'./cannon-compound.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonCompoundComponent {\\n\\n  ready$ = timer(2000).pipe(mapTo(true), startWith(false));\\n  copy$ = timer(1000).pipe(\\n      tap(() => {\\n          this.isCopied = true;\\n      }),\\n      mapTo(true),\\n      startWith(false)\\n  );\\n\\n  isCopied = false;\\n\\n  position: NgtVector3 = [0, 0, 0];\\n  rotation: NgtEuler = [0, 0, 0];\\n\\n}\\n\\n\\n\\n@Component({\\n  selector: \'ngt-plane\',\\n  template: `\\n      <ngt-group\\n          ngtPhysicPlane\\n          [getPhysicProps]=\\"getPlaneProps\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-mesh>\\n              <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n              <ngt-mesh-basic-material\\n                  [parameters]=\\"{ color: \'#ffb385\' }\\"\\n              ></ngt-mesh-basic-material>\\n          </ngt-mesh>\\n\\n          <ngt-mesh [receiveShadow]=\\"true\\">\\n              <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n              <ngt-shadow-material\\n                  [parameters]=\\"{ color: \'lightsalmon\' }\\"\\n              ></ngt-shadow-material>\\n          </ngt-mesh>\\n      </ngt-group>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneCompoundComponent {\\n  @Input() rotation?: NgtEuler;\\n\\n  getPlaneProps: GetByIndex<PlaneProps> = () => ({\\n      rotation: this.rotation as NgtTriplet,\\n      type: \'Static\',\\n  });\\n}\\n\\n@Component({\\n  selector: \'ngt-compound\',\\n  template: `\\n      <ngt-group\\n          ngtPhysicCompound\\n          #ngtPhysicCompound=\\"ngtPhysicCompound\\"\\n          (ready)=\\"onReady(ngtPhysicCompound)\\"\\n          [getPhysicProps]=\\"getCompoundProps\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-mesh [castShadow]=\\"true\\">\\n              <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n              <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n          </ngt-mesh>\\n          <ngt-mesh [castShadow]=\\"true\\" [position]=\\"[1, 0, 0]\\">\\n              <ngt-sphere-geometry\\n                  [args]=\\"[sphereRadius, 16, 16]\\"\\n              ></ngt-sphere-geometry>\\n              <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n          </ngt-mesh>\\n      </ngt-group>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CompoundComponent {\\n  @Input() isTrigger?: boolean;\\n  @Input() mass = 12;\\n  @Input() position?: NgtVector3;\\n  @Input() rotation?: NgtEuler;\\n\\n  @Output() positionChange = new EventEmitter<NgtVector3>();\\n  @Output() rotationChange = new EventEmitter<NgtEuler>();\\n\\n  boxSize: NgtTriplet = [1, 1, 1];\\n  sphereRadius = 0.65;\\n\\n  #positionSubscription?: () => void;\\n  #rotationSubscription?: () => void;\\n\\n  ngOnDestroy() {\\n      this.#positionSubscription?.();\\n      this.#rotationSubscription?.();\\n  }\\n\\n  getCompoundProps: GetByIndex<CompoundBodyProps> = () => {\\n      return {\\n          isTrigger: this.isTrigger,\\n          mass: this.mass,\\n          position: this.position as NgtTriplet,\\n          rotation: this.rotation as NgtTriplet,\\n          shapes: [\\n              {\\n                  type: \'Box\',\\n                  position: [0, 0, 0],\\n                  rotation: [0, 0, 0],\\n                  args: this.boxSize,\\n              },\\n              {\\n                  type: \'Sphere\',\\n                  position: [1, 0, 0],\\n                  rotation: [0, 0, 0],\\n                  args: [this.sphereRadius],\\n              },\\n          ],\\n      };\\n  };\\n\\n  onReady(ngtPhysicCompound: NgtPhysicCompound) {\\n      if (this.positionChange.observed) {\\n          this.#positionSubscription =\\n              ngtPhysicCompound.api.position.subscribe(\\n                  this.positionChange.emit.bind(this.positionChange)\\n              );\\n      }\\n\\n      if (this.rotationChange.observed) {\\n          this.#rotationSubscription =\\n              ngtPhysicCompound.api.rotation.subscribe(\\n                  this.rotationChange.emit.bind(this.rotationChange)\\n              );\\n      }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cannon-compound.component.scss"}],"stylesData":"","templateData":"<ngt-canvas\\n[shadows]=\\"true\\"\\n[camera]=\\"{ position: [-2, 1, 7], fov: 50 }\\"\\n[scene]=\\"{ background: \'#f6d186\' | color }\\"\\nstyle=\\"height: 80vh; width: 100vw;\\"\\n>\\n<ngt-stats></ngt-stats>\\n<ngt-hemisphere-light [intensity]=\\"0.35\\"></ngt-hemisphere-light>\\n<ngt-spot-light\\n    [intensity]=\\"2\\"\\n    [args]=\\"[undefined, undefined, undefined, 0.3, 1]\\"\\n    [castShadow]=\\"true\\"\\n    [position]=\\"[5, 5, 5]\\"\\n    [shadow]=\\"{ mapSize: [1028, 1028] | vector2 }\\"\\n></ngt-spot-light>\\n\\n<ngt-physics [iterations]=\\"6\\" [gravity]=\\"[0, -9.81, 0]\\">\\n    <ngt-cannon-debug [scale]=\\"1.1\\" color=\\"black\\">\\n        <ngt-plane [rotation]=\\"[-(90 | radian), 0, 0]\\"></ngt-plane>\\n        <ngt-compound\\n            [position]=\\"[1.5, 5, 0.5]\\"\\n            [rotation]=\\"[1.25, 0, 0]\\"\\n        ></ngt-compound>\\n        <ngt-compound\\n            [position]=\\"[2.5, 3, 0.25]\\"\\n            [rotation]=\\"[1.25, -1.25, 0]\\"\\n            (positionChange)=\\"!isCopied && (position = $event)\\"\\n            (rotationChange)=\\"!isCopied && (rotation = $event)\\"\\n        ></ngt-compound>\\n\\n        <ngt-compound\\n            *ngIf=\\"ready$ | async\\"\\n            [position]=\\"[2.5, 4, 0.25]\\"\\n            [rotation]=\\"[1.25, -1.25, 0]\\"\\n        ></ngt-compound>\\n\\n        <ngt-compound\\n            *ngIf=\\"copy$ | async\\"\\n            [isTrigger]=\\"true\\"\\n            [mass]=\\"0\\"\\n            [position]=\\"position\\"\\n            [rotation]=\\"rotation\\"\\n        ></ngt-compound>\\n        ,\\n    </ngt-cannon-debug>\\n</ngt-physics>\\n</ngt-canvas>"},{"name":"CannonKinematicComponent","id":"component-CannonKinematicComponent-19dea74262f72e4f13a45db9a8e6829abc013af69d55c86d8820444b284cb44a3673195620f58f5eef6b0a1791a009a778a02dfdbd2ed3a951b989361f329afc","file":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cannon-kinematic","styleUrls":["./cannon-kinematic.component.scss"],"styles":[],"templateUrl":["./cannon-kinematic.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"niceColor","defaultValue":"niceColor","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { BoxProps, SphereProps } from \'@angular-three/cannon\';\\nimport {\\n  ChangeDetectionStrategy,\\n  Input\\n} from \'@angular/core\';\\nimport {\\n  NgtEuler,\\n  NgtRender,\\n  NgtTriplet,\\n  NgtVector3\\n} from \'@angular-three/core\';\\n\\nimport {\\n  NgtPhysicBox\\n} from \'@angular-three/cannon/bodies\';\\n\\n// @ts-ignore\\nimport niceColors from \'nice-color-palettes\';\\nimport * as THREE from \'three\';\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\n\\n\\n@Component({\\n  selector: \'app-cannon-kinematic\',\\n  templateUrl: \'./cannon-kinematic.component.html\',\\n  styleUrls: [\'./cannon-kinematic.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonKinematicComponent implements OnInit {\\n  niceColor = niceColor;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n@Component({\\n  selector: \'app-plane\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [rotation]=\\"rotation\\"\\n          [position]=\\"position\\"\\n          [receiveShadow]=\\"true\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ color }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneComponent {\\n  @Input() color?: THREE.ColorRepresentation;\\n  @Input() position?: NgtVector3;\\n  @Input() rotation?: NgtEuler;\\n}\\n\\n@Component({\\n  selector: \'app-box\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicBox\\n          #physicBox=\\"ngtPhysicBox\\"\\n          [getPhysicProps]=\\"getBoxProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\n      >\\n          <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n          <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BoxComponent {\\n  boxSize: NgtTriplet = [4, 4, 4];\\n\\n  getBoxProps = (): BoxProps => ({\\n      mass: 1,\\n      type: \'Kinematic\',\\n      args: this.boxSize,\\n  });\\n\\n  onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\n      const t = clock.getElapsedTime();\\n      api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\n      api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-spheres\',\\n  template: `\\n      <ngt-instanced-mesh\\n          ngtPhysicSphere\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [getPhysicProps]=\\"getInstancedProps\\"\\n          [args]=\\"[number]\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\n              <ngt-instanced-buffer-attribute\\n                  attach=\\"color\\"\\n                  [args]=\\"[colors, 3]\\"\\n              ></ngt-instanced-buffer-attribute>\\n          </ngt-sphere-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ vertexColors: true }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-instanced-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class InstancedSpheresComponent {\\n  @Input() number = 100;\\n\\n  colors!: Float32Array;\\n\\n  ngOnInit() {\\n      this.colors = new Float32Array(this.number * 3);\\n      const color = new THREE.Color();\\n\\n      for (let i = 0; i < this.number; i++) {\\n          color\\n              .set(niceColor[Math.floor(Math.random() * 5)])\\n              .convertSRGBToLinear()\\n              .toArray(this.colors, i * 3);\\n      }\\n  }\\n\\n  getInstancedProps(index: number) {\\n      return {\\n          args: [1],\\n          mass: 1,\\n          position: [\\n              Math.random() - 0.5,\\n              Math.random() - 0.5,\\n              index * 2,\\n          ] as SphereProps[\'position\'],\\n      } as SphereProps;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cannon-kinematic.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":31},"implements":["OnInit"],"templateData":"<ngt-canvas [shadows]=\\"true\\" [camera]=\\"{ position: [0, -12, 16] }\\" style=\\"height: 80vh; width: 100vw;\\" >\\n    <ngt-stats></ngt-stats>\\n\\n    <ngt-hemisphere-light [intensity]=\\"0.35\\"></ngt-hemisphere-light>\\n    <ngt-spot-light\\n        [position]=\\"[30, 0, 30]\\"\\n        [intensity]=\\"2\\"\\n        [shadow]=\\"{ mapSize: [256, 256] | vector2 }\\"\\n        [castShadow]=\\"true\\"\\n        [args]=\\"[undefined, undefined, undefined, 0.3, 1]\\"\\n    ></ngt-spot-light>\\n    <ngt-point-light\\n        [position]=\\"[-30, 0, -30]\\"\\n        [intensity]=\\"0.5\\"\\n    ></ngt-point-light>\\n\\n    <ngt-physics [gravity]=\\"[0, 0, -30]\\">\\n        <app-plane [color]=\\"niceColor[4]\\"></app-plane>\\n        <app-plane\\n            [color]=\\"niceColor[1]\\"\\n            [position]=\\"[-6, 0, 0]\\"\\n            [rotation]=\\"[0, 0.9, 0]\\"\\n        ></app-plane>\\n        <app-plane\\n            [color]=\\"niceColor[2]\\"\\n            [position]=\\"[6, 0, 0]\\"\\n            [rotation]=\\"[0, -0.9, 0]\\"\\n        ></app-plane>\\n        <app-plane\\n            [color]=\\"niceColor[3]\\"\\n            [position]=\\"[0, 6, 0]\\"\\n            [rotation]=\\"[0.9, 0, 0]\\"\\n        ></app-plane>\\n        <app-plane\\n            [color]=\\"niceColor[0]\\"\\n            [position]=\\"[0, -6, 0]\\"\\n            [rotation]=\\"[-0.9, 0, 0]\\"\\n        ></app-plane>\\n\\n        <app-box></app-box>\\n        <app-spheres [number]=\\"100\\"></app-spheres>\\n    </ngt-physics>\\n</ngt-canvas>"},{"name":"CannonSingleComponent","id":"component-CannonSingleComponent-e4176349fc9afcae577c175998dac7733df8e7cc0b9e87b37b40a3613b8ef12dc872bab49fa0ed7a186dd523cc63651bc98c0618e919cf977a44c3fdf5418c8b","file":"src/app/threejs-basic/cannon-single/cannon-single.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cannon-single","styleUrls":["./cannon-single.component.scss"],"styles":[],"templateUrl":["./cannon-single.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy,Input } from \'@angular/core\';\\nimport { NgtVector3,NgtEuler,NgtTriplet } from \'@angular-three/core\';\\nimport { BoxProps, GetByIndex } from \'@angular-three/cannon\';\\n\\n@Component({\\n  selector: \'app-cannon-single\',\\n  templateUrl: \'./cannon-single.component.html\',\\n  styleUrls: [\'./cannon-single.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonSingleComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n@Component({\\n  selector: \'storybook-plane\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"[-90 | radian, 0, 0]\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{\\n                  color: \'#171717\',\\n                  transparent: true,\\n                  opacity: 0.4\\n              }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneSingleComponent {\\n  @Input() position?: NgtVector3;\\n}\\n\\n@Component({\\n  selector: \'storybook-cube\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicBox\\n          [getPhysicProps]=\\"getCubeProps\\"\\n          [receiveShadow]=\\"true\\"\\n          [castShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-lambert-material\\n              [parameters]=\\"{ color: \'hotpink\' }\\"\\n          ></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CubeSingleComponent {\\n  @Input() position?: NgtVector3;\\n  rotation = [0.4, 0.2, 0.5] as NgtEuler;\\n\\n  getCubeProps: GetByIndex<BoxProps> = () => ({\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n      rotation: this.rotation as NgtTriplet,\\n  });\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cannon-single.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":11},"implements":["OnInit"],"templateData":"<ngt-canvas style=\\"height: 80vh; width: 100vw;\\" \\n[shadows]=\\"true\\"\\n[gl]=\\"{ alpha: false }\\"\\n[camera]=\\"{ position: [-1, 5, 5], fov: 45 }\\"\\n[scene]=\\"{ background: \'lightblue\' | color }\\"\\n>\\n<ngt-ambient-light></ngt-ambient-light>\\n<ngt-directional-light\\n    [position]=\\"[10, 10, 10]\\"\\n    [castShadow]=\\"true\\"\\n    [shadow]=\\"{ mapSize: [2048, 2048] | vector2 }\\"\\n></ngt-directional-light>\\n\\n<ngt-physics>\\n    <storybook-plane [position]=\\"[0, -2.5, 0]\\"></storybook-plane>\\n    <storybook-cube [position]=\\"[0.1, 5, 0]\\"></storybook-cube>\\n    <storybook-cube [position]=\\"[0, 10, -1]\\"></storybook-cube>\\n    <storybook-cube [position]=\\"[0, 20, -2]\\"></storybook-cube>\\n</ngt-physics>\\n</ngt-canvas>"},{"name":"CannonSphereComponent","id":"component-CannonSphereComponent-114d61a02b42665fcf9e9aec8ed56de1c433c629d5d5018b381aed28e42adb521f0b8418091bd8380638028ad27fda9c23092def0f2ddf08408ad98b99c72827","file":"src/app/threejs-basic/cannon-sphere/cannon-sphere.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cannon-sphere","styleUrls":["./cannon-sphere.component.scss"],"styles":[],"templateUrl":["./cannon-sphere.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  GetByIndex,\\n  PlaneProps,\\n  SphereProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicSphere\\n} from \'@angular-three/cannon/bodies\';\\nimport {\\n  NgtEuler,\\n  NgtTriplet,\\n  NgtVector3,\\n} from \'@angular-three/core\';\\n\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  NgModule,\\n  ViewChild,\\n} from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-cannon-sphere\',\\n  templateUrl: \'./cannon-sphere.component.html\',\\n  styleUrls: [\'./cannon-sphere.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonSphereComponent  {\\n\\n  constructor() { }\\n\\n\\n}\\n\\n@Component({\\n  selector: \'storybook-plane-sphere\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [getPhysicProps]=\\"getPlaneProps\\"\\n          [rotation]=\\"rotation\\"\\n          [receiveShadow]=\\"true\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[20, 20]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{ color: \'#171717\' }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneSphereComponent {\\n  rotation = [-Math.PI / 2, 0, 0] as NgtEuler;\\n\\n  getPlaneProps: GetByIndex<PlaneProps> = () => ({\\n      type: \'Static\',\\n      rotation: this.rotation as NgtTriplet,\\n  });\\n}\\n\\n@Component({\\n  selector: \'storybook-scalable-ball\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicSphere\\n          [getPhysicProps]=\\"getBallProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          (click)=\\"onClick()\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  color: \'blue\',\\n                  transparent: true,\\n                  opacity: 0.5\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ScalableBallComponent {\\n  isSleeping = false;\\n\\n  position = [0, 5, 0] as NgtVector3;\\n\\n  @ViewChild(NgtPhysicSphere, { static: true })\\n  physicSphere!: NgtPhysicSphere;\\n\\n  getBallProps: GetByIndex<SphereProps> = () => ({\\n      args: [1],\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n  });\\n\\n  onClick() {\\n      this.isSleeping\\n          ? this.physicSphere.api.wakeUp()\\n          : this.physicSphere.api.sleep();\\n      this.isSleeping = !this.isSleeping;\\n  }\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cannon-sphere.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":28},"templateData":"<ngt-canvas\\n            [shadows]=\\"true\\"\\n            [camera]=\\"{ position: [-1, 2, 4] }\\"\\n            [scene]=\\"{ background: \'#a6d1f6\' | color }\\"\\n            style=\\"height: 80vh; width: 100vw;\\"\\n        >\\n            <ngt-hemisphere-light></ngt-hemisphere-light>\\n            <ngt-directional-light\\n                [castShadow]=\\"true\\"\\n                [position]=\\"[5, 10, 5]\\"\\n            ></ngt-directional-light>\\n\\n            <ngt-physics [allowSleep]=\\"true\\">\\n                <ngt-cannon-debug [scale]=\\"1.1\\">\\n                    <storybook-plane></storybook-plane>\\n                    <storybook-scalable-ball></storybook-scalable-ball>\\n                </ngt-cannon-debug>\\n            </ngt-physics>\\n\\n            <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\\n        </ngt-canvas>"},{"name":"CannonStartComponent","id":"component-CannonStartComponent-04d644be611aada0b35a0cad04055af7dad7f921d9a5cea7057196c0db92e1bbb737926fd7b4dc1cec61e5b0fbb94696a9cec4789b0405e67c7b6b9d4c30bcdb","file":"src/app/threejs-basic/cannon-start/cannon-start.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cannon-start","styleUrls":["./cannon-start.component.scss"],"styles":[],"templateUrl":["./cannon-start.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\nimport { NgtVector3,NgtEuler,NgtTriplet } from \'@angular-three/core\';\\nimport { BoxProps, GetByIndex } from \'@angular-three/cannon\';\\n\\n@Component({\\n  selector: \'app-cannon-start\',\\n  templateUrl: \'./cannon-start.component.html\',\\n  styleUrls: [\'./cannon-start.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonStartComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n\\n\\n@Component({\\n  selector: \'app-floor\',\\n  template: `\\n      \x3c!-- 👇 turns this Mesh into a Physic Plane by attaching ngtPhysicPlane on it --\x3e\\n      \x3c!-- 👇 NgtPhysicPlaneModule provides this directive --\x3e\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"[0, -2.5, 0]\\"\\n          [rotation]=\\"[-90 | radian, 0, 0]\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{\\n                  color: \'#171717\',\\n                  transparent: true,\\n                  opacity: 0.4\\n              }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class FloorComponent {}\\n\\n\\n@Component({\\n  selector: \'app-cube-cannon\',\\n  template: `\\n      \x3c!-- 👇 turns this Mesh into a Physic Box by attaching ngtPhysicBox on it --\x3e\\n      \x3c!-- 👇 NgtPhysicBoxModule provides this directive --\x3e\\n      \x3c!-- 👇 getPhysicProps is a function that provides the object\'s props to our ngtPhysicBox --\x3e\\n      \x3c!-- 👇 so the Physic World is aware of our object\'s position and such --\x3e\\n      <ngt-mesh\\n          ngtPhysicBox\\n          [getPhysicProps]=\\"getCubeProps\\"\\n          [receiveShadow]=\\"true\\"\\n          [castShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n          [scale]=\\"scale\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-lambert-material\\n              [parameters]=\\"{ color: \'hotpink\' }\\"\\n          ></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CubeCannonComponent {\\n  // 👇 we create these class properties to reuse them in getCubeProps and on the template.\\n  // 👇 These can be turned into Input later\\n  position = [0.1, 5, 0] as NgtVector3;\\n  rotation = [0.4, 0.2, 0.5] as NgtEuler;\\n  scale = 0.5 as NgtVector3;\\n\\n  getCubeProps: GetByIndex<BoxProps> = () => ({\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n      rotation: this.rotation as NgtTriplet,\\n      // 👇 this is specific to BoxProps\\n      args: [this.scale, this.scale, this.scale] as NgtTriplet\\n  });\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cannon-start.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":11},"implements":["OnInit"],"templateData":"<ngt-canvas style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\"\\n[shadows]=\\"true\\"\\n[gl]=\\"{ alpha: false }\\"\\n[camera]=\\"{ position: [-1, 5, 5], fov: 45 }\\"\\n[scene]=\\"{ background: \'lightblue\' | color }\\"\\n[initialLog]=\\"true\\"\\n>\\n\x3c!-- ... --\x3e\\n<ngt-physics>\\n    <app-floor></app-floor>\\n    \x3c!-- 👇 put our Cube inside of ngt-physics --\x3e\\n    <app-cube-cannon></app-cube-cannon>\\n</ngt-physics>\\n</ngt-canvas>"},{"name":"CardComponent","id":"component-CardComponent-672e9ebd4f7f37a6c4ebc07274697505264ce86473a906a77657dd527ecf44052774d6ab9621e9c63703bbe9895d14d6c0b6ce603356e61f7049cdfc7987e434","file":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"wm-card","styleUrls":[],"styles":["\\n      :host {\\n        display: block;\\n        border-radius: 10px;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n        overflow: hidden;\\n        text-align: left;\\n        width: 300px;\\n      }\\n      .picture {\\n        object-fit: cover;\\n        height: 300px;\\n        width: 100%;\\n      }\\n      .content {\\n        margin: 10px;\\n      }\\n    "],"template":"<img *ngIf=\\"pictureUri\\" class=\\"picture\\" [src]=\\"pictureUri\\" />   <div class=\\"content\\">\\n     <ng-content></ng-content>\\n   </div>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"pictureUri","deprecated":false,"deprecationMessage":"","line":120,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState, select, selectSlice } from \'@rx-angular/state\';\\nimport { map } from \'rxjs\';\\nimport { UserdataService } from \'../../service/userdata.service\';\\nimport { Recipe } from \'../receipe\';\\n\\nexport interface State {\\n  recipes: Recipe[];\\n  recipeIndex: number;\\n}\\n\\n@Component({\\n  selector: \'app-marmi-rxstate\',\\n  templateUrl: \'./marmi-rxstate.component.html\',\\n  styleUrls: [\'./marmi-rxstate.component.scss\'],  \\n  providers: [RxState],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class MarmiRxstateComponent {\\n  // 👇 Using select/selectslice create observables for using in template for display\\n  recipe$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => recipes?.[recipeIndex])\\n  );\\n  // 👇 create boolean observable for use in template\\n  hasPrevious$ = this._state\\n    .select(\'recipeIndex\')\\n    .pipe(select(map((index) => index > 0)));\\n\\n  // 👇 create boolean observable for use in template\\n  hasNext$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => {\\n      console.count(\'compute hasNext...\');\\n      return recipeIndex + 1 < recipes.length;\\n    })\\n  );\\n  // 👇 create store in template \\n  recipes$ = this._state.select(\'recipes\');\\n\\n  constructor(\\n    private _recipeRepository: UserdataService,\\n    private _state: RxState<State>\\n  ) {\\n    // 👇 set command initializes the store state\\n    this._state.set({ recipeIndex: 0 });\\n    // 👇 Data from template/service is connected to the store state recepes\\n    this._state.connect(\'recipes\', this._recipeRepository.getRecipes());\\n  }\\n\\n  // 👇 set command directly interacts with store for no side effect\\n  next() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex + 1 }));\\n  }\\n\\n  previous() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex - 1 }));\\n  }\\n\\n  reset() {\\n    this._state.set({ recipeIndex: 0 });\\n  }\\n}\\n\\n;\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-recipe-preview\',\\n  template: `<wm-card *ngIf=\\"recipe\\" [pictureUri]=\\"recipe.pictureUri\\">\\n    <h2 data-role=\\"recipe-name\\">{{ recipe.name }}</h2>\\n    <ng-content></ng-content>\\n  </wm-card>`,\\n  styles: [\\n    `\\n      h2 {\\n        font-size: 1.2em;\\n        text-align: center;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n})\\nexport class RecipePreviewComponent {\\n  @Input() recipe?: Recipe;\\n}\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-card\',\\n  template: ` <img *ngIf=\\"pictureUri\\" class=\\"picture\\" [src]=\\"pictureUri\\" />\\n    <div class=\\"content\\">\\n      <ng-content></ng-content>\\n    </div>`,\\n  styles: [\\n    `\\n      :host {\\n        display: block;\\n        border-radius: 10px;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n        overflow: hidden;\\n        text-align: left;\\n        width: 300px;\\n      }\\n      .picture {\\n        object-fit: cover;\\n        height: 300px;\\n        width: 100%;\\n      }\\n      .content {\\n        margin: 10px;\\n      }\\n    `,\\n  ],\\n})\\nexport class CardComponent {\\n  @Input() pictureUri?: string;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      :host {\\n        display: block;\\n        border-radius: 10px;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n        overflow: hidden;\\n        text-align: left;\\n        width: 300px;\\n      }\\n      .picture {\\n        object-fit: cover;\\n        height: 300px;\\n        width: 100%;\\n      }\\n      .content {\\n        margin: 10px;\\n      }\\n    \\n"},{"name":"ClumpComponent","id":"component-ClumpComponent-fc40598bdd7400dc6ea15875db2bc395c711b447894e92e5f8409e9ab62370f594c6c733b5382b48cd5a2fe7e22a93067092c93b8217b7e753dc80dbc2b3008d","file":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-clump","styleUrls":[],"styles":[],"template":"<ngt-instanced-mesh\\n    ngtPhysicSphere\\n    #physicSphere=\\"ngtPhysicSphere\\"\\n    [getPhysicProps]=\\"getSphereProps\\"\\n    [castShadow]=\\"true\\"\\n    [receiveShadow]=\\"true\\"\\n    [args]=\\"[count]\\"\\n    (animateReady)=\\"onAnimate($event.object, physicSphere)\\"\\n>\\n    <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n    <ngt-mesh-standard-material\\n        [parameters]=\\"{\\n            color: \'red\',\\n            roughness: 0,\\n            envMapIntensity: 0.2,\\n            emissive: \'#370037\'\\n        }\\"\\n    ></ngt-mesh-standard-material>\\n</ngt-instanced-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"count","defaultValue":"40","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":122},{"name":"getSphereProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<SphereProps>","optional":false,"description":"","line":124}],"methodsClass":[{"name":"onAnimate","args":[{"name":"object","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""},{"name":"physicSphere","type":"NgtPhysicSphere","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"object","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"physicSphere","type":"NgtPhysicSphere","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport {\\n  NgtAnimationFrameStore,\\n  NgtStore,\\n  NgtTriplet,\\n  NgtVector3,\\n  tapEffect,\\n} from \'@angular-three/core\';\\n\\nimport {\\n  GetByIndex,\\n  SphereProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicSphere\\n} from \'@angular-three/cannon/bodies\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-cannon-clump\',\\n  templateUrl: \'./cannon-clump.component.html\',\\n  styleUrls: [\'./cannon-clump.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonClumpComponent {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n\\n@Component({\\n  selector: \'storybook-pointer\',\\n  template: `\\n      <ng-container\\n          ngtPhysicSphere\\n          [getPhysicProps]=\\"getSphereProps\\"\\n      ></ng-container>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PointerComponent extends NgtStore implements OnInit {\\n  getSphereProps: GetByIndex<SphereProps> = () => ({\\n      position: [0, 0, 0],\\n      type: \'Kinematic\',\\n      args: [3],\\n  });\\n\\n  @ViewChild(NgtPhysicSphere, { static: true })\\n  physicSphere!: NgtPhysicSphere;\\n\\n  constructor(private animationFrameStore: NgtAnimationFrameStore) {\\n      super();\\n  }\\n\\n  ngOnInit() {\\n      this.effect<void>(\\n          tapEffect(() => {\\n              const uuid = this.animationFrameStore.register({\\n                  callback: ({ viewport, mouse }) => {\\n                      this.physicSphere.api.position.set(\\n                          (mouse.x * viewport.width) / 2,\\n                          (mouse.y * viewport.height) / 2,\\n                          0\\n                      );\\n                  },\\n              });\\n\\n              return () => {\\n                  this.animationFrameStore.unregister(uuid);\\n              };\\n          })\\n      )();\\n  }\\n}\\n\\nconst mat = new THREE.Matrix4();\\nconst vec = new THREE.Vector3();\\n\\n@Component({\\n  selector: \'storybook-clump\',\\n  template: `\\n      <ngt-instanced-mesh\\n          ngtPhysicSphere\\n          #physicSphere=\\"ngtPhysicSphere\\"\\n          [getPhysicProps]=\\"getSphereProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [args]=\\"[count]\\"\\n          (animateReady)=\\"onAnimate($event.object, physicSphere)\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  color: \'red\',\\n                  roughness: 0,\\n                  envMapIntensity: 0.2,\\n                  emissive: \'#370037\'\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-instanced-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ClumpComponent {\\n  get position() {\\n      return [\\n          THREE.MathUtils.randFloatSpread(20),\\n          THREE.MathUtils.randFloatSpread(20),\\n          THREE.MathUtils.randFloatSpread(20),\\n      ] as NgtVector3;\\n  }\\n\\n  count = 40;\\n\\n  getSphereProps: GetByIndex<SphereProps> = () => ({\\n      args: [1],\\n      mass: 1,\\n      angularDamping: 0.1,\\n      linearDamping: 0.65,\\n      position: this.position as NgtTriplet,\\n  });\\n\\n  onAnimate(object: THREE.Object3D, physicSphere: NgtPhysicSphere) {\\n      for (let i = 0; i < this.count; i++) {\\n          // Get current whereabouts of the instanced sphere\\n          (object as THREE.InstancedMesh).getMatrixAt(i, mat);\\n          // Normalize the position and multiply by a negative force.\\n          // This is enough to drive it towards the center-point.\\n          physicSphere.api\\n              .at(i)\\n              .applyForce(\\n                  vec\\n                      .setFromMatrixPosition(mat)\\n                      .normalize()\\n                      .multiplyScalar(-50)\\n                      .toArray(),\\n                  [0, 0, 0]\\n              );\\n      }\\n  }\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"position":{"name":"position","getSignature":{"name":"position","type":"","returnType":"","line":114}}}},{"name":"CompoundComponent","id":"component-CompoundComponent-80afcd2c664fd8c33210780df76d2d25990a0291295e077e1d229f3b07ea150ddfc0f8feb74383d537a86364b638ce145877175261a54165db6704d031057e32","file":"src/app/threejs-basic/cannon-compound/cannon-compound.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngt-compound","styleUrls":[],"styles":[],"template":"<ngt-group\\n    ngtPhysicCompound\\n    #ngtPhysicCompound=\\"ngtPhysicCompound\\"\\n    (ready)=\\"onReady(ngtPhysicCompound)\\"\\n    [getPhysicProps]=\\"getCompoundProps\\"\\n    [position]=\\"position\\"\\n    [rotation]=\\"rotation\\"\\n>\\n    <ngt-mesh [castShadow]=\\"true\\">\\n        <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n        <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n    </ngt-mesh>\\n    <ngt-mesh [castShadow]=\\"true\\" [position]=\\"[1, 0, 0]\\">\\n        <ngt-sphere-geometry\\n            [args]=\\"[sphereRadius, 16, 16]\\"\\n        ></ngt-sphere-geometry>\\n        <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n    </ngt-mesh>\\n</ngt-group>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"isTrigger","deprecated":false,"deprecationMessage":"","line":109,"type":"boolean","decorators":[]},{"name":"mass","defaultValue":"12","deprecated":false,"deprecationMessage":"","line":110,"type":"number","decorators":[]},{"name":"position","deprecated":false,"deprecationMessage":"","line":111,"type":"NgtVector3","decorators":[]},{"name":"rotation","deprecated":false,"deprecationMessage":"","line":112,"type":"NgtEuler","decorators":[]}],"outputsClass":[{"name":"positionChange","defaultValue":"new EventEmitter<NgtVector3>()","deprecated":false,"deprecationMessage":"","line":114,"type":"EventEmitter"},{"name":"rotationChange","defaultValue":"new EventEmitter<NgtEuler>()","deprecated":false,"deprecationMessage":"","line":115,"type":"EventEmitter"}],"propertiesClass":[{"name":"#positionSubscription","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":120,"modifierKind":[121]},{"name":"#rotationSubscription","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":121,"modifierKind":[121]},{"name":"boxSize","defaultValue":"[1, 1, 1]","deprecated":false,"deprecationMessage":"","type":"NgtTriplet","optional":false,"description":"","line":117},{"name":"getCompoundProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<CompoundBodyProps>","optional":false,"description":"","line":128},{"name":"sphereRadius","defaultValue":"0.65","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":118}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":""},{"name":"onReady","args":[{"name":"ngtPhysicCompound","type":"NgtPhysicCompound","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"ngtPhysicCompound","type":"NgtPhysicCompound","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  Input,\\n  NgModule,\\n  Output,\\n} from \'@angular/core\';\\nimport { mapTo, startWith, tap, timer } from \'rxjs\';\\nimport {\\n  NgtEuler,\\n  NgtTriplet,\\n  NgtVector3,\\n} from \'@angular-three/core\';\\nimport {\\n  CompoundBodyProps,\\n  GetByIndex,\\n  PlaneProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicCompound} from \'@angular-three/cannon/bodies\';\\n\\n@Component({\\n  selector: \'app-cannon-compound\',\\n  templateUrl: \'./cannon-compound.component.html\',\\n  styleUrls: [\'./cannon-compound.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonCompoundComponent {\\n\\n  ready$ = timer(2000).pipe(mapTo(true), startWith(false));\\n  copy$ = timer(1000).pipe(\\n      tap(() => {\\n          this.isCopied = true;\\n      }),\\n      mapTo(true),\\n      startWith(false)\\n  );\\n\\n  isCopied = false;\\n\\n  position: NgtVector3 = [0, 0, 0];\\n  rotation: NgtEuler = [0, 0, 0];\\n\\n}\\n\\n\\n\\n@Component({\\n  selector: \'ngt-plane\',\\n  template: `\\n      <ngt-group\\n          ngtPhysicPlane\\n          [getPhysicProps]=\\"getPlaneProps\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-mesh>\\n              <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n              <ngt-mesh-basic-material\\n                  [parameters]=\\"{ color: \'#ffb385\' }\\"\\n              ></ngt-mesh-basic-material>\\n          </ngt-mesh>\\n\\n          <ngt-mesh [receiveShadow]=\\"true\\">\\n              <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n              <ngt-shadow-material\\n                  [parameters]=\\"{ color: \'lightsalmon\' }\\"\\n              ></ngt-shadow-material>\\n          </ngt-mesh>\\n      </ngt-group>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneCompoundComponent {\\n  @Input() rotation?: NgtEuler;\\n\\n  getPlaneProps: GetByIndex<PlaneProps> = () => ({\\n      rotation: this.rotation as NgtTriplet,\\n      type: \'Static\',\\n  });\\n}\\n\\n@Component({\\n  selector: \'ngt-compound\',\\n  template: `\\n      <ngt-group\\n          ngtPhysicCompound\\n          #ngtPhysicCompound=\\"ngtPhysicCompound\\"\\n          (ready)=\\"onReady(ngtPhysicCompound)\\"\\n          [getPhysicProps]=\\"getCompoundProps\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-mesh [castShadow]=\\"true\\">\\n              <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n              <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n          </ngt-mesh>\\n          <ngt-mesh [castShadow]=\\"true\\" [position]=\\"[1, 0, 0]\\">\\n              <ngt-sphere-geometry\\n                  [args]=\\"[sphereRadius, 16, 16]\\"\\n              ></ngt-sphere-geometry>\\n              <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n          </ngt-mesh>\\n      </ngt-group>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CompoundComponent {\\n  @Input() isTrigger?: boolean;\\n  @Input() mass = 12;\\n  @Input() position?: NgtVector3;\\n  @Input() rotation?: NgtEuler;\\n\\n  @Output() positionChange = new EventEmitter<NgtVector3>();\\n  @Output() rotationChange = new EventEmitter<NgtEuler>();\\n\\n  boxSize: NgtTriplet = [1, 1, 1];\\n  sphereRadius = 0.65;\\n\\n  #positionSubscription?: () => void;\\n  #rotationSubscription?: () => void;\\n\\n  ngOnDestroy() {\\n      this.#positionSubscription?.();\\n      this.#rotationSubscription?.();\\n  }\\n\\n  getCompoundProps: GetByIndex<CompoundBodyProps> = () => {\\n      return {\\n          isTrigger: this.isTrigger,\\n          mass: this.mass,\\n          position: this.position as NgtTriplet,\\n          rotation: this.rotation as NgtTriplet,\\n          shapes: [\\n              {\\n                  type: \'Box\',\\n                  position: [0, 0, 0],\\n                  rotation: [0, 0, 0],\\n                  args: this.boxSize,\\n              },\\n              {\\n                  type: \'Sphere\',\\n                  position: [1, 0, 0],\\n                  rotation: [0, 0, 0],\\n                  args: [this.sphereRadius],\\n              },\\n          ],\\n      };\\n  };\\n\\n  onReady(ngtPhysicCompound: NgtPhysicCompound) {\\n      if (this.positionChange.observed) {\\n          this.#positionSubscription =\\n              ngtPhysicCompound.api.position.subscribe(\\n                  this.positionChange.emit.bind(this.positionChange)\\n              );\\n      }\\n\\n      if (this.rotationChange.observed) {\\n          this.#rotationSubscription =\\n              ngtPhysicCompound.api.rotation.subscribe(\\n                  this.rotationChange.emit.bind(this.rotationChange)\\n              );\\n      }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"ControlLockComponent","id":"component-ControlLockComponent-d9a004bebae7e51ed6c9bc83ed798fab6ed4f1d7e3297f2313c5ce30c59344248375b2341aeaa52909badeb7f9e85d59edcd5634950abc14c9f1e3e29724b4b7","file":"src/app/threejs-soba/control-lock/control-lock.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-control-lock","styleUrls":["./control-lock.component.scss"],"styles":[],"templateUrl":["./control-lock.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"cameraPosition","defaultValue":"[-5, 5, 5]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":12},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"makeControlsDefault","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-control-lock\',\\n  templateUrl: \'./control-lock.component.html\',\\n  styleUrls: [\'./control-lock.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ControlLockComponent {\\n\\n  cameraPosition: [number, number, number] = [-5, 5, 5];\\n  cameraFov = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = true;\\n  black = true;\\n  loader = false;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./control-lock.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":18},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"true\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-transform-controls>\\n    <ngt-mesh>\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-basic-material [parameters]=\\"{wireframe: true}\\"></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n  </ngt-soba-transform-controls>\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"ControlTransformComponent","id":"component-ControlTransformComponent-841d869a1b79124f5864b0754dc093372cf34171d81694d131ce4dae76b8a521e750838f14d3607ac5dfcd0c0e24d0b36ba6c9270d17aff943eca39049037ba3","file":"src/app/threejs-soba/control-transform/control-transform.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-control-transform","styleUrls":["./control-transform.component.scss"],"styles":[],"templateUrl":["./control-transform.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"cameraPosition","defaultValue":"[-5, 5, 5]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":12},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-control-transform\',\\n  templateUrl: \'./control-transform.component.html\',\\n  styleUrls: [\'./control-transform.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ControlTransformComponent  {\\n\\n  cameraPosition: [number, number, number] = [-5, 5, 5];\\n  cameraFov = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./control-transform.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":18},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-transform-controls>\\n    <ngt-mesh>\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-basic-material [parameters]=\\"{wireframe: true}\\"></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n  </ngt-soba-transform-controls>\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"CubeCannonComponent","id":"component-CubeCannonComponent-04d644be611aada0b35a0cad04055af7dad7f921d9a5cea7057196c0db92e1bbb737926fd7b4dc1cec61e5b0fbb94696a9cec4789b0405e67c7b6b9d4c30bcdb","file":"src/app/threejs-basic/cannon-start/cannon-start.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cube-cannon","styleUrls":[],"styles":[],"template":"\x3c!-- 👇 turns this Mesh into a Physic Box by attaching ngtPhysicBox on it --\x3e\\n\x3c!-- 👇 NgtPhysicBoxModule provides this directive --\x3e\\n\x3c!-- 👇 getPhysicProps is a function that provides the object\'s props to our ngtPhysicBox --\x3e\\n\x3c!-- 👇 so the Physic World is aware of our object\'s position and such --\x3e\\n<ngt-mesh\\n    ngtPhysicBox\\n    [getPhysicProps]=\\"getCubeProps\\"\\n    [receiveShadow]=\\"true\\"\\n    [castShadow]=\\"true\\"\\n    [position]=\\"position\\"\\n    [rotation]=\\"rotation\\"\\n    [scale]=\\"scale\\"\\n>\\n    <ngt-box-geometry></ngt-box-geometry>\\n    <ngt-mesh-lambert-material\\n        [parameters]=\\"{ color: \'hotpink\' }\\"\\n    ></ngt-mesh-lambert-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"getCubeProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<BoxProps>","optional":false,"description":"","line":79},{"name":"position","defaultValue":"[0.1, 5, 0] as NgtVector3","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":75},{"name":"rotation","defaultValue":"[0.4, 0.2, 0.5] as NgtEuler","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76},{"name":"scale","defaultValue":"0.5 as NgtVector3","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":77}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\nimport { NgtVector3,NgtEuler,NgtTriplet } from \'@angular-three/core\';\\nimport { BoxProps, GetByIndex } from \'@angular-three/cannon\';\\n\\n@Component({\\n  selector: \'app-cannon-start\',\\n  templateUrl: \'./cannon-start.component.html\',\\n  styleUrls: [\'./cannon-start.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonStartComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n\\n\\n@Component({\\n  selector: \'app-floor\',\\n  template: `\\n      \x3c!-- 👇 turns this Mesh into a Physic Plane by attaching ngtPhysicPlane on it --\x3e\\n      \x3c!-- 👇 NgtPhysicPlaneModule provides this directive --\x3e\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"[0, -2.5, 0]\\"\\n          [rotation]=\\"[-90 | radian, 0, 0]\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{\\n                  color: \'#171717\',\\n                  transparent: true,\\n                  opacity: 0.4\\n              }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class FloorComponent {}\\n\\n\\n@Component({\\n  selector: \'app-cube-cannon\',\\n  template: `\\n      \x3c!-- 👇 turns this Mesh into a Physic Box by attaching ngtPhysicBox on it --\x3e\\n      \x3c!-- 👇 NgtPhysicBoxModule provides this directive --\x3e\\n      \x3c!-- 👇 getPhysicProps is a function that provides the object\'s props to our ngtPhysicBox --\x3e\\n      \x3c!-- 👇 so the Physic World is aware of our object\'s position and such --\x3e\\n      <ngt-mesh\\n          ngtPhysicBox\\n          [getPhysicProps]=\\"getCubeProps\\"\\n          [receiveShadow]=\\"true\\"\\n          [castShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n          [scale]=\\"scale\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-lambert-material\\n              [parameters]=\\"{ color: \'hotpink\' }\\"\\n          ></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CubeCannonComponent {\\n  // 👇 we create these class properties to reuse them in getCubeProps and on the template.\\n  // 👇 These can be turned into Input later\\n  position = [0.1, 5, 0] as NgtVector3;\\n  rotation = [0.4, 0.2, 0.5] as NgtEuler;\\n  scale = 0.5 as NgtVector3;\\n\\n  getCubeProps: GetByIndex<BoxProps> = () => ({\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n      rotation: this.rotation as NgtTriplet,\\n      // 👇 this is specific to BoxProps\\n      args: [this.scale, this.scale, this.scale] as NgtTriplet\\n  });\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"CubeComponent","id":"component-CubeComponent-7251873770352e873bd9b282912b42a25a64ad06f5f7b09be079609e4e7a6f29a2a2863e5fa04d966e16ee5c0fa33ac188fb51fb3c62c3495f976503a036bf9e","file":"src/app/threejs-basic/cube/cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cube","styleUrls":["./cube.component.scss"],"styles":[],"templateUrl":["./cube.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-cube\',\\n  templateUrl: \'./cube.component.html\',\\n  styleUrls: [\'./cube.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CubeComponent implements OnInit {\\n\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n  goback(){\\n    this.router.navigate([\'/basicthree\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cube.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\">\\n  <ngt-canvas [initialLog]=\\"true\\">\\n    <ngt-mesh>\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-basic-material></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n  </ngt-canvas>\\n\\n  <div>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n\\n    <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\n      Back\\n    </button>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n  </div>\\n  <div style=\\"padding-bottom: 10px;\\">\\n\\n  </div>\\n</div>"},{"name":"CubeComponent","id":"component-CubeComponent-ba39fa3743e3086ccf06a4d668958cabaa747717a348044dd3cec38de27d1a46efcccd7eafc4d7afd6860c346a267b4c027ebd8e2247489e3e4624fd70a9b0a4-1","file":"src/app/threejs-basic/simple-cube/simple-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-cube","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    [ngtBoxHelper]=\\"[\'black\']\\"\\n    (animateReady)=\\"onCubeAnimate($event.object)\\"\\n    (click)=\\"active = !active\\"\\n    (pointerover)=\\"hover = true\\"\\n    (pointerout)=\\"hover = false\\"\\n    [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\n    [position]=\\"position\\"\\n>\\n    <ngt-box-geometry></ngt-box-geometry>\\n    <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: hover ? \'hotpink\' : \'orange\' }\\"\\n    ></ngt-mesh-standard-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"position","deprecated":false,"deprecationMessage":"","line":75,"type":"NgtVector3","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":78},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":77}],"methodsClass":[{"name":"onCubeAnimate","args":[{"name":"cube","type":"Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"cube","type":"Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { NgtCoreModule, NgtVector3 } from \'@angular-three/core\';\\r\\nimport { NgtBoxGeometryModule } from \'@angular-three/core/geometries\';\\r\\nimport { NgtGroupModule } from \'@angular-three/core/group\';\\r\\nimport {\\r\\n    NgtBoxHelperModule,\\r\\n    NgtGridHelperModule,\\r\\n} from \'@angular-three/core/helpers\';\\r\\nimport {\\r\\n    NgtAmbientLightModule,\\r\\n    NgtSpotLightModule,\\r\\n} from \'@angular-three/core/lights\';\\r\\nimport { NgtMeshStandardMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport { NgtStatsModule } from \'@angular-three/core/stats\';\\r\\nimport { NgtSobaOrbitControlsModule } from \'@angular-three/soba/controls\';\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgModule,\\r\\n} from \'@angular/core\';\\r\\nimport { Object3D } from \'three\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-simple-cube\',\\r\\n    template: `\\r\\n        <ngt-canvas [camera]=\\"{ position: [5, 5, 5] }\\">\\r\\n            <ngt-ambient-light></ngt-ambient-light>\\r\\n            <ngt-spot-light [position]=\\"[5, 5, 5]\\"></ngt-spot-light>\\r\\n\\r\\n            <ngt-group\\r\\n                [ngtBoxHelper]=\\"[\'red\']\\"\\r\\n                (animateReady)=\\"onGroupAnimate($event.object)\\"\\r\\n            >\\r\\n                <demo-cube [position]=\\"[2, 0, 0]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[-2, 0, 0]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[0, 0, 2]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[0, 0, -2]\\"></demo-cube>\\r\\n            </ngt-group>\\r\\n\\r\\n \\r\\n\\r\\n            <ngt-stats></ngt-stats>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class SimpleCubeComponent {\\r\\n    onGroupAnimate(group: Object3D) {\\r\\n        group.rotation.y += 0.01;\\r\\n    }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-cube\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            [ngtBoxHelper]=\\"[\'black\']\\"\\r\\n            (animateReady)=\\"onCubeAnimate($event.object)\\"\\r\\n            (click)=\\"active = !active\\"\\r\\n            (pointerover)=\\"hover = true\\"\\r\\n            (pointerout)=\\"hover = false\\"\\r\\n            [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\r\\n            [position]=\\"position\\"\\r\\n        >\\r\\n            <ngt-box-geometry></ngt-box-geometry>\\r\\n            <ngt-mesh-standard-material\\r\\n                [parameters]=\\"{ color: hover ? \'hotpink\' : \'orange\' }\\"\\r\\n            ></ngt-mesh-standard-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class CubeComponent {\\r\\n    @Input() position?: NgtVector3;\\r\\n\\r\\n    hover = false;\\r\\n    active = false;\\r\\n\\r\\n    onCubeAnimate(cube: Object3D) {\\r\\n        cube.rotation.x = cube.rotation.y += 0.01;\\r\\n    }\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [SimpleCubeComponent, CubeComponent],\\r\\n    exports: [SimpleCubeComponent],\\r\\n    imports: [\\r\\n        NgtCoreModule,\\r\\n        NgtBoxGeometryModule,\\r\\n        NgtMeshStandardMaterialModule,\\r\\n        NgtAmbientLightModule,\\r\\n        NgtSpotLightModule,\\r\\n        NgtBoxHelperModule,\\r\\n        NgtStatsModule,\\r\\n        NgtMeshModule,\\r\\n        NgtSobaOrbitControlsModule,\\r\\n        NgtGridHelperModule,\\r\\n        NgtGroupModule,\\r\\n    ],\\r\\n})\\r\\nexport class SimpleCubeComponentModule {}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","isDuplicate":true,"duplicateId":1,"duplicateName":"CubeComponent-1"},{"name":"CubedemoComponent","id":"component-CubedemoComponent-fe796b76be6b19d1590cac8351611af4570a8f9c52d2aec68b7db40925e046fa8618de2e32491c136618e3275998d7bc0231785d3980d2c618eef3c3e22ca563","file":"src/app/threejs-basic/demo-cube/demo-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-cube","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    [ngtBoxHelper]=\\"[\'black\']\\"\\n    (animateReady)=\\"onCubeAnimate($event.object)\\"\\n    (click)=\\"active = !active\\"\\n    (pointerover)=\\"hover = true\\"\\n    (pointerout)=\\"hover = false\\"\\n    [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\n    [position]=\\"position\\"\\n>\\n    <ngt-box-geometry></ngt-box-geometry>\\n    <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: hover ? \'hotpink\' : \'orange\' }\\"\\n    ></ngt-mesh-standard-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"position","deprecated":false,"deprecationMessage":"","line":46,"type":"NgtVector3","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":49},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48}],"methodsClass":[{"name":"onCubeAnimate","args":[{"name":"cube","type":"Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"cube","type":"Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { NgtVector3 } from \'@angular-three/core\';\\n\\nimport {\\n    ChangeDetectionStrategy,\\n    Component,\\n    Input,\\n} from \'@angular/core\';\\nimport { Object3D } from \'three\';\\n\\n\\n@Component({\\n  selector: \'app-demo-cube\',\\n  templateUrl: \'./demo-cube.component.html\',\\n  styleUrls: [\'./demo-cube.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class DemoCubeComponent {\\n  onGroupAnimate(group: Object3D) {\\n    group.rotation.y += 0.01;\\n}\\n}\\n\\n\\n\\n@Component({\\n  selector: \'demo-cube\',\\n  template: `\\n      <ngt-mesh\\n          [ngtBoxHelper]=\\"[\'black\']\\"\\n          (animateReady)=\\"onCubeAnimate($event.object)\\"\\n          (click)=\\"active = !active\\"\\n          (pointerover)=\\"hover = true\\"\\n          (pointerout)=\\"hover = false\\"\\n          [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\n          [position]=\\"position\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{ color: hover ? \'hotpink\' : \'orange\' }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CubedemoComponent {\\n  @Input() position?: NgtVector3;\\n\\n  hover = false;\\n  active = false;\\n\\n  onCubeAnimate(cube: Object3D) {\\n      cube.rotation.x = cube.rotation.y += 0.01;\\n  }\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"CubelightComponent","id":"component-CubelightComponent-8727fefb2e3ebe1068071bede6a244a5eca8b8dbd31ccc1f6969ca71e5ef03e9b37b6115a23ee32c54fa8a6015c97509910e80a531970c510df94584c7bf4a25","file":"src/app/threejs-basic/cubelight/cubelight.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cubelight","styleUrls":["./cubelight.component.scss"],"styles":[],"templateUrl":["./cubelight.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16}],"methodsClass":[{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""},{"name":"onAnimate","args":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-cubelight\',\\n  templateUrl: \'./cubelight.component.html\',\\n  styleUrls: [\'./cubelight.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CubelightComponent implements OnInit {\\n\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n  hover = false;\\n  active = false;\\n\\n  onAnimate(mesh: THREE.Object3D) {\\n    mesh.rotation.x = mesh.rotation.y += 0.01;\\n  }\\n  goback(){\\n    this.router.navigate([\'/basicthree\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cubelight.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\">\\n  <ngt-canvas [camera]=\\"{position: [0, 0, 2]}\\">\\n    <ngt-ambient-light></ngt-ambient-light>\\n    <ngt-mesh\\n      (animateReady)=\\"\\n          $event.object.rotation.x = $event.object.rotation.x + 0.01;\\n          $event.object.rotation.y = $event.object.rotation.y + 0.01\\n        \\"\\n    >\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'turquoise\' }\\"\\n      ></ngt-mesh-standard-material>\\n      <ngt-box-geometry></ngt-box-geometry>\\n    </ngt-mesh>\\n  </ngt-canvas>\\n  \\n  <div>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n\\n    <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\n      Back\\n    </button>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n  </div>\\n  <div style=\\"padding-bottom: 10px;\\">\\n\\n  </div>\\n</div>"},{"name":"CubeSingleComponent","id":"component-CubeSingleComponent-e4176349fc9afcae577c175998dac7733df8e7cc0b9e87b37b40a3613b8ef12dc872bab49fa0ed7a186dd523cc63651bc98c0618e919cf977a44c3fdf5418c8b","file":"src/app/threejs-basic/cannon-single/cannon-single.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-cube","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicBox\\n    [getPhysicProps]=\\"getCubeProps\\"\\n    [receiveShadow]=\\"true\\"\\n    [castShadow]=\\"true\\"\\n    [position]=\\"position\\"\\n    [rotation]=\\"rotation\\"\\n>\\n    <ngt-box-geometry></ngt-box-geometry>\\n    <ngt-mesh-lambert-material\\n        [parameters]=\\"{ color: \'hotpink\' }\\"\\n    ></ngt-mesh-lambert-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"position","deprecated":false,"deprecationMessage":"","line":65,"type":"NgtVector3","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"getCubeProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<BoxProps>","optional":false,"description":"","line":68},{"name":"rotation","defaultValue":"[0.4, 0.2, 0.5] as NgtEuler","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy,Input } from \'@angular/core\';\\nimport { NgtVector3,NgtEuler,NgtTriplet } from \'@angular-three/core\';\\nimport { BoxProps, GetByIndex } from \'@angular-three/cannon\';\\n\\n@Component({\\n  selector: \'app-cannon-single\',\\n  templateUrl: \'./cannon-single.component.html\',\\n  styleUrls: [\'./cannon-single.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonSingleComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n@Component({\\n  selector: \'storybook-plane\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"[-90 | radian, 0, 0]\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{\\n                  color: \'#171717\',\\n                  transparent: true,\\n                  opacity: 0.4\\n              }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneSingleComponent {\\n  @Input() position?: NgtVector3;\\n}\\n\\n@Component({\\n  selector: \'storybook-cube\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicBox\\n          [getPhysicProps]=\\"getCubeProps\\"\\n          [receiveShadow]=\\"true\\"\\n          [castShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-lambert-material\\n              [parameters]=\\"{ color: \'hotpink\' }\\"\\n          ></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CubeSingleComponent {\\n  @Input() position?: NgtVector3;\\n  rotation = [0.4, 0.2, 0.5] as NgtEuler;\\n\\n  getCubeProps: GetByIndex<BoxProps> = () => ({\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n      rotation: this.rotation as NgtTriplet,\\n  });\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"CubespotlightComponent","id":"component-CubespotlightComponent-528097fdbaa1620166206c76b7d75a150061fc619336c88ed2e818617d81d130cb0147d608e8b9bd69fb5954c6700789fae6464370dfaac9052ce6d8c246aefe","file":"src/app/threejs-basic/cubespotlight/cubespotlight.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cubespotlight","styleUrls":["./cubespotlight.component.scss"],"styles":[],"templateUrl":["./cubespotlight.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15}],"methodsClass":[{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""},{"name":"onAnimate","args":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-cubespotlight\',\\n  templateUrl: \'./cubespotlight.component.html\',\\n  styleUrls: [\'./cubespotlight.component.scss\']\\n})\\nexport class CubespotlightComponent implements OnInit  {\\n\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n  hover = false;\\n  active = false;\\n\\n  onAnimate(mesh: THREE.Object3D) {\\n    mesh.rotation.x = mesh.rotation.y += 0.01;\\n  }\\n  goback(){\\n    this.router.navigate([\'/basicthree\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cubespotlight.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\">\\n    <ngt-canvas [camera]=\\"{position: [0, 0, 2]}\\">\\n      <ngt-ambient-light></ngt-ambient-light>\\n      <ngt-spot-light [position]=\\"[1, 1, 1]\\"></ngt-spot-light>\\n      <ngt-mesh\\n        (animateReady)=\\"\\n            $event.object.rotation.x = $event.object.rotation.x + 0.01;\\n            $event.object.rotation.y = $event.object.rotation.y + 0.01\\n          \\"\\n      >\\n        <ngt-mesh-standard-material\\n          [parameters]=\\"{ color: \'turquoise\' }\\"\\n        ></ngt-mesh-standard-material>\\n        <ngt-box-geometry></ngt-box-geometry>\\n      </ngt-mesh>\\n    </ngt-canvas>\\n    \\n    <div>\\n      <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n  \\n      </div>\\n  \\n      <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\n        Back\\n      </button>\\n      <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n  \\n      </div>\\n    </div>\\n    <div style=\\"padding-bottom: 10px;\\">\\n  \\n    </div>\\n  </div>"},{"name":"CubestateComponent","id":"component-CubestateComponent-cda73ff12725f5d628807833500987d07b64c8fb5ca9a702e72bc6d0d206cc89435892137bd177da9dc6a988e4f7909eda0d10541af512098da7df9f49c194bc","file":"src/app/threejs-basic/cubestate/cubestate.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-cubestate","styleUrls":["./cubestate.component.scss"],"styles":[],"templateUrl":["./cubestate.component.html"],"viewProviders":[],"inputsClass":[{"name":"position","deprecated":false,"deprecationMessage":"","line":12,"type":"NgtVector3","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19}],"methodsClass":[{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""},{"name":"onAnimate","args":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, VERSION, ChangeDetectionStrategy, Input, OnInit } from \'@angular/core\';\\nimport { NgtVector3 } from \'@angular-three/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-cubestate\',\\n  templateUrl: \'./cubestate.component.html\',\\n  styleUrls: [\'./cubestate.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CubestateComponent implements OnInit {\\n  @Input() position?: NgtVector3; // imported from @angular-three/core\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n\\n  hover = false;\\n  active = false;\\n\\n  onAnimate(mesh: THREE.Object3D) {\\n    mesh.rotation.x = mesh.rotation.y += 0.01;\\n  }\\n  goback() {\\n    this.router.navigate([\'/basicthree\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./cubestate.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\">\\n  <ngt-canvas>\\n    <ngt-mesh (animateReady)=\\"onAnimate($event.object)\\" (click)=\\"active = !active\\" (pointerover)=\\"hover = true\\"\\n      (pointerout)=\\"hover = false\\" [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\">\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-basic-material [parameters]=\\"{ color: hover ? \'turquoise\' : \'tomato\' }\\"></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n  </ngt-canvas>\\n\\n\\n  <div>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n\\n    <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\n      Back\\n    </button>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n  </div>\\n  <div style=\\"padding-bottom: 10px;\\">\\n\\n  </div>\\n</div>"},{"name":"DefaultCameraShakeScene","id":"component-DefaultCameraShakeScene-089110a08e78165ddf46cfcba20358707d06622b9881d77a895e7dd138fc5b1e31d2a12827161a54ede161e68fc4d797bfa752d40f2f679930c11676782167c3","file":"src/app/threejs-soba/stage-shake/stage-shake.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngt-default-camera-shake-scene","styleUrls":[],"styles":[],"template":"<ngt-mesh (animateReady)=\\"onAnimateReady($event.object)\\">\\n    <ngt-box-geometry [args]=\\"[2, 2, 2]\\"></ngt-box-geometry>\\n    <ngt-mesh-standard-material\\n        [parameters]=\\"{ wireframe: true }\\"\\n    ></ngt-mesh-standard-material>\\n</ngt-mesh>\\n<ngt-mesh [position]=\\"[0, -6, 0]\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\n    <ngt-plane-geometry\\n        [args]=\\"[200, 200, 75, 75]\\"\\n    ></ngt-plane-geometry>\\n    <ngt-mesh-standard-material\\n        [parameters]=\\"{\\n            wireframe: true,\\n            color: \'red\',\\n            side: \'double\' | side\\n        }\\"\\n    ></ngt-mesh-standard-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onAnimateReady","args":[{"name":"cube","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"cube","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-stage-shake\',\\n  templateUrl: \'./stage-shake.component.html\',\\n  styleUrls: [\'./stage-shake.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class StageShakeComponent  {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n\\n  maxPitch= 0.05;\\n  maxRoll= 0.05;\\n  maxYaw= 0.05;\\n  pitchFrequency= 0.8;\\n  rollFrequency= 0.8;\\n  yawFrequency= 0.8;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  onAnimateReady(cube: THREE.Object3D) {\\n    cube.rotation.x = cube.rotation.y += 0.01;\\n}\\n}\\n\\n\\n\\n@Component({\\n  selector: \'ngt-default-camera-shake-scene\',\\n  template: `\\n      <ngt-mesh (animateReady)=\\"onAnimateReady($event.object)\\">\\n          <ngt-box-geometry [args]=\\"[2, 2, 2]\\"></ngt-box-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{ wireframe: true }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n      <ngt-mesh [position]=\\"[0, -6, 0]\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\n          <ngt-plane-geometry\\n              [args]=\\"[200, 200, 75, 75]\\"\\n          ></ngt-plane-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  wireframe: true,\\n                  color: \'red\',\\n                  side: \'double\' | side\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DefaultCameraShakeScene {\\n  onAnimateReady(cube: THREE.Object3D) {\\n      cube.rotation.x = cube.rotation.y += 0.01;\\n  }\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"DefaultCenter","id":"component-DefaultCenter-b5e57f623c172f25f77fe35d11a226e9466c3df8065036bf4958f089171e8ad10aeb0a7dd637bf96fec27653140234fabf5d4737bc43e62bb8ad5366e76892a1","file":"src/app/threejs-soba/stage-center/stage-center.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngt-default-center","styleUrls":[],"styles":[],"template":"<ng-container *ngIf=\\"node$ | async as node\\">\\n    <ngt-soba-center [position]=\\"[5, 5, 10]\\" [alignTop]=\\"alignTop\\">\\n        <ngt-mesh>\\n            <ngt-box-geometry [args]=\\"[10, 10, 10]\\"></ngt-box-geometry>\\n            <ngt-mesh-normal-material\\n                [parameters]=\\"{ wireframe: true }\\"\\n            ></ngt-mesh-normal-material>\\n        </ngt-mesh>\\n        <ngt-primitive\\n            [object]=\\"node.scene\\"\\n            [scale]=\\"[0.01, 0.01, 0.01]\\"\\n            (animateReady)=\\"onTokyoAnimated(node.scene)\\"\\n        ></ngt-primitive>\\n    </ngt-soba-center>\\n</ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"alignTop","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":54,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"node$","defaultValue":"this.gltfLoader.load(\'/assets/LittlestTokyo.glb\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56}],"methodsClass":[{"name":"onTokyoAnimated","args":[{"name":"scene","type":"THREE.Group","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"scene","type":"THREE.Group","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  ChangeDetectionStrategy,\\r\\n  Component,\\r\\n  Input\\r\\n} from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\nimport { NgtGLTFLoader } from \'@angular-three/soba/loaders\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stage-center\',\\r\\n  templateUrl: \'./stage-center.component.html\',\\r\\n  styleUrls: [\'./stage-center.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class StageCenterComponent  {\\r\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\r\\n  cameraFov: number = 75;\\r\\n  lights = true;\\r\\n  controls = true;\\r\\n  alignTop= false;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n  constructor() { }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'ngt-default-center\',\\r\\n  template: `\\r\\n      <ng-container *ngIf=\\"node$ | async as node\\">\\r\\n          <ngt-soba-center [position]=\\"[5, 5, 10]\\" [alignTop]=\\"alignTop\\">\\r\\n              <ngt-mesh>\\r\\n                  <ngt-box-geometry [args]=\\"[10, 10, 10]\\"></ngt-box-geometry>\\r\\n                  <ngt-mesh-normal-material\\r\\n                      [parameters]=\\"{ wireframe: true }\\"\\r\\n                  ></ngt-mesh-normal-material>\\r\\n              </ngt-mesh>\\r\\n              <ngt-primitive\\r\\n                  [object]=\\"node.scene\\"\\r\\n                  [scale]=\\"[0.01, 0.01, 0.01]\\"\\r\\n                  (animateReady)=\\"onTokyoAnimated(node.scene)\\"\\r\\n              ></ngt-primitive>\\r\\n          </ngt-soba-center>\\r\\n      </ng-container>\\r\\n  `,\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class DefaultCenter {\\r\\n  @Input() alignTop = false;\\r\\n\\r\\n  node$ = this.gltfLoader.load(\'/assets/LittlestTokyo.glb\');\\r\\n\\r\\n  constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n\\r\\n  onTokyoAnimated(scene: THREE.Group) {\\r\\n      scene.rotation.y += 0.01;\\r\\n  }\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":""}],"line":56,"jsdoctags":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"DefaultGizmo","id":"component-DefaultGizmo-049bda80103d691188c3d77655a7891556abab928bee9b5431a3de9e12bf9afcdfe2b0741f9477afb73a15340d434b418a0a904e5dae9641b91976773a307ce1","file":"src/app/threejs-soba/abs-gizmo/abs-gizmo.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngt-default-gizmo","styleUrls":[],"styles":[],"template":"<ng-container *ngIf=\\"node$ | async as node\\">\\n    <ngt-soba-gizmo-helper\\n        *ngIf=\\"mode === \'viewcube\'\\"\\n        [alignment]=\\"alignment\\"\\n        [margin]=\\"margin\\"\\n    >\\n        <ngt-soba-gizmo-viewcube\\n            [faces]=\\"[\\n                \'Right\',\\n                \'Left\',\\n                \'Top\',\\n                \'Bottom\',\\n                \'Front\',\\n                \'Back\'\\n            ]\\"\\n            [opacity]=\\"1\\"\\n            color=\\"white\\"\\n            strokeColor=\\"gray\\"\\n            textColor=\\"black\\"\\n            hoverColor=\\"lightgray\\"\\n        ></ngt-soba-gizmo-viewcube>\\n    </ngt-soba-gizmo-helper>\\n    <ngt-soba-gizmo-helper\\n        *ngIf=\\"mode === \'viewport\'\\"\\n        [alignment]=\\"alignment\\"\\n        [margin]=\\"margin\\"\\n    >\\n        <ngt-soba-gizmo-viewport\\n            [axisColors]=\\"[\'red\', \'green\', \'blue\']\\"\\n            labelColor=\\"black\\"\\n            [hideNegativeAxes]=\\"false\\"\\n        ></ngt-soba-gizmo-viewport>\\n    </ngt-soba-gizmo-helper>\\n    <ngt-primitive\\n        [object]=\\"node.scene\\"\\n        [scale]=\\"[0.01, 0.01, 0.01]\\"\\n    ></ngt-primitive>\\n\\n    <ngt-soba-orbit-controls\\n        (ready)=\\"$event.enablePan = false\\"\\n        [makeDefault]=\\"true\\"\\n    ></ngt-soba-orbit-controls>\\n</ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"alignment","defaultValue":"\'bottom-right\'","deprecated":false,"deprecationMessage":"","line":93,"type":"\\"top-left\\" | \\"top-right\\" | \\"bottom-right\\" | \\"bottom-left\\"","decorators":[]},{"name":"margin","defaultValue":"[80, 80]","deprecated":false,"deprecationMessage":"","line":98,"type":"[number, number]","decorators":[]},{"name":"mode","defaultValue":"\'viewcube\'","deprecated":false,"deprecationMessage":"","line":92,"type":"\\"viewport\\" | \\"viewcube\\"","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"node$","defaultValue":"this.gltfLoader.load(\'/assets/LittlestTokyo.glb\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":90}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  ChangeDetectionStrategy,\\r\\n  Component,\\r\\n  Input\\r\\n} from \'@angular/core\';\\r\\nimport { NgtGLTFLoader } from \'@angular-three/soba/loaders\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-abs-gizmo\',\\r\\n  templateUrl: \'./abs-gizmo.component.html\',\\r\\n  styleUrls: [\'./abs-gizmo.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class AbsGizmoComponent {\\r\\n\\r\\n  cameraPosition: [number, number, number] = [-5, 5, 5];\\r\\n  cameraFov: number = 75;\\r\\n  lights = true;\\r\\n  controls = true;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n\\r\\n  mode: \'viewport\';\\r\\n  alignment: \'bottom-right\';\\r\\n  margin: [80, 80];\\r\\n\\r\\n  constructor() { }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n  }\\r\\n\\r\\n  getcamera(){\\r\\n    return  {position:this.cameraPosition, fov:this.cameraFov  };\\r\\n   }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'ngt-default-gizmo\',\\r\\n  template: `\\r\\n      <ng-container *ngIf=\\"node$ | async as node\\">\\r\\n          <ngt-soba-gizmo-helper\\r\\n              *ngIf=\\"mode === \'viewcube\'\\"\\r\\n              [alignment]=\\"alignment\\"\\r\\n              [margin]=\\"margin\\"\\r\\n          >\\r\\n              <ngt-soba-gizmo-viewcube\\r\\n                  [faces]=\\"[\\r\\n                      \'Right\',\\r\\n                      \'Left\',\\r\\n                      \'Top\',\\r\\n                      \'Bottom\',\\r\\n                      \'Front\',\\r\\n                      \'Back\'\\r\\n                  ]\\"\\r\\n                  [opacity]=\\"1\\"\\r\\n                  color=\\"white\\"\\r\\n                  strokeColor=\\"gray\\"\\r\\n                  textColor=\\"black\\"\\r\\n                  hoverColor=\\"lightgray\\"\\r\\n              ></ngt-soba-gizmo-viewcube>\\r\\n          </ngt-soba-gizmo-helper>\\r\\n          <ngt-soba-gizmo-helper\\r\\n              *ngIf=\\"mode === \'viewport\'\\"\\r\\n              [alignment]=\\"alignment\\"\\r\\n              [margin]=\\"margin\\"\\r\\n          >\\r\\n              <ngt-soba-gizmo-viewport\\r\\n                  [axisColors]=\\"[\'red\', \'green\', \'blue\']\\"\\r\\n                  labelColor=\\"black\\"\\r\\n                  [hideNegativeAxes]=\\"false\\"\\r\\n              ></ngt-soba-gizmo-viewport>\\r\\n          </ngt-soba-gizmo-helper>\\r\\n          <ngt-primitive\\r\\n              [object]=\\"node.scene\\"\\r\\n              [scale]=\\"[0.01, 0.01, 0.01]\\"\\r\\n          ></ngt-primitive>\\r\\n\\r\\n          <ngt-soba-orbit-controls\\r\\n              (ready)=\\"$event.enablePan = false\\"\\r\\n              [makeDefault]=\\"true\\"\\r\\n          ></ngt-soba-orbit-controls>\\r\\n      </ng-container>\\r\\n  `,\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class DefaultGizmo {\\r\\n  node$ = this.gltfLoader.load(\'/assets/LittlestTokyo.glb\');\\r\\n\\r\\n  @Input() mode: \'viewport\' | \'viewcube\' = \'viewcube\';\\r\\n  @Input() alignment:\\r\\n      | \'top-left\'\\r\\n      | \'top-right\'\\r\\n      | \'bottom-right\'\\r\\n      | \'bottom-left\' = \'bottom-right\';\\r\\n  @Input() margin: [number, number] = [80, 80];\\r\\n\\r\\n  constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n}\\r\\n\\r\\n\\r\\n/* \\r\\n        alignment: {\\r\\n            options: [\'top-left\', \'top-right\', \'bottom-right\', \'bottom-left\'],\\r\\n            control: { type: \'select\' },\\r\\n        },\\r\\n        mode: {\\r\\n            options: [\'viewcube\', \'viewport\'],\\r\\n            control: { type: \'select\' },\\r\\n        },\\r\\n*/","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":""}],"line":98,"jsdoctags":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"DefaultSpotLight","id":"component-DefaultSpotLight-3e91f70172dc2142e0f07f5fbab248cb767531d10f58c3b32b9d0a5dcdbef1c5cb37c386ab7ac6db51adabacb74a3f8ac066346316331678781e5d44add9fa12","file":"src/app/threejs-soba/stage-spot/stage-spot.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"NGT_SOBA_DEPTH_BUFFER_PROVIDER"}],"selector":"ngt-default-spot-light","styleUrls":[],"styles":[],"template":"<ngt-soba-spot-light\\n    [penumbra]=\\"0.5\\"\\n    [position]=\\"[-3, 2, 0]\\"\\n    [intensity]=\\"0.5\\"\\n    [angle]=\\"0.5\\"\\n    color=\\"#0EEC82\\"\\n    [castShadow]=\\"true\\"\\n    [depthBuffer]=\\"depthBuffer\\"\\n></ngt-soba-spot-light>\\n\\n<ngt-soba-spot-light\\n    [penumbra]=\\"0.5\\"\\n    [position]=\\"[3, 2, 0]\\"\\n    [intensity]=\\"0.5\\"\\n    [angle]=\\"0.5\\"\\n    color=\\"#FF005B\\"\\n    [castShadow]=\\"true\\"\\n    [depthBuffer]=\\"depthBuffer\\"\\n></ngt-soba-spot-light>\\n\\n<ngt-mesh [position]=\\"[0, 0.5, 0]\\" [castShadow]=\\"true\\">\\n    <ngt-box-geometry></ngt-box-geometry>\\n    <ngt-mesh-phong-material></ngt-mesh-phong-material>\\n</ngt-mesh>\\n\\n<ngt-mesh [receiveShadow]=\\"true\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\n    <ngt-plane-geometry [args]=\\"[100, 100]\\"></ngt-plane-geometry>\\n    <ngt-mesh-phong-material></ngt-mesh-phong-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy,NgModule } from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\nimport {  NgtStore } from \'@angular-three/core\';\\r\\nimport {\\r\\n  NGT_SOBA_DEPTH_BUFFER_PROVIDER,\\r\\n  NgtSobaDepthBuffer\\r\\n} from \'@angular-three/soba/misc\';\\r\\nimport { map } from \'rxjs\';\\r\\nimport { NgtRadianPipeModule } from \'@angular-three/core\';\\r\\nimport {\\r\\n    NgtBoxGeometryModule,\\r\\n    NgtPlaneGeometryModule,\\r\\n} from \'@angular-three/core/geometries\';\\r\\nimport { NgtMeshPhongMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport { NgtSobaSpotLightModule } from \'@angular-three/soba/staging\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stage-spot\',\\r\\n  templateUrl: \'./stage-spot.component.html\',\\r\\n  styleUrls: [\'./stage-spot.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n  providers: [NGT_SOBA_DEPTH_BUFFER_PROVIDER]\\r\\n})\\r\\nexport class StageSpotComponent {\\r\\n  cameraPosition: [number, number, number] = [-5,5,5];\\r\\n  cameraFov: number = 75;\\r\\n  lights = false;\\r\\n  controls = true;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n\\r\\n  constructor() {\\r\\n\\r\\n}\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'ngt-default-spot-light\',\\r\\n  template: `\\r\\n      <ngt-soba-spot-light\\r\\n          [penumbra]=\\"0.5\\"\\r\\n          [position]=\\"[-3, 2, 0]\\"\\r\\n          [intensity]=\\"0.5\\"\\r\\n          [angle]=\\"0.5\\"\\r\\n          color=\\"#0EEC82\\"\\r\\n          [castShadow]=\\"true\\"\\r\\n          [depthBuffer]=\\"depthBuffer\\"\\r\\n      ></ngt-soba-spot-light>\\r\\n\\r\\n      <ngt-soba-spot-light\\r\\n          [penumbra]=\\"0.5\\"\\r\\n          [position]=\\"[3, 2, 0]\\"\\r\\n          [intensity]=\\"0.5\\"\\r\\n          [angle]=\\"0.5\\"\\r\\n          color=\\"#FF005B\\"\\r\\n          [castShadow]=\\"true\\"\\r\\n          [depthBuffer]=\\"depthBuffer\\"\\r\\n      ></ngt-soba-spot-light>\\r\\n\\r\\n      <ngt-mesh [position]=\\"[0, 0.5, 0]\\" [castShadow]=\\"true\\">\\r\\n          <ngt-box-geometry></ngt-box-geometry>\\r\\n          <ngt-mesh-phong-material></ngt-mesh-phong-material>\\r\\n      </ngt-mesh>\\r\\n\\r\\n      <ngt-mesh [receiveShadow]=\\"true\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\r\\n          <ngt-plane-geometry [args]=\\"[100, 100]\\"></ngt-plane-geometry>\\r\\n          <ngt-mesh-phong-material></ngt-mesh-phong-material>\\r\\n      </ngt-mesh>\\r\\n  `,\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n  providers: [NGT_SOBA_DEPTH_BUFFER_PROVIDER],\\r\\n})\\r\\nexport class DefaultSpotLight extends NgtStore<{\\r\\n  depthBuffer: THREE.DepthTexture;\\r\\n}> {\\r\\n  constructor(sobaDepthBuffer: NgtSobaDepthBuffer) {\\r\\n      super();\\r\\n      this.set(\\r\\n          sobaDepthBuffer.use().pipe(map((depthBuffer) => ({ depthBuffer })))\\r\\n      );\\r\\n  }\\r\\n\\r\\n  get depthBuffer() {\\r\\n      return this.get((s) => s.depthBuffer);\\r\\n  }\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [DefaultSpotLight],\\r\\n  exports: [DefaultSpotLight],\\r\\n  imports: [\\r\\n      NgtSobaSpotLightModule,\\r\\n      NgtMeshPhongMaterialModule,\\r\\n      NgtMeshModule,\\r\\n      NgtPlaneGeometryModule,\\r\\n      NgtBoxGeometryModule,\\r\\n      CommonModule,\\r\\n      NgtRadianPipeModule,\\r\\n  ],\\r\\n})\\r\\nexport class DefaultSpotLightModule {}","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"sobaDepthBuffer","type":"NgtSobaDepthBuffer","deprecated":false,"deprecationMessage":""}],"line":80,"jsdoctags":[{"name":"sobaDepthBuffer","type":"NgtSobaDepthBuffer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"NgtStore","accessors":{"depthBuffer":{"name":"depthBuffer","getSignature":{"name":"depthBuffer","type":"","returnType":"","line":88}}}},{"name":"DemoCubeComponent","id":"component-DemoCubeComponent-fe796b76be6b19d1590cac8351611af4570a8f9c52d2aec68b7db40925e046fa8618de2e32491c136618e3275998d7bc0231785d3980d2c618eef3c3e22ca563","file":"src/app/threejs-basic/demo-cube/demo-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-demo-cube","styleUrls":["./demo-cube.component.scss"],"styles":[],"templateUrl":["./demo-cube.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onGroupAnimate","args":[{"name":"group","type":"Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"group","type":"Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { NgtVector3 } from \'@angular-three/core\';\\n\\nimport {\\n    ChangeDetectionStrategy,\\n    Component,\\n    Input,\\n} from \'@angular/core\';\\nimport { Object3D } from \'three\';\\n\\n\\n@Component({\\n  selector: \'app-demo-cube\',\\n  templateUrl: \'./demo-cube.component.html\',\\n  styleUrls: [\'./demo-cube.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class DemoCubeComponent {\\n  onGroupAnimate(group: Object3D) {\\n    group.rotation.y += 0.01;\\n}\\n}\\n\\n\\n\\n@Component({\\n  selector: \'demo-cube\',\\n  template: `\\n      <ngt-mesh\\n          [ngtBoxHelper]=\\"[\'black\']\\"\\n          (animateReady)=\\"onCubeAnimate($event.object)\\"\\n          (click)=\\"active = !active\\"\\n          (pointerover)=\\"hover = true\\"\\n          (pointerout)=\\"hover = false\\"\\n          [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\n          [position]=\\"position\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{ color: hover ? \'hotpink\' : \'orange\' }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CubedemoComponent {\\n  @Input() position?: NgtVector3;\\n\\n  hover = false;\\n  active = false;\\n\\n  onCubeAnimate(cube: Object3D) {\\n      cube.rotation.x = cube.rotation.y += 0.01;\\n  }\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./demo-cube.component.scss"}],"stylesData":"","templateData":"<ngt-canvas [camera]=\\"{ position: [5, 5, 5] }\\" style=\\"height: 80vh; width: 100vw;\\" >\\n    <ngt-ambient-light></ngt-ambient-light>\\n    <ngt-spot-light [position]=\\"[5, 5, 5]\\"></ngt-spot-light>\\n\\n    <ngt-group\\n        [ngtBoxHelper]=\\"[\'red\']\\"\\n        (animateReady)=\\"onGroupAnimate($event.object)\\"\\n    >\\n        <demo-cube [position]=\\"[2, 0, 0]\\"></demo-cube>\\n        <demo-cube [position]=\\"[-2, 0, 0]\\"></demo-cube>\\n        <demo-cube [position]=\\"[0, 0, 2]\\"></demo-cube>\\n        <demo-cube [position]=\\"[0, 0, -2]\\"></demo-cube>\\n    </ngt-group>\\n\\n    <ngt-grid-helper></ngt-grid-helper>\\n    <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\\n\\n    <ngt-stats></ngt-stats>\\n</ngt-canvas>"},{"name":"EarthComponent","id":"component-EarthComponent-d8922a49c094837f7fd9b17b17f761d85d7c18ce540426f2877b87336ce5d73447f2f4ea8b8143c2202cfd109255096418a275cd81c2d256e6c3e3bf06995c22","file":"src/app/threejs-basic/earth-marker/earth-marker.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-earth","styleUrls":[],"styles":[],"template":"<ng-container *ngIf=\\"earth$ | async as earth\\"  >\\n    <ngt-group [dispose]=\\"null\\">\\n        <ngt-group\\n            [rotation]=\\"[-90 | radian, 0, 0.05]\\"\\n            [scale]=\\"[100, 100, 100]\\"\\n        >\\n            <ngt-mesh\\n                [geometry]=\\"\\n                    $any(earth.nodes[\'URF-Height_Lampd_Ice_0\']).geometry\\n                \\"\\n                [material]=\\"earth.materials[\'Lampd_Ice\']\\"\\n            ></ngt-mesh>\\n            <ngt-mesh\\n                (pointerover)=\\"$event.stopPropagation()\\"\\n                [geometry]=\\"\\n                    $any(earth.nodes[\'URF-Height_watr_0\']).geometry\\n                \\"\\n                [material]=\\"earth.materials[\'watr\']\\"\\n                (ready)=\\"$any($event.material).roughness = 0\\"\\n            ></ngt-mesh>\\n            <ngt-mesh\\n                [geometry]=\\"\\n                    $any(earth.nodes[\'URF-Height_Lampd_0\']).geometry\\n                \\"\\n                [material]=\\"earth.materials[\'Lampd\']\\"\\n            >\\n                <demo-marker\\n                    [rotation]=\\"[0, 90 | radian, 0]\\"\\n                    [position]=\\"[0, 1.3, 0]\\"\\n                    color=\\"orange\\"\\n                ></demo-marker>\\n\\n                <demo-marker\\n                    [rotation]=\\"[0, 90 | radian, 90 | radian]\\"\\n                    [position]=\\"[0, 0, 1.3]\\"\\n                    color=\\"indianred\\"\\n                ></demo-marker>\\n            </ngt-mesh>\\n        </ngt-group>\\n    </ngt-group>\\n</ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"earth$","defaultValue":"this.gltfLoader.load(\'assets/earth.gltf\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":87}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n    NgtEuler,\\r\\n    NgtVector3,\\r\\n} from \'@angular-three/core\';\\r\\n\\r\\nimport { NgtGLTFLoader } from \'@angular-three/soba/loaders\';\\r\\n\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgZone,\\r\\n} from \'@angular/core\';\\r\\nimport { faLocationArrow } from \'@fortawesome/free-solid-svg-icons/faLocationArrow\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-earth-marker\',\\r\\n    template: `\\r\\n\\r\\n        <ngt-canvas [initialLog]=\\"true\\" [dpr]=\\"[1, 2]\\" [camera]=\\"{ fov: 50 }\\" style=\\"height:100vh; width: 100vw;\\"  >\\r\\n\\r\\n        <ngt-soba-stage [controls]=\\"ngtSobaOrbitControls.controls\\" >\\r\\n                <demo-earth ></demo-earth>\\r\\n            </ngt-soba-stage>\\r\\n\\r\\n            <ngt-soba-orbit-controls\\r\\n                #ngtSobaOrbitControls=\\"ngtSobaOrbitControls\\"\\r\\n                (ready)=\\"$event.autoRotate = true\\"\\r\\n            ></ngt-soba-orbit-controls>\\r\\n        </ngt-canvas>\\r\\n\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class EarthMarkerComponent {\\r\\n    \\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-earth\',\\r\\n    template: `\\r\\n        <ng-container *ngIf=\\"earth$ | async as earth\\"  >\\r\\n            <ngt-group [dispose]=\\"null\\">\\r\\n                <ngt-group\\r\\n                    [rotation]=\\"[-90 | radian, 0, 0.05]\\"\\r\\n                    [scale]=\\"[100, 100, 100]\\"\\r\\n                >\\r\\n                    <ngt-mesh\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_Lampd_Ice_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'Lampd_Ice\']\\"\\r\\n                    ></ngt-mesh>\\r\\n                    <ngt-mesh\\r\\n                        (pointerover)=\\"$event.stopPropagation()\\"\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_watr_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'watr\']\\"\\r\\n                        (ready)=\\"$any($event.material).roughness = 0\\"\\r\\n                    ></ngt-mesh>\\r\\n                    <ngt-mesh\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_Lampd_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'Lampd\']\\"\\r\\n                    >\\r\\n                        <demo-marker\\r\\n                            [rotation]=\\"[0, 90 | radian, 0]\\"\\r\\n                            [position]=\\"[0, 1.3, 0]\\"\\r\\n                            color=\\"orange\\"\\r\\n                        ></demo-marker>\\r\\n\\r\\n                        <demo-marker\\r\\n                            [rotation]=\\"[0, 90 | radian, 90 | radian]\\"\\r\\n                            [position]=\\"[0, 0, 1.3]\\"\\r\\n                            color=\\"indianred\\"\\r\\n                        ></demo-marker>\\r\\n                    </ngt-mesh>\\r\\n                </ngt-group>\\r\\n            </ngt-group>\\r\\n        </ng-container>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class EarthComponent {\\r\\n    earth$ = this.gltfLoader.load(\'assets/earth.gltf\');\\r\\n\\r\\n    constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-marker\',\\r\\n    template: `\\r\\n        <ngt-soba-html\\r\\n            [transform]=\\"true\\"\\r\\n            [rotation]=\\"rotation\\"\\r\\n            [position]=\\"position\\"\\r\\n            [occlude]=\\"true\\"\\r\\n            (occludeChange)=\\"onOccludeChange($event)\\"\\r\\n            [parentStyle]=\\"{\\r\\n                transition: \'all 0.2s\',\\r\\n                opacity: hidden ? \'0\' : \'1\'\\r\\n            }\\"\\r\\n        >\\r\\n        <fa-icon [icon]=\\"faMarker\\" [styles]=\\"{ color: \'red\' }\\"></fa-icon>\\r\\n        </ngt-soba-html>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class MarkerComponent {\\r\\n    @Input() rotation?: NgtEuler;\\r\\n    @Input() position?: NgtVector3;\\r\\n\\r\\n    @Input() color = \'\';\\r\\n\\r\\n    hidden = false;\\r\\n    \\r\\n    faMarker = faLocationArrow;\\r\\n    constructor(private zone: NgZone) {}\\r\\n\\r\\n    get parentStyle(): Partial<CSSStyleDeclaration> {\\r\\n        return {\\r\\n            transition: \'all 0.2s\',\\r\\n            opacity: this.hidden ? \'0\' : \'1\',\\r\\n            transform: `scale(${this.hidden ? 0.25 : 1})`,\\r\\n        };\\r\\n    }\\r\\n\\r\\n    onOccludeChange(occluded: boolean) {\\r\\n        this.zone.run(() => {\\r\\n            this.hidden = occluded;\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":""}],"line":87,"jsdoctags":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"EarthMarkerComponent","id":"component-EarthMarkerComponent-d8922a49c094837f7fd9b17b17f761d85d7c18ce540426f2877b87336ce5d73447f2f4ea8b8143c2202cfd109255096418a275cd81c2d256e6c3e3bf06995c22","file":"src/app/threejs-basic/earth-marker/earth-marker.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-earth-marker","styleUrls":[],"styles":[],"template":"\\n<ngt-canvas [initialLog]=\\"true\\" [dpr]=\\"[1, 2]\\" [camera]=\\"{ fov: 50 }\\" style=\\"height:100vh; width: 100vw;\\"  >\\n\\n<ngt-soba-stage [controls]=\\"ngtSobaOrbitControls.controls\\" >\\n        <demo-earth ></demo-earth>\\n    </ngt-soba-stage>\\n\\n    <ngt-soba-orbit-controls\\n        #ngtSobaOrbitControls=\\"ngtSobaOrbitControls\\"\\n        (ready)=\\"$event.autoRotate = true\\"\\n    ></ngt-soba-orbit-controls>\\n</ngt-canvas>\\n\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n    NgtEuler,\\r\\n    NgtVector3,\\r\\n} from \'@angular-three/core\';\\r\\n\\r\\nimport { NgtGLTFLoader } from \'@angular-three/soba/loaders\';\\r\\n\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgZone,\\r\\n} from \'@angular/core\';\\r\\nimport { faLocationArrow } from \'@fortawesome/free-solid-svg-icons/faLocationArrow\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-earth-marker\',\\r\\n    template: `\\r\\n\\r\\n        <ngt-canvas [initialLog]=\\"true\\" [dpr]=\\"[1, 2]\\" [camera]=\\"{ fov: 50 }\\" style=\\"height:100vh; width: 100vw;\\"  >\\r\\n\\r\\n        <ngt-soba-stage [controls]=\\"ngtSobaOrbitControls.controls\\" >\\r\\n                <demo-earth ></demo-earth>\\r\\n            </ngt-soba-stage>\\r\\n\\r\\n            <ngt-soba-orbit-controls\\r\\n                #ngtSobaOrbitControls=\\"ngtSobaOrbitControls\\"\\r\\n                (ready)=\\"$event.autoRotate = true\\"\\r\\n            ></ngt-soba-orbit-controls>\\r\\n        </ngt-canvas>\\r\\n\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class EarthMarkerComponent {\\r\\n    \\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-earth\',\\r\\n    template: `\\r\\n        <ng-container *ngIf=\\"earth$ | async as earth\\"  >\\r\\n            <ngt-group [dispose]=\\"null\\">\\r\\n                <ngt-group\\r\\n                    [rotation]=\\"[-90 | radian, 0, 0.05]\\"\\r\\n                    [scale]=\\"[100, 100, 100]\\"\\r\\n                >\\r\\n                    <ngt-mesh\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_Lampd_Ice_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'Lampd_Ice\']\\"\\r\\n                    ></ngt-mesh>\\r\\n                    <ngt-mesh\\r\\n                        (pointerover)=\\"$event.stopPropagation()\\"\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_watr_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'watr\']\\"\\r\\n                        (ready)=\\"$any($event.material).roughness = 0\\"\\r\\n                    ></ngt-mesh>\\r\\n                    <ngt-mesh\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_Lampd_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'Lampd\']\\"\\r\\n                    >\\r\\n                        <demo-marker\\r\\n                            [rotation]=\\"[0, 90 | radian, 0]\\"\\r\\n                            [position]=\\"[0, 1.3, 0]\\"\\r\\n                            color=\\"orange\\"\\r\\n                        ></demo-marker>\\r\\n\\r\\n                        <demo-marker\\r\\n                            [rotation]=\\"[0, 90 | radian, 90 | radian]\\"\\r\\n                            [position]=\\"[0, 0, 1.3]\\"\\r\\n                            color=\\"indianred\\"\\r\\n                        ></demo-marker>\\r\\n                    </ngt-mesh>\\r\\n                </ngt-group>\\r\\n            </ngt-group>\\r\\n        </ng-container>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class EarthComponent {\\r\\n    earth$ = this.gltfLoader.load(\'assets/earth.gltf\');\\r\\n\\r\\n    constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-marker\',\\r\\n    template: `\\r\\n        <ngt-soba-html\\r\\n            [transform]=\\"true\\"\\r\\n            [rotation]=\\"rotation\\"\\r\\n            [position]=\\"position\\"\\r\\n            [occlude]=\\"true\\"\\r\\n            (occludeChange)=\\"onOccludeChange($event)\\"\\r\\n            [parentStyle]=\\"{\\r\\n                transition: \'all 0.2s\',\\r\\n                opacity: hidden ? \'0\' : \'1\'\\r\\n            }\\"\\r\\n        >\\r\\n        <fa-icon [icon]=\\"faMarker\\" [styles]=\\"{ color: \'red\' }\\"></fa-icon>\\r\\n        </ngt-soba-html>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class MarkerComponent {\\r\\n    @Input() rotation?: NgtEuler;\\r\\n    @Input() position?: NgtVector3;\\r\\n\\r\\n    @Input() color = \'\';\\r\\n\\r\\n    hidden = false;\\r\\n    \\r\\n    faMarker = faLocationArrow;\\r\\n    constructor(private zone: NgZone) {}\\r\\n\\r\\n    get parentStyle(): Partial<CSSStyleDeclaration> {\\r\\n        return {\\r\\n            transition: \'all 0.2s\',\\r\\n            opacity: this.hidden ? \'0\' : \'1\',\\r\\n            transform: `scale(${this.hidden ? 0.25 : 1})`,\\r\\n        };\\r\\n    }\\r\\n\\r\\n    onOccludeChange(occluded: boolean) {\\r\\n        this.zone.run(() => {\\r\\n            this.hidden = occluded;\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"FirstPersonControlsComponent","id":"component-FirstPersonControlsComponent-ca74499af1728f6220f5b54237788f557270a8fcd7a94987d40577d33ea3c05d9e5b1191f63415ab40256119fb3bccc2c6b31993239aaafee0c154dd905e34dd","file":"src/app/threejs-basic/kinematics/kinematics.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"first-person-controls","styleUrls":[],"styles":[],"template":"<ngt-group (ready)=\\"ready()\\" (animateReady)=\\"animate($event.state)\\"></ngt-group>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"container","defaultValue":"document.body","deprecated":false,"deprecationMessage":"","line":116,"type":"HTMLElement","decorators":[]},{"name":"movespeed","defaultValue":"1","deprecated":false,"deprecationMessage":"","line":118,"type":"number","decorators":[]},{"name":"rotatefactor","defaultValue":"2000","deprecated":false,"deprecationMessage":"","line":119,"type":"number","decorators":[]},{"name":"viewerheight","defaultValue":"1.5","deprecated":false,"deprecationMessage":"","line":117,"type":"number","decorators":[]}],"outputsClass":[{"name":"shoot","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":121,"type":"EventEmitter"}],"propertiesClass":[{"name":"camera","deprecated":false,"deprecationMessage":"","type":"Camera","optional":false,"description":"","line":124,"modifierKind":[121]},{"name":"cleanup","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"","line":126,"modifierKind":[121]},{"name":"keyStates","defaultValue":"new Map<string, boolean>([])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":123,"modifierKind":[121]},{"name":"playerVelocity","defaultValue":"new Vector3()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":200,"modifierKind":[121]}],"methodsClass":[{"name":"animate","args":[{"type":"NgtRender","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":235,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"NgtRender","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getForwardVector","args":[],"optional":false,"returnType":"Vector3","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getSideVector","args":[],"optional":false,"returnType":"Vector3","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"moveCamera","args":[{"name":"deltaTime","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":222,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"deltaTime","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":""},{"name":"ready","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":""},{"name":"updateVelocity","args":[{"name":"deltaTime","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"deltaTime","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from \\"@angular/core\\";\\n\\nimport { NgtCreatedState, NgtTriplet } from \\"@angular-three/core\\";\\n\\nimport { BoxProps, GetByIndex, SphereProps } from \\"@angular-three/cannon\\";\\nimport { Camera, Ray, Vector3 } from \\"three\\";\\nimport { ViewChild } from \\"@angular/core\\";\\nimport { NgtPhysicSphere } from \\"@angular-three/cannon/bodies\\";\\n\\nclass Projectile {\\n  constructor(public position: NgtTriplet, public ttl: number = 30) { }\\n}\\nclass Target {\\n  constructor(public position: NgtTriplet, public color: string) { }\\n}\\n\\n@Component({\\n  selector: \'app-kinematics\',\\n  templateUrl: \'./kinematics.component.html\',\\n  styleUrls: [\'./kinematics.component.scss\']\\n})\\nexport class KinematicsComponent  implements AfterViewInit {\\n  @ViewChild(\'player\') player!: NgtPhysicSphere;\\n\\n  projectiles: Array<Projectile> = [];\\n  cubes: Array<Target> = [];\\n\\n  playerRadius = 0.5;\\n  ballRadius = 0.1;\\n\\n  private camera!: Camera;\\n\\n  constructor(private cd: ChangeDetectorRef) {\\n    for (let i = 0; i < 30; i++) {\\n      this.cubes.push(new Target([\\n        -10 + Math.random() * 20,\\n        Math.random() + 1,\\n        -10 + Math.random() * 20\\n      ], \'#\' + Math.floor(Math.random() * 16777215).toString(16).padEnd(6, \'0\')));\\n    }\\n  }\\n\\n  ngAfterViewInit(): void {\\n    // if setInterval is removed, will need to call detectChanges below\\n    setInterval(() => {\\n      this.projectiles.forEach((item, index) => {\\n        item.ttl--;\\n        if (item.ttl <= 0) {\\n         this.projectiles.splice(index, 1)\\n        }\\n      })\\n    }, 100);\\n  }\\n\\n  created(event: NgtCreatedState) {\\n    this.camera = event.camera;\\n  }\\n  //event after canvas was created is used to copy camera object locally\\n  getCubeProps: GetByIndex<BoxProps> = (index: number) => (\\n    {\\n      mass: 1,\\n      material: { friction: 0, restitution: 0.3 },\\n      args: [1, 1, 1],\\n    }\\n  )\\n\\n  getBallProps: GetByIndex<SphereProps> = (index: number) => (\\n    {\\n      mass: 2,\\n      args: [this.ballRadius]\\n    }\\n  )\\n\\n  private getShootDirection(): Vector3 {\\n    const vector = new Vector3(0, 0, 1)\\n    vector.unproject(this.camera)\\n    const ray = new Ray(this.camera.position, vector.sub(this.camera.position).normalize())\\n    return ray.direction;\\n  }\\n\\n\\n  shoot() {\\n    const shootDirection = this.getShootDirection()\\n\\n    // position the ball to bounce off the player sphere\\n    const position = [\\n      this.camera.position.x + shootDirection.x * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.y + shootDirection.y * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.z + shootDirection.z * (this.playerRadius * 1.01 + this.ballRadius),\\n    ] as NgtTriplet;\\n\\n    this.projectiles.push(new Projectile(position));\\n\\n    // if setInterval is removed above, need to uncomment for ball to appear\\n    //this.cd.detectChanges();\\n  }\\n//add projectiles after getting the shoot direction and position\\n  tick() {\\n    this.player.api.position.copy(this.camera.position);\\n  }\\n}\\n//sphere position moves with camera\\n\\n\\nimport {  EventEmitter, Input, OnDestroy, Output } from \'@angular/core\';\\nimport { NgtCanvasStore, NgtRender } from \'@angular-three/core\';\\n\\n//\\n// adapted from three.js games fps example https://github.com/mrdoob/three.js/blob/master/examples/games_fps.html\\n//\\n@Component({\\n  selector: \'first-person-controls\',\\n  template: \'<ngt-group (ready)=\\"ready()\\" (animateReady)=\\"animate($event.state)\\"></ngt-group>\'\\n})\\nexport class FirstPersonControlsComponent implements OnDestroy {\\n  @Input() container: HTMLElement = document.body;\\n  @Input() viewerheight = 1.5;\\n  @Input() movespeed = 1;\\n  @Input() rotatefactor = 2000;\\n\\n  @Output() shoot = new EventEmitter();\\n\\n  private keyStates = new Map<string, boolean>([]);\\n  private camera!: Camera;\\n\\n  private cleanup!: () => void;\\n\\n  constructor(private canvasStore: NgtCanvasStore) { }\\n\\n  ngOnDestroy(): void {\\n    this.cleanup();\\n  }\\n\\n  ready() {\\n    const camera = this.canvasStore.get((s) => s.camera);\\n    camera.rotation.order = \'YXZ\';\\n    this.camera = camera;\\n\\n    // movement\\n    const keydown = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, true);\\n    }\\n    document.addEventListener(\'keydown\', keydown);\\n\\n    const keyup = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, false);\\n    }\\n    document.addEventListener(\'keyup\', keyup);\\n\\n    const mousedown = () => {\\n      document.body.requestPointerLock();\\n    }\\n    this.container.addEventListener(\'mousedown\', mousedown);\\n\\n    const mouseup = () => {\\n      this.shoot.emit();\\n    }\\n    document.body.addEventListener(\'mouseup\', mouseup);\\n\\n    // rotation\\n    const mousemove = (event: MouseEvent) => {\\n      if (document.pointerLockElement === document.body) {\\n        camera.rotation.y -= event.movementX / this.rotatefactor;\\n        camera.rotation.x -= event.movementY / this.rotatefactor;\\n      }\\n    }\\n    document.body.addEventListener(\'mousemove\', mousemove);\\n\\n    this.cleanup = () => {\\n      document.exitPointerLock();\\n      document.removeEventListener(\'keydown\', keydown);\\n      document.removeEventListener(\'keyup\', keyup);\\n      this.container.removeEventListener(\'mousedown\', mousedown);\\n      document.body.removeEventListener(\'mouseup\', mouseup);\\n      document.body.removeEventListener(\'mousemove\', mousemove);\\n    }\\n  }\\n\\n  private getForwardVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n\\n    return playerDirection;\\n  }\\n\\n  private getSideVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n    playerDirection.cross(this.camera.up);\\n\\n    return playerDirection;\\n  }\\n\\n  private playerVelocity = new Vector3();\\n\\n  private updateVelocity(deltaTime: number) {\\n    const speedDelta = deltaTime * 8;\\n\\n    if (this.keyStates.get(\'KeyW\') || this.keyStates.get(\'ArrowUp\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(speedDelta));\\n    }\\n\\n    if (this.keyStates.get(\'KeyS\') || this.keyStates.get(\'ArrowDown\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(-speedDelta));\\n    }\\n\\n    //if (this.keyStates.get(\'KeyA\' || this.keyStates.get(\'ArrowLeft\'))) {\\n      //this.playerVelocity.add(this.getSideVector().multiplyScalar(-speedDelta));\\n    //}\\n\\n    if (this.keyStates.get(\'KeyD\') || this.keyStates.get(\'ArrowRight\')) {\\n      this.playerVelocity.add(this.getSideVector().multiplyScalar(speedDelta));\\n    }\\n  }\\n\\n  private moveCamera(deltaTime: number) {\\n    // slow after mouse up\\n    let damping = Math.exp(-3 * deltaTime) - 1;\\n\\n    this.playerVelocity.addScaledVector(this.playerVelocity, damping);\\n\\n    const deltaPosition = this.playerVelocity.clone().multiplyScalar(deltaTime);\\n    if (this.camera) {\\n      this.camera.position.add(deltaPosition);\\n      this.camera.position.y = this.viewerheight;\\n    }\\n  }\\n\\n  animate({ delta }: NgtRender) {\\n    this.updateVelocity(delta * this.movespeed);  // check for input\\n    this.moveCamera(delta); // move player\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"canvasStore","type":"NgtCanvasStore","deprecated":false,"deprecationMessage":""}],"line":126,"jsdoctags":[{"name":"canvasStore","type":"NgtCanvasStore","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnDestroy"]},{"name":"FloorComponent","id":"component-FloorComponent-04d644be611aada0b35a0cad04055af7dad7f921d9a5cea7057196c0db92e1bbb737926fd7b4dc1cec61e5b0fbb94696a9cec4789b0405e67c7b6b9d4c30bcdb","file":"src/app/threejs-basic/cannon-start/cannon-start.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-floor","styleUrls":[],"styles":[],"template":"\x3c!-- 👇 turns this Mesh into a Physic Plane by attaching ngtPhysicPlane on it --\x3e\\n\x3c!-- 👇 NgtPhysicPlaneModule provides this directive --\x3e\\n<ngt-mesh\\n    ngtPhysicPlane\\n    [receiveShadow]=\\"true\\"\\n    [position]=\\"[0, -2.5, 0]\\"\\n    [rotation]=\\"[-90 | radian, 0, 0]\\"\\n>\\n    <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n    <ngt-shadow-material\\n        [parameters]=\\"{\\n            color: \'#171717\',\\n            transparent: true,\\n            opacity: 0.4\\n        }\\"\\n    ></ngt-shadow-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy } from \'@angular/core\';\\nimport { NgtVector3,NgtEuler,NgtTriplet } from \'@angular-three/core\';\\nimport { BoxProps, GetByIndex } from \'@angular-three/cannon\';\\n\\n@Component({\\n  selector: \'app-cannon-start\',\\n  templateUrl: \'./cannon-start.component.html\',\\n  styleUrls: [\'./cannon-start.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonStartComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n\\n\\n@Component({\\n  selector: \'app-floor\',\\n  template: `\\n      \x3c!-- 👇 turns this Mesh into a Physic Plane by attaching ngtPhysicPlane on it --\x3e\\n      \x3c!-- 👇 NgtPhysicPlaneModule provides this directive --\x3e\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"[0, -2.5, 0]\\"\\n          [rotation]=\\"[-90 | radian, 0, 0]\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{\\n                  color: \'#171717\',\\n                  transparent: true,\\n                  opacity: 0.4\\n              }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class FloorComponent {}\\n\\n\\n@Component({\\n  selector: \'app-cube-cannon\',\\n  template: `\\n      \x3c!-- 👇 turns this Mesh into a Physic Box by attaching ngtPhysicBox on it --\x3e\\n      \x3c!-- 👇 NgtPhysicBoxModule provides this directive --\x3e\\n      \x3c!-- 👇 getPhysicProps is a function that provides the object\'s props to our ngtPhysicBox --\x3e\\n      \x3c!-- 👇 so the Physic World is aware of our object\'s position and such --\x3e\\n      <ngt-mesh\\n          ngtPhysicBox\\n          [getPhysicProps]=\\"getCubeProps\\"\\n          [receiveShadow]=\\"true\\"\\n          [castShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n          [scale]=\\"scale\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-lambert-material\\n              [parameters]=\\"{ color: \'hotpink\' }\\"\\n          ></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CubeCannonComponent {\\n  // 👇 we create these class properties to reuse them in getCubeProps and on the template.\\n  // 👇 These can be turned into Input later\\n  position = [0.1, 5, 0] as NgtVector3;\\n  rotation = [0.4, 0.2, 0.5] as NgtEuler;\\n  scale = 0.5 as NgtVector3;\\n\\n  getCubeProps: GetByIndex<BoxProps> = () => ({\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n      rotation: this.rotation as NgtTriplet,\\n      // 👇 this is specific to BoxProps\\n      args: [this.scale, this.scale, this.scale] as NgtTriplet\\n  });\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"HeaderComponent","id":"component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc","file":"src/stories/header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-header","styleUrls":["./header.css"],"styles":[],"template":"<header>    <div class=\\"wrapper\\">\\n      <div>\\n        <svg width=\\"32\\" height=\\"32\\" viewBox=\\"0 0 32 32\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\n            <path\\n              d=\\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\\"\\n              fill=\\"#FFF\\"\\n            />\\n            <path\\n              d=\\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\\"\\n              fill=\\"#555AB9\\"\\n            />\\n            <path\\n              d=\\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\\"\\n              fill=\\"#91BAF8\\"\\n            />\\n          </g>\\n        </svg>\\n        <h1>Acme</h1>\\n      </div>\\n      <div>\\n        <div *ngIf=\\"user\\">\\n          <span class=\\"welcome\\">\\n            Welcome, <b>{{ user.name }}</b\\n            >!\\n          </span>\\n          <storybook-button\\n            *ngIf=\\"user\\"\\n            size=\\"small\\"\\n            (onClick)=\\"onLogout.emit($event)\\"\\n            label=\\"Log out\\"\\n          ></storybook-button>\\n        </div>\\n        <div *ngIf=\\"!user\\">\\n          <storybook-button\\n            *ngIf=\\"!user\\"\\n            size=\\"small\\"\\n            class=\\"margin-left\\"\\n            (onClick)=\\"onLogin.emit($event)\\"\\n            label=\\"Log in\\"\\n          ></storybook-button>\\n          <storybook-button\\n            *ngIf=\\"!user\\"\\n            primary\\n            size=\\"small\\"\\n            primary=\\"true\\"\\n            class=\\"margin-left\\"\\n            (onClick)=\\"onCreateAccount.emit($event)\\"\\n            label=\\"Sign up\\"\\n          ></storybook-button>\\n        </div>\\n      </div>\\n    </div>\\n  </header>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"user","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":65,"type":"User | null","decorators":[]}],"outputsClass":[{"name":"onCreateAccount","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":74,"type":"EventEmitter"},{"name":"onLogin","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":68,"type":"EventEmitter"},{"name":"onLogout","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":71,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\nimport { User } from \'./User\';\\n\\n@Component({\\n  selector: \'storybook-header\',\\n  template: `<header>\\n    <div class=\\"wrapper\\">\\n      <div>\\n        <svg width=\\"32\\" height=\\"32\\" viewBox=\\"0 0 32 32\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\n            <path\\n              d=\\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\\"\\n              fill=\\"#FFF\\"\\n            />\\n            <path\\n              d=\\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\\"\\n              fill=\\"#555AB9\\"\\n            />\\n            <path\\n              d=\\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\\"\\n              fill=\\"#91BAF8\\"\\n            />\\n          </g>\\n        </svg>\\n        <h1>Acme</h1>\\n      </div>\\n      <div>\\n        <div *ngIf=\\"user\\">\\n          <span class=\\"welcome\\">\\n            Welcome, <b>{{ user.name }}</b\\n            >!\\n          </span>\\n          <storybook-button\\n            *ngIf=\\"user\\"\\n            size=\\"small\\"\\n            (onClick)=\\"onLogout.emit($event)\\"\\n            label=\\"Log out\\"\\n          ></storybook-button>\\n        </div>\\n        <div *ngIf=\\"!user\\">\\n          <storybook-button\\n            *ngIf=\\"!user\\"\\n            size=\\"small\\"\\n            class=\\"margin-left\\"\\n            (onClick)=\\"onLogin.emit($event)\\"\\n            label=\\"Log in\\"\\n          ></storybook-button>\\n          <storybook-button\\n            *ngIf=\\"!user\\"\\n            primary\\n            size=\\"small\\"\\n            primary=\\"true\\"\\n            class=\\"margin-left\\"\\n            (onClick)=\\"onCreateAccount.emit($event)\\"\\n            label=\\"Sign up\\"\\n          ></storybook-button>\\n        </div>\\n      </div>\\n    </div>\\n  </header>`,\\n  styleUrls: [\'./header.css\'],\\n})\\nexport default class HeaderComponent {\\n  @Input()\\n  user: User | null = null;\\n\\n  @Output()\\n  onLogin = new EventEmitter<Event>();\\n\\n  @Output()\\n  onLogout = new EventEmitter<Event>();\\n\\n  @Output()\\n  onCreateAccount = new EventEmitter<Event>();\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".wrapper {\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n  padding: 15px 20px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\nsvg {\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\nh1 {\\n  font-weight: 900;\\n  font-size: 20px;\\n  line-height: 1;\\n  margin: 6px 0 6px 10px;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\nbutton + button {\\n  margin-left: 10px;\\n}\\n\\n.welcome {\\n  color: #333;\\n  font-size: 14px;\\n  margin-right: 10px;\\n}\\n","styleUrl":"./header.css"}],"stylesData":""},{"name":"InstancedSpheresComponent","id":"component-InstancedSpheresComponent-19dea74262f72e4f13a45db9a8e6829abc013af69d55c86d8820444b284cb44a3673195620f58f5eef6b0a1791a009a778a02dfdbd2ed3a951b989361f329afc","file":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-spheres","styleUrls":[],"styles":[],"template":"<ngt-instanced-mesh\\n    ngtPhysicSphere\\n    [castShadow]=\\"true\\"\\n    [receiveShadow]=\\"true\\"\\n    [getPhysicProps]=\\"getInstancedProps\\"\\n    [args]=\\"[number]\\"\\n>\\n    <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\n        <ngt-instanced-buffer-attribute\\n            attach=\\"color\\"\\n            [args]=\\"[colors, 3]\\"\\n        ></ngt-instanced-buffer-attribute>\\n    </ngt-sphere-geometry>\\n    <ngt-mesh-phong-material\\n        [parameters]=\\"{ vertexColors: true }\\"\\n    ></ngt-mesh-phong-material>\\n</ngt-instanced-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"number","defaultValue":"100","deprecated":false,"deprecationMessage":"","line":119,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"colors","deprecated":false,"deprecationMessage":"","type":"Float32Array","optional":false,"description":"","line":121}],"methodsClass":[{"name":"getInstancedProps","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SphereProps","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { BoxProps, SphereProps } from \'@angular-three/cannon\';\\nimport {\\n  ChangeDetectionStrategy,\\n  Input\\n} from \'@angular/core\';\\nimport {\\n  NgtEuler,\\n  NgtRender,\\n  NgtTriplet,\\n  NgtVector3\\n} from \'@angular-three/core\';\\n\\nimport {\\n  NgtPhysicBox\\n} from \'@angular-three/cannon/bodies\';\\n\\n// @ts-ignore\\nimport niceColors from \'nice-color-palettes\';\\nimport * as THREE from \'three\';\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\n\\n\\n@Component({\\n  selector: \'app-cannon-kinematic\',\\n  templateUrl: \'./cannon-kinematic.component.html\',\\n  styleUrls: [\'./cannon-kinematic.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonKinematicComponent implements OnInit {\\n  niceColor = niceColor;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n@Component({\\n  selector: \'app-plane\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [rotation]=\\"rotation\\"\\n          [position]=\\"position\\"\\n          [receiveShadow]=\\"true\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ color }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneComponent {\\n  @Input() color?: THREE.ColorRepresentation;\\n  @Input() position?: NgtVector3;\\n  @Input() rotation?: NgtEuler;\\n}\\n\\n@Component({\\n  selector: \'app-box\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicBox\\n          #physicBox=\\"ngtPhysicBox\\"\\n          [getPhysicProps]=\\"getBoxProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\n      >\\n          <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n          <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BoxComponent {\\n  boxSize: NgtTriplet = [4, 4, 4];\\n\\n  getBoxProps = (): BoxProps => ({\\n      mass: 1,\\n      type: \'Kinematic\',\\n      args: this.boxSize,\\n  });\\n\\n  onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\n      const t = clock.getElapsedTime();\\n      api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\n      api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-spheres\',\\n  template: `\\n      <ngt-instanced-mesh\\n          ngtPhysicSphere\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [getPhysicProps]=\\"getInstancedProps\\"\\n          [args]=\\"[number]\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\n              <ngt-instanced-buffer-attribute\\n                  attach=\\"color\\"\\n                  [args]=\\"[colors, 3]\\"\\n              ></ngt-instanced-buffer-attribute>\\n          </ngt-sphere-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ vertexColors: true }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-instanced-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class InstancedSpheresComponent {\\n  @Input() number = 100;\\n\\n  colors!: Float32Array;\\n\\n  ngOnInit() {\\n      this.colors = new Float32Array(this.number * 3);\\n      const color = new THREE.Color();\\n\\n      for (let i = 0; i < this.number; i++) {\\n          color\\n              .set(niceColor[Math.floor(Math.random() * 5)])\\n              .convertSRGBToLinear()\\n              .toArray(this.colors, i * 3);\\n      }\\n  }\\n\\n  getInstancedProps(index: number) {\\n      return {\\n          args: [1],\\n          mass: 1,\\n          position: [\\n              Math.random() - 0.5,\\n              Math.random() - 0.5,\\n              index * 2,\\n          ] as SphereProps[\'position\'],\\n      } as SphereProps;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"KBoxComponent","id":"component-KBoxComponent-4253538dc33c8998540d562a9d7d1b202b2d0abc4b48719049951b44457549dcf72d23a04ad445ea67296a1733d130d4b9cd88a093094058cb50ea4313932236","file":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-box","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicBox\\n    #physicBox=\\"ngtPhysicBox\\"\\n    [getPhysicProps]=\\"getBoxProps\\"\\n    [castShadow]=\\"true\\"\\n    [receiveShadow]=\\"true\\"\\n    (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\n>\\n    <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n    <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"boxSize","defaultValue":"[4, 4, 4]","deprecated":false,"deprecationMessage":"","type":"NgtTriplet","optional":false,"description":"","line":119},{"name":"getBoxProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":121}],"methodsClass":[{"name":"onBoxAnimate","args":[{"type":"NgtRender","deprecated":false,"deprecationMessage":""},{"type":"NgtPhysicBox","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"NgtRender","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"NgtPhysicBox","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { BoxProps, SphereProps } from \'@angular-three/cannon\';\\r\\nimport {\\r\\n    NgtPhysicBox\\r\\n} from \'@angular-three/cannon/bodies\';\\r\\nimport {\\r\\n \\r\\n    NgtEuler,\\r\\n    NgtRender,\\r\\n    NgtTriplet,\\r\\n    NgtVector3,\\r\\n} from \'@angular-three/core\';\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgModule,\\r\\n} from \'@angular/core\';\\r\\n\\r\\n// @ts-ignore\\r\\nimport niceColors from \'nice-color-palettes\';\\r\\nimport * as THREE from \'three\';\\r\\n\\r\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-kinematic-cube\',\\r\\n    template: `\\r\\n        <ngt-canvas [shadows]=\\"true\\" [camera]=\\"{ position: [0, -12, 16] }\\" style=\\"height:100vh; width: 100vw;\\">\\r\\n            <ngt-stats></ngt-stats>\\r\\n\\r\\n            <ngt-hemisphere-light [intensity]=\\"0.35\\"></ngt-hemisphere-light>\\r\\n            <ngt-spot-light\\r\\n                [position]=\\"[30, 0, 30]\\"\\r\\n                [intensity]=\\"2\\"\\r\\n                [shadow]=\\"{ mapSize: [256, 256] | vector2 }\\"\\r\\n                [castShadow]=\\"true\\"\\r\\n                [args]=\\"[undefined, undefined, undefined, 0.3, 1]\\"\\r\\n            ></ngt-spot-light>\\r\\n            <ngt-point-light\\r\\n                [position]=\\"[-30, 0, -30]\\"\\r\\n                [intensity]=\\"0.5\\"\\r\\n            ></ngt-point-light>\\r\\n\\r\\n            <ngt-physics [gravity]=\\"[0, 0, -30]\\">\\r\\n                <demo-plane [color]=\\"niceColor[4]\\"></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[1]\\"\\r\\n                    [position]=\\"[-6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, 0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[2]\\"\\r\\n                    [position]=\\"[6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, -0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[3]\\"\\r\\n                    [position]=\\"[0, 6, 0]\\"\\r\\n                    [rotation]=\\"[0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[0]\\"\\r\\n                    [position]=\\"[0, -6, 0]\\"\\r\\n                    [rotation]=\\"[-0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n\\r\\n                <demo-box></demo-box>\\r\\n                <demo-spheres [number]=\\"100\\"></demo-spheres>\\r\\n            </ngt-physics>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KinematicCubeComponent {\\r\\n    niceColor = niceColor;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-plane\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicPlane\\r\\n            [rotation]=\\"rotation\\"\\r\\n            [position]=\\"position\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n        >\\r\\n            <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ color }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KPlaneComponent {\\r\\n    @Input() color?: THREE.ColorRepresentation;\\r\\n    @Input() position?: NgtVector3;\\r\\n    @Input() rotation?: NgtEuler;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-box\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicBox\\r\\n            #physicBox=\\"ngtPhysicBox\\"\\r\\n            [getPhysicProps]=\\"getBoxProps\\"\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\r\\n        >\\r\\n            <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\r\\n            <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KBoxComponent {\\r\\n    boxSize: NgtTriplet = [4, 4, 4];\\r\\n\\r\\n    getBoxProps = (): BoxProps => ({\\r\\n        mass: 1,\\r\\n        type: \'Kinematic\',\\r\\n        args: this.boxSize,\\r\\n    });\\r\\n\\r\\n    onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\r\\n        const t = clock.getElapsedTime();\\r\\n        api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\r\\n        api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\r\\n    }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-spheres\',\\r\\n    template: `\\r\\n        <ngt-instanced-mesh\\r\\n            ngtPhysicSphere\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            [getPhysicProps]=\\"getInstancedProps\\"\\r\\n            [args]=\\"[number]\\"\\r\\n        >\\r\\n            <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\r\\n                <ngt-instanced-buffer-attribute\\r\\n                    attach=\\"color\\"\\r\\n                    [args]=\\"[colors, 3]\\"\\r\\n                ></ngt-instanced-buffer-attribute>\\r\\n            </ngt-sphere-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ vertexColors: true }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-instanced-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KInstancedSpheresComponent {\\r\\n    @Input() number = 100;\\r\\n\\r\\n    colors!: Float32Array;\\r\\n\\r\\n    ngOnInit() {\\r\\n        this.colors = new Float32Array(this.number * 3);\\r\\n        const color = new THREE.Color();\\r\\n\\r\\n        for (let i = 0; i < this.number; i++) {\\r\\n            color\\r\\n                .set(niceColor[Math.floor(Math.random() * 5)])\\r\\n                .convertSRGBToLinear()\\r\\n                .toArray(this.colors, i * 3);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    getInstancedProps(index: number) {\\r\\n        return {\\r\\n            args: [1],\\r\\n            mass: 1,\\r\\n            position: [\\r\\n                Math.random() - 0.5,\\r\\n                Math.random() - 0.5,\\r\\n                index * 2,\\r\\n            ] as SphereProps[\'position\'],\\r\\n        } as SphereProps;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"KeenBloomComponent","id":"component-KeenBloomComponent-e1d3a29cd9e1725b4bb03534559489538882420e1306e092bbea898df8e77b2807a52f374ba2082a015c9249d2aef3f87b5e1e5b0f66222d38a418394272329d","file":"src/app/threejs-basic/keen-bloom/keen-bloom.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-keen-bloom","styleUrls":[],"styles":[],"template":"<ngt-canvas style=\\"height: 80vh; width: 100vw;\\"\\n    [camera]=\\"{ position: [0, 0, 15], near: 5, far: 20 }\\"\\n    [scene]=\\"{ background: \'black\' | color }\\"\\n>\\n    <ngt-stats></ngt-stats>\\n    <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\\n    <demo-keen></demo-keen>\\n\\n    <ngt-ambient-light></ngt-ambient-light>\\n    <ngt-directional-light\\n        [position]=\\"[0, 1, 2]\\"\\n        color=\\"white\\"\\n    ></ngt-directional-light>\\n\\n    <ngt-effect-composer>\\n        <ngt-bloom></ngt-bloom>\\n        <ngt-noise [options]=\\"{ premultiply: true }\\"></ngt-noise>\\n    </ngt-effect-composer>\\n</ngt-canvas>\\n<ngt-soba-loader></ngt-soba-loader>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n    NgtGLTFLoader\\r\\n} from \'@angular-three/soba/loaders\';\\r\\nimport { ChangeDetectionStrategy, Component } from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-keen-bloom\',\\r\\n    template: `\\r\\n        <ngt-canvas style=\\"height: 80vh; width: 100vw;\\" \\r\\n            [camera]=\\"{ position: [0, 0, 15], near: 5, far: 20 }\\"\\r\\n            [scene]=\\"{ background: \'black\' | color }\\"\\r\\n        >\\r\\n            <ngt-stats></ngt-stats>\\r\\n            <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\\r\\n            <demo-keen></demo-keen>\\r\\n\\r\\n            <ngt-ambient-light></ngt-ambient-light>\\r\\n            <ngt-directional-light\\r\\n                [position]=\\"[0, 1, 2]\\"\\r\\n                color=\\"white\\"\\r\\n            ></ngt-directional-light>\\r\\n\\r\\n            <ngt-effect-composer>\\r\\n                <ngt-bloom></ngt-bloom>\\r\\n                <ngt-noise [options]=\\"{ premultiply: true }\\"></ngt-noise>\\r\\n            </ngt-effect-composer>\\r\\n        </ngt-canvas>\\r\\n        <ngt-soba-loader></ngt-soba-loader>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KeenBloomComponent {}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-keen\',\\r\\n    template: `\\r\\n        <ng-container *ngIf=\\"keen$ | async as keen\\">\\r\\n            <ngt-group\\r\\n                (ready)=\\"onReady($event)\\"\\r\\n                (animateReady)=\\"onGroupAnimate($event.object)\\"\\r\\n                [position]=\\"[0, -7, 0]\\"\\r\\n                [dispose]=\\"null\\"\\r\\n            >\\r\\n                <ngt-mesh\\r\\n                    [material]=\\"keen.materials[\'Scene_-_Root\']\\"\\r\\n                    [geometry]=\\"$any(keen.nodes[\'mesh_0\']).geometry\\"\\r\\n                    [castShadow]=\\"true\\"\\r\\n                    [receiveShadow]=\\"true\\"\\r\\n                ></ngt-mesh>\\r\\n            </ngt-group>\\r\\n        </ng-container>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KeenComponent {\\r\\n    keen$ = this.gltfLoader.load(\'assets/scene.gltf\');\\r\\n\\r\\n    constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n\\r\\n    onGroupAnimate(group: THREE.Object3D) {\\r\\n        group.rotation.z += 0.01;\\r\\n    }\\r\\n\\r\\n    onReady(group: THREE.Group) {\\r\\n        group.rotation.y = 0;\\r\\n        group.rotation.x = -Math.PI / 2;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"KeenComponent","id":"component-KeenComponent-e1d3a29cd9e1725b4bb03534559489538882420e1306e092bbea898df8e77b2807a52f374ba2082a015c9249d2aef3f87b5e1e5b0f66222d38a418394272329d","file":"src/app/threejs-basic/keen-bloom/keen-bloom.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-keen","styleUrls":[],"styles":[],"template":"<ng-container *ngIf=\\"keen$ | async as keen\\">\\n    <ngt-group\\n        (ready)=\\"onReady($event)\\"\\n        (animateReady)=\\"onGroupAnimate($event.object)\\"\\n        [position]=\\"[0, -7, 0]\\"\\n        [dispose]=\\"null\\"\\n    >\\n        <ngt-mesh\\n            [material]=\\"keen.materials[\'Scene_-_Root\']\\"\\n            [geometry]=\\"$any(keen.nodes[\'mesh_0\']).geometry\\"\\n            [castShadow]=\\"true\\"\\n            [receiveShadow]=\\"true\\"\\n        ></ngt-mesh>\\n    </ngt-group>\\n</ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"keen$","defaultValue":"this.gltfLoader.load(\'assets/scene.gltf\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57}],"methodsClass":[{"name":"onGroupAnimate","args":[{"name":"group","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"group","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onReady","args":[{"name":"group","type":"THREE.Group","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"group","type":"THREE.Group","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n    NgtGLTFLoader\\r\\n} from \'@angular-three/soba/loaders\';\\r\\nimport { ChangeDetectionStrategy, Component } from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-keen-bloom\',\\r\\n    template: `\\r\\n        <ngt-canvas style=\\"height: 80vh; width: 100vw;\\" \\r\\n            [camera]=\\"{ position: [0, 0, 15], near: 5, far: 20 }\\"\\r\\n            [scene]=\\"{ background: \'black\' | color }\\"\\r\\n        >\\r\\n            <ngt-stats></ngt-stats>\\r\\n            <ngt-soba-orbit-controls></ngt-soba-orbit-controls>\\r\\n            <demo-keen></demo-keen>\\r\\n\\r\\n            <ngt-ambient-light></ngt-ambient-light>\\r\\n            <ngt-directional-light\\r\\n                [position]=\\"[0, 1, 2]\\"\\r\\n                color=\\"white\\"\\r\\n            ></ngt-directional-light>\\r\\n\\r\\n            <ngt-effect-composer>\\r\\n                <ngt-bloom></ngt-bloom>\\r\\n                <ngt-noise [options]=\\"{ premultiply: true }\\"></ngt-noise>\\r\\n            </ngt-effect-composer>\\r\\n        </ngt-canvas>\\r\\n        <ngt-soba-loader></ngt-soba-loader>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KeenBloomComponent {}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-keen\',\\r\\n    template: `\\r\\n        <ng-container *ngIf=\\"keen$ | async as keen\\">\\r\\n            <ngt-group\\r\\n                (ready)=\\"onReady($event)\\"\\r\\n                (animateReady)=\\"onGroupAnimate($event.object)\\"\\r\\n                [position]=\\"[0, -7, 0]\\"\\r\\n                [dispose]=\\"null\\"\\r\\n            >\\r\\n                <ngt-mesh\\r\\n                    [material]=\\"keen.materials[\'Scene_-_Root\']\\"\\r\\n                    [geometry]=\\"$any(keen.nodes[\'mesh_0\']).geometry\\"\\r\\n                    [castShadow]=\\"true\\"\\r\\n                    [receiveShadow]=\\"true\\"\\r\\n                ></ngt-mesh>\\r\\n            </ngt-group>\\r\\n        </ng-container>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KeenComponent {\\r\\n    keen$ = this.gltfLoader.load(\'assets/scene.gltf\');\\r\\n\\r\\n    constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n\\r\\n    onGroupAnimate(group: THREE.Object3D) {\\r\\n        group.rotation.z += 0.01;\\r\\n    }\\r\\n\\r\\n    onReady(group: THREE.Group) {\\r\\n        group.rotation.y = 0;\\r\\n        group.rotation.x = -Math.PI / 2;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":""}],"line":57,"jsdoctags":[{"name":"gltfLoader","type":"NgtGLTFLoader","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"KinematicCubeComponent","id":"component-KinematicCubeComponent-4253538dc33c8998540d562a9d7d1b202b2d0abc4b48719049951b44457549dcf72d23a04ad445ea67296a1733d130d4b9cd88a093094058cb50ea4313932236","file":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-kinematic-cube","styleUrls":[],"styles":[],"template":"<ngt-canvas [shadows]=\\"true\\" [camera]=\\"{ position: [0, -12, 16] }\\" style=\\"height:100vh; width: 100vw;\\">\\n    <ngt-stats></ngt-stats>\\n\\n    <ngt-hemisphere-light [intensity]=\\"0.35\\"></ngt-hemisphere-light>\\n    <ngt-spot-light\\n        [position]=\\"[30, 0, 30]\\"\\n        [intensity]=\\"2\\"\\n        [shadow]=\\"{ mapSize: [256, 256] | vector2 }\\"\\n        [castShadow]=\\"true\\"\\n        [args]=\\"[undefined, undefined, undefined, 0.3, 1]\\"\\n    ></ngt-spot-light>\\n    <ngt-point-light\\n        [position]=\\"[-30, 0, -30]\\"\\n        [intensity]=\\"0.5\\"\\n    ></ngt-point-light>\\n\\n    <ngt-physics [gravity]=\\"[0, 0, -30]\\">\\n        <demo-plane [color]=\\"niceColor[4]\\"></demo-plane>\\n        <demo-plane\\n            [color]=\\"niceColor[1]\\"\\n            [position]=\\"[-6, 0, 0]\\"\\n            [rotation]=\\"[0, 0.9, 0]\\"\\n        ></demo-plane>\\n        <demo-plane\\n            [color]=\\"niceColor[2]\\"\\n            [position]=\\"[6, 0, 0]\\"\\n            [rotation]=\\"[0, -0.9, 0]\\"\\n        ></demo-plane>\\n        <demo-plane\\n            [color]=\\"niceColor[3]\\"\\n            [position]=\\"[0, 6, 0]\\"\\n            [rotation]=\\"[0.9, 0, 0]\\"\\n        ></demo-plane>\\n        <demo-plane\\n            [color]=\\"niceColor[0]\\"\\n            [position]=\\"[0, -6, 0]\\"\\n            [rotation]=\\"[-0.9, 0, 0]\\"\\n        ></demo-plane>\\n\\n        <demo-box></demo-box>\\n        <demo-spheres [number]=\\"100\\"></demo-spheres>\\n    </ngt-physics>\\n</ngt-canvas>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"niceColor","defaultValue":"niceColor","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":75}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { BoxProps, SphereProps } from \'@angular-three/cannon\';\\r\\nimport {\\r\\n    NgtPhysicBox\\r\\n} from \'@angular-three/cannon/bodies\';\\r\\nimport {\\r\\n \\r\\n    NgtEuler,\\r\\n    NgtRender,\\r\\n    NgtTriplet,\\r\\n    NgtVector3,\\r\\n} from \'@angular-three/core\';\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgModule,\\r\\n} from \'@angular/core\';\\r\\n\\r\\n// @ts-ignore\\r\\nimport niceColors from \'nice-color-palettes\';\\r\\nimport * as THREE from \'three\';\\r\\n\\r\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-kinematic-cube\',\\r\\n    template: `\\r\\n        <ngt-canvas [shadows]=\\"true\\" [camera]=\\"{ position: [0, -12, 16] }\\" style=\\"height:100vh; width: 100vw;\\">\\r\\n            <ngt-stats></ngt-stats>\\r\\n\\r\\n            <ngt-hemisphere-light [intensity]=\\"0.35\\"></ngt-hemisphere-light>\\r\\n            <ngt-spot-light\\r\\n                [position]=\\"[30, 0, 30]\\"\\r\\n                [intensity]=\\"2\\"\\r\\n                [shadow]=\\"{ mapSize: [256, 256] | vector2 }\\"\\r\\n                [castShadow]=\\"true\\"\\r\\n                [args]=\\"[undefined, undefined, undefined, 0.3, 1]\\"\\r\\n            ></ngt-spot-light>\\r\\n            <ngt-point-light\\r\\n                [position]=\\"[-30, 0, -30]\\"\\r\\n                [intensity]=\\"0.5\\"\\r\\n            ></ngt-point-light>\\r\\n\\r\\n            <ngt-physics [gravity]=\\"[0, 0, -30]\\">\\r\\n                <demo-plane [color]=\\"niceColor[4]\\"></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[1]\\"\\r\\n                    [position]=\\"[-6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, 0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[2]\\"\\r\\n                    [position]=\\"[6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, -0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[3]\\"\\r\\n                    [position]=\\"[0, 6, 0]\\"\\r\\n                    [rotation]=\\"[0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[0]\\"\\r\\n                    [position]=\\"[0, -6, 0]\\"\\r\\n                    [rotation]=\\"[-0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n\\r\\n                <demo-box></demo-box>\\r\\n                <demo-spheres [number]=\\"100\\"></demo-spheres>\\r\\n            </ngt-physics>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KinematicCubeComponent {\\r\\n    niceColor = niceColor;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-plane\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicPlane\\r\\n            [rotation]=\\"rotation\\"\\r\\n            [position]=\\"position\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n        >\\r\\n            <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ color }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KPlaneComponent {\\r\\n    @Input() color?: THREE.ColorRepresentation;\\r\\n    @Input() position?: NgtVector3;\\r\\n    @Input() rotation?: NgtEuler;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-box\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicBox\\r\\n            #physicBox=\\"ngtPhysicBox\\"\\r\\n            [getPhysicProps]=\\"getBoxProps\\"\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\r\\n        >\\r\\n            <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\r\\n            <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KBoxComponent {\\r\\n    boxSize: NgtTriplet = [4, 4, 4];\\r\\n\\r\\n    getBoxProps = (): BoxProps => ({\\r\\n        mass: 1,\\r\\n        type: \'Kinematic\',\\r\\n        args: this.boxSize,\\r\\n    });\\r\\n\\r\\n    onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\r\\n        const t = clock.getElapsedTime();\\r\\n        api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\r\\n        api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\r\\n    }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-spheres\',\\r\\n    template: `\\r\\n        <ngt-instanced-mesh\\r\\n            ngtPhysicSphere\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            [getPhysicProps]=\\"getInstancedProps\\"\\r\\n            [args]=\\"[number]\\"\\r\\n        >\\r\\n            <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\r\\n                <ngt-instanced-buffer-attribute\\r\\n                    attach=\\"color\\"\\r\\n                    [args]=\\"[colors, 3]\\"\\r\\n                ></ngt-instanced-buffer-attribute>\\r\\n            </ngt-sphere-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ vertexColors: true }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-instanced-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KInstancedSpheresComponent {\\r\\n    @Input() number = 100;\\r\\n\\r\\n    colors!: Float32Array;\\r\\n\\r\\n    ngOnInit() {\\r\\n        this.colors = new Float32Array(this.number * 3);\\r\\n        const color = new THREE.Color();\\r\\n\\r\\n        for (let i = 0; i < this.number; i++) {\\r\\n            color\\r\\n                .set(niceColor[Math.floor(Math.random() * 5)])\\r\\n                .convertSRGBToLinear()\\r\\n                .toArray(this.colors, i * 3);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    getInstancedProps(index: number) {\\r\\n        return {\\r\\n            args: [1],\\r\\n            mass: 1,\\r\\n            position: [\\r\\n                Math.random() - 0.5,\\r\\n                Math.random() - 0.5,\\r\\n                index * 2,\\r\\n            ] as SphereProps[\'position\'],\\r\\n        } as SphereProps;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"KinematicsComponent","id":"component-KinematicsComponent-ca74499af1728f6220f5b54237788f557270a8fcd7a94987d40577d33ea3c05d9e5b1191f63415ab40256119fb3bccc2c6b31993239aaafee0c154dd905e34dd","file":"src/app/threejs-basic/kinematics/kinematics.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-kinematics","styleUrls":["./kinematics.component.scss"],"styles":[],"templateUrl":["./kinematics.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"ballRadius","defaultValue":"0.1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":29},{"name":"camera","deprecated":false,"deprecationMessage":"","type":"Camera","optional":false,"description":"","line":31,"modifierKind":[121]},{"name":"cubes","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<Target>","optional":false,"description":"","line":26},{"name":"getBallProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<SphereProps>","optional":false,"description":"","line":67},{"name":"getCubeProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<BoxProps>","optional":false,"description":"","line":59},{"name":"player","deprecated":false,"deprecationMessage":"","type":"NgtPhysicSphere","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'player\'"}]},{"name":"playerRadius","defaultValue":"0.5","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28},{"name":"projectiles","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<Projectile>","optional":false,"description":"","line":25}],"methodsClass":[{"name":"created","args":[{"name":"event","type":"NgtCreatedState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"NgtCreatedState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getShootDirection","args":[],"optional":false,"returnType":"Vector3","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""},{"name":"shoot","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":""},{"name":"tick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from \\"@angular/core\\";\\n\\nimport { NgtCreatedState, NgtTriplet } from \\"@angular-three/core\\";\\n\\nimport { BoxProps, GetByIndex, SphereProps } from \\"@angular-three/cannon\\";\\nimport { Camera, Ray, Vector3 } from \\"three\\";\\nimport { ViewChild } from \\"@angular/core\\";\\nimport { NgtPhysicSphere } from \\"@angular-three/cannon/bodies\\";\\n\\nclass Projectile {\\n  constructor(public position: NgtTriplet, public ttl: number = 30) { }\\n}\\nclass Target {\\n  constructor(public position: NgtTriplet, public color: string) { }\\n}\\n\\n@Component({\\n  selector: \'app-kinematics\',\\n  templateUrl: \'./kinematics.component.html\',\\n  styleUrls: [\'./kinematics.component.scss\']\\n})\\nexport class KinematicsComponent  implements AfterViewInit {\\n  @ViewChild(\'player\') player!: NgtPhysicSphere;\\n\\n  projectiles: Array<Projectile> = [];\\n  cubes: Array<Target> = [];\\n\\n  playerRadius = 0.5;\\n  ballRadius = 0.1;\\n\\n  private camera!: Camera;\\n\\n  constructor(private cd: ChangeDetectorRef) {\\n    for (let i = 0; i < 30; i++) {\\n      this.cubes.push(new Target([\\n        -10 + Math.random() * 20,\\n        Math.random() + 1,\\n        -10 + Math.random() * 20\\n      ], \'#\' + Math.floor(Math.random() * 16777215).toString(16).padEnd(6, \'0\')));\\n    }\\n  }\\n\\n  ngAfterViewInit(): void {\\n    // if setInterval is removed, will need to call detectChanges below\\n    setInterval(() => {\\n      this.projectiles.forEach((item, index) => {\\n        item.ttl--;\\n        if (item.ttl <= 0) {\\n         this.projectiles.splice(index, 1)\\n        }\\n      })\\n    }, 100);\\n  }\\n\\n  created(event: NgtCreatedState) {\\n    this.camera = event.camera;\\n  }\\n  //event after canvas was created is used to copy camera object locally\\n  getCubeProps: GetByIndex<BoxProps> = (index: number) => (\\n    {\\n      mass: 1,\\n      material: { friction: 0, restitution: 0.3 },\\n      args: [1, 1, 1],\\n    }\\n  )\\n\\n  getBallProps: GetByIndex<SphereProps> = (index: number) => (\\n    {\\n      mass: 2,\\n      args: [this.ballRadius]\\n    }\\n  )\\n\\n  private getShootDirection(): Vector3 {\\n    const vector = new Vector3(0, 0, 1)\\n    vector.unproject(this.camera)\\n    const ray = new Ray(this.camera.position, vector.sub(this.camera.position).normalize())\\n    return ray.direction;\\n  }\\n\\n\\n  shoot() {\\n    const shootDirection = this.getShootDirection()\\n\\n    // position the ball to bounce off the player sphere\\n    const position = [\\n      this.camera.position.x + shootDirection.x * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.y + shootDirection.y * (this.playerRadius * 1.01 + this.ballRadius),\\n      this.camera.position.z + shootDirection.z * (this.playerRadius * 1.01 + this.ballRadius),\\n    ] as NgtTriplet;\\n\\n    this.projectiles.push(new Projectile(position));\\n\\n    // if setInterval is removed above, need to uncomment for ball to appear\\n    //this.cd.detectChanges();\\n  }\\n//add projectiles after getting the shoot direction and position\\n  tick() {\\n    this.player.api.position.copy(this.camera.position);\\n  }\\n}\\n//sphere position moves with camera\\n\\n\\nimport {  EventEmitter, Input, OnDestroy, Output } from \'@angular/core\';\\nimport { NgtCanvasStore, NgtRender } from \'@angular-three/core\';\\n\\n//\\n// adapted from three.js games fps example https://github.com/mrdoob/three.js/blob/master/examples/games_fps.html\\n//\\n@Component({\\n  selector: \'first-person-controls\',\\n  template: \'<ngt-group (ready)=\\"ready()\\" (animateReady)=\\"animate($event.state)\\"></ngt-group>\'\\n})\\nexport class FirstPersonControlsComponent implements OnDestroy {\\n  @Input() container: HTMLElement = document.body;\\n  @Input() viewerheight = 1.5;\\n  @Input() movespeed = 1;\\n  @Input() rotatefactor = 2000;\\n\\n  @Output() shoot = new EventEmitter();\\n\\n  private keyStates = new Map<string, boolean>([]);\\n  private camera!: Camera;\\n\\n  private cleanup!: () => void;\\n\\n  constructor(private canvasStore: NgtCanvasStore) { }\\n\\n  ngOnDestroy(): void {\\n    this.cleanup();\\n  }\\n\\n  ready() {\\n    const camera = this.canvasStore.get((s) => s.camera);\\n    camera.rotation.order = \'YXZ\';\\n    this.camera = camera;\\n\\n    // movement\\n    const keydown = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, true);\\n    }\\n    document.addEventListener(\'keydown\', keydown);\\n\\n    const keyup = (event: KeyboardEvent) => {\\n      this.keyStates.set(event.code, false);\\n    }\\n    document.addEventListener(\'keyup\', keyup);\\n\\n    const mousedown = () => {\\n      document.body.requestPointerLock();\\n    }\\n    this.container.addEventListener(\'mousedown\', mousedown);\\n\\n    const mouseup = () => {\\n      this.shoot.emit();\\n    }\\n    document.body.addEventListener(\'mouseup\', mouseup);\\n\\n    // rotation\\n    const mousemove = (event: MouseEvent) => {\\n      if (document.pointerLockElement === document.body) {\\n        camera.rotation.y -= event.movementX / this.rotatefactor;\\n        camera.rotation.x -= event.movementY / this.rotatefactor;\\n      }\\n    }\\n    document.body.addEventListener(\'mousemove\', mousemove);\\n\\n    this.cleanup = () => {\\n      document.exitPointerLock();\\n      document.removeEventListener(\'keydown\', keydown);\\n      document.removeEventListener(\'keyup\', keyup);\\n      this.container.removeEventListener(\'mousedown\', mousedown);\\n      document.body.removeEventListener(\'mouseup\', mouseup);\\n      document.body.removeEventListener(\'mousemove\', mousemove);\\n    }\\n  }\\n\\n  private getForwardVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n\\n    return playerDirection;\\n  }\\n\\n  private getSideVector(): Vector3 {\\n    const playerDirection = new Vector3()\\n\\n    this.camera.getWorldDirection(playerDirection);\\n    playerDirection.y = 0;\\n    playerDirection.normalize();\\n    playerDirection.cross(this.camera.up);\\n\\n    return playerDirection;\\n  }\\n\\n  private playerVelocity = new Vector3();\\n\\n  private updateVelocity(deltaTime: number) {\\n    const speedDelta = deltaTime * 8;\\n\\n    if (this.keyStates.get(\'KeyW\') || this.keyStates.get(\'ArrowUp\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(speedDelta));\\n    }\\n\\n    if (this.keyStates.get(\'KeyS\') || this.keyStates.get(\'ArrowDown\')) {\\n      this.playerVelocity.add(this.getForwardVector().multiplyScalar(-speedDelta));\\n    }\\n\\n    //if (this.keyStates.get(\'KeyA\' || this.keyStates.get(\'ArrowLeft\'))) {\\n      //this.playerVelocity.add(this.getSideVector().multiplyScalar(-speedDelta));\\n    //}\\n\\n    if (this.keyStates.get(\'KeyD\') || this.keyStates.get(\'ArrowRight\')) {\\n      this.playerVelocity.add(this.getSideVector().multiplyScalar(speedDelta));\\n    }\\n  }\\n\\n  private moveCamera(deltaTime: number) {\\n    // slow after mouse up\\n    let damping = Math.exp(-3 * deltaTime) - 1;\\n\\n    this.playerVelocity.addScaledVector(this.playerVelocity, damping);\\n\\n    const deltaPosition = this.playerVelocity.clone().multiplyScalar(deltaTime);\\n    if (this.camera) {\\n      this.camera.position.add(deltaPosition);\\n      this.camera.position.y = this.viewerheight;\\n    }\\n  }\\n\\n  animate({ delta }: NgtRender) {\\n    this.updateVelocity(delta * this.movespeed);  // check for input\\n    this.moveCamera(delta); // move player\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./kinematics.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"cd","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":31,"jsdoctags":[{"name":"cd","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"templateData":"<div style=\\"height:100vh\\">\\n  <ngt-canvas (created)=\\"created($event)\\" [camera]=\\"{ position: [0, 0, 0], fov: 45 }\\"\\n              [shadows]=\\"true\\"\\n              [scene]=\\"{ background: \'gray\' | color }\\"\\n              [initialLog]=\\"true\\">\\n\\n    <ngt-physics>\\n      <ngt-cannon-debug [disabled]=\\"true\\" [scale]=\\"1.1\\" color=\\"red\\">\\n\\n        <ngt-mesh ngtPhysicPlane [name]=\\"\'plane\'\\"\\n                  [receiveShadow]=\\"true\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\n          <ngt-plane-geometry [args]=\\"[100, 100]\\"></ngt-plane-geometry>\\n          <ngt-mesh-standard-material [parameters]=\\"{ color: \'#777777\' | color }\\"></ngt-mesh-standard-material>\\n        </ngt-mesh>\\n\\n        <ngt-mesh #player=\\"ngtPhysicSphere\\" ngtPhysicSphere (animateReady)=\\"tick()\\">\\n          <ngt-sphere-geometry></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material></ngt-mesh-standard-material>\\n\\n          \x3c!--have the light above the players head and follow the player--\x3e\\n          <ngt-point-light [args]=\\"[\'white\', 2, 100]\\" [position]=\\"[0, 2, 0]\\" [castShadow]=\\"true\\">\\n          </ngt-point-light>\\n        </ngt-mesh>\\n\\n        <ngt-mesh *ngFor=\\"let item of cubes\\" ngtPhysicBox [getPhysicProps]=\\"getCubeProps\\"\\n                  [position]=\\"item.position\\" [castShadow]=\\"true\\">\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-standard-material [parameters]=\\"{ color: item.color | color }\\"></ngt-mesh-standard-material>\\n        </ngt-mesh>\\n\\n        <ngt-mesh *ngFor=\\"let item of projectiles\\" ngtPhysicSphere [getPhysicProps]=\\"getBallProps\\"\\n                  [position]=\\"item.position\\" [castShadow]=\\"true\\">\\n          <ngt-sphere-geometry [args]=\\"[ballRadius]\\"></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material [parameters]=\\"{ color: \'yellow\' | color }\\"></ngt-mesh-standard-material>\\n        </ngt-mesh>\\n\\n      </ngt-cannon-debug>\\n    </ngt-physics>\\n\\n    <first-person-controls [movespeed]=\\"2\\" [viewerheight]=\\"1\\" (shoot)=\\"shoot()\\"></first-person-controls>\\n    <ngt-stats></ngt-stats>\\n  </ngt-canvas>\\n</div>\\n"},{"name":"KInstancedSpheresComponent","id":"component-KInstancedSpheresComponent-4253538dc33c8998540d562a9d7d1b202b2d0abc4b48719049951b44457549dcf72d23a04ad445ea67296a1733d130d4b9cd88a093094058cb50ea4313932236","file":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-spheres","styleUrls":[],"styles":[],"template":"<ngt-instanced-mesh\\n    ngtPhysicSphere\\n    [castShadow]=\\"true\\"\\n    [receiveShadow]=\\"true\\"\\n    [getPhysicProps]=\\"getInstancedProps\\"\\n    [args]=\\"[number]\\"\\n>\\n    <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\n        <ngt-instanced-buffer-attribute\\n            attach=\\"color\\"\\n            [args]=\\"[colors, 3]\\"\\n        ></ngt-instanced-buffer-attribute>\\n    </ngt-sphere-geometry>\\n    <ngt-mesh-phong-material\\n        [parameters]=\\"{ vertexColors: true }\\"\\n    ></ngt-mesh-phong-material>\\n</ngt-instanced-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"number","defaultValue":"100","deprecated":false,"deprecationMessage":"","line":158,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"colors","deprecated":false,"deprecationMessage":"","type":"Float32Array","optional":false,"description":"","line":160}],"methodsClass":[{"name":"getInstancedProps","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SphereProps","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { BoxProps, SphereProps } from \'@angular-three/cannon\';\\r\\nimport {\\r\\n    NgtPhysicBox\\r\\n} from \'@angular-three/cannon/bodies\';\\r\\nimport {\\r\\n \\r\\n    NgtEuler,\\r\\n    NgtRender,\\r\\n    NgtTriplet,\\r\\n    NgtVector3,\\r\\n} from \'@angular-three/core\';\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgModule,\\r\\n} from \'@angular/core\';\\r\\n\\r\\n// @ts-ignore\\r\\nimport niceColors from \'nice-color-palettes\';\\r\\nimport * as THREE from \'three\';\\r\\n\\r\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-kinematic-cube\',\\r\\n    template: `\\r\\n        <ngt-canvas [shadows]=\\"true\\" [camera]=\\"{ position: [0, -12, 16] }\\" style=\\"height:100vh; width: 100vw;\\">\\r\\n            <ngt-stats></ngt-stats>\\r\\n\\r\\n            <ngt-hemisphere-light [intensity]=\\"0.35\\"></ngt-hemisphere-light>\\r\\n            <ngt-spot-light\\r\\n                [position]=\\"[30, 0, 30]\\"\\r\\n                [intensity]=\\"2\\"\\r\\n                [shadow]=\\"{ mapSize: [256, 256] | vector2 }\\"\\r\\n                [castShadow]=\\"true\\"\\r\\n                [args]=\\"[undefined, undefined, undefined, 0.3, 1]\\"\\r\\n            ></ngt-spot-light>\\r\\n            <ngt-point-light\\r\\n                [position]=\\"[-30, 0, -30]\\"\\r\\n                [intensity]=\\"0.5\\"\\r\\n            ></ngt-point-light>\\r\\n\\r\\n            <ngt-physics [gravity]=\\"[0, 0, -30]\\">\\r\\n                <demo-plane [color]=\\"niceColor[4]\\"></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[1]\\"\\r\\n                    [position]=\\"[-6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, 0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[2]\\"\\r\\n                    [position]=\\"[6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, -0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[3]\\"\\r\\n                    [position]=\\"[0, 6, 0]\\"\\r\\n                    [rotation]=\\"[0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[0]\\"\\r\\n                    [position]=\\"[0, -6, 0]\\"\\r\\n                    [rotation]=\\"[-0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n\\r\\n                <demo-box></demo-box>\\r\\n                <demo-spheres [number]=\\"100\\"></demo-spheres>\\r\\n            </ngt-physics>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KinematicCubeComponent {\\r\\n    niceColor = niceColor;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-plane\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicPlane\\r\\n            [rotation]=\\"rotation\\"\\r\\n            [position]=\\"position\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n        >\\r\\n            <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ color }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KPlaneComponent {\\r\\n    @Input() color?: THREE.ColorRepresentation;\\r\\n    @Input() position?: NgtVector3;\\r\\n    @Input() rotation?: NgtEuler;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-box\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicBox\\r\\n            #physicBox=\\"ngtPhysicBox\\"\\r\\n            [getPhysicProps]=\\"getBoxProps\\"\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\r\\n        >\\r\\n            <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\r\\n            <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KBoxComponent {\\r\\n    boxSize: NgtTriplet = [4, 4, 4];\\r\\n\\r\\n    getBoxProps = (): BoxProps => ({\\r\\n        mass: 1,\\r\\n        type: \'Kinematic\',\\r\\n        args: this.boxSize,\\r\\n    });\\r\\n\\r\\n    onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\r\\n        const t = clock.getElapsedTime();\\r\\n        api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\r\\n        api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\r\\n    }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-spheres\',\\r\\n    template: `\\r\\n        <ngt-instanced-mesh\\r\\n            ngtPhysicSphere\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            [getPhysicProps]=\\"getInstancedProps\\"\\r\\n            [args]=\\"[number]\\"\\r\\n        >\\r\\n            <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\r\\n                <ngt-instanced-buffer-attribute\\r\\n                    attach=\\"color\\"\\r\\n                    [args]=\\"[colors, 3]\\"\\r\\n                ></ngt-instanced-buffer-attribute>\\r\\n            </ngt-sphere-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ vertexColors: true }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-instanced-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KInstancedSpheresComponent {\\r\\n    @Input() number = 100;\\r\\n\\r\\n    colors!: Float32Array;\\r\\n\\r\\n    ngOnInit() {\\r\\n        this.colors = new Float32Array(this.number * 3);\\r\\n        const color = new THREE.Color();\\r\\n\\r\\n        for (let i = 0; i < this.number; i++) {\\r\\n            color\\r\\n                .set(niceColor[Math.floor(Math.random() * 5)])\\r\\n                .convertSRGBToLinear()\\r\\n                .toArray(this.colors, i * 3);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    getInstancedProps(index: number) {\\r\\n        return {\\r\\n            args: [1],\\r\\n            mass: 1,\\r\\n            position: [\\r\\n                Math.random() - 0.5,\\r\\n                Math.random() - 0.5,\\r\\n                index * 2,\\r\\n            ] as SphereProps[\'position\'],\\r\\n        } as SphereProps;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"KPlaneComponent","id":"component-KPlaneComponent-4253538dc33c8998540d562a9d7d1b202b2d0abc4b48719049951b44457549dcf72d23a04ad445ea67296a1733d130d4b9cd88a093094058cb50ea4313932236","file":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-plane","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicPlane\\n    [rotation]=\\"rotation\\"\\n    [position]=\\"position\\"\\n    [receiveShadow]=\\"true\\"\\n>\\n    <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n    <ngt-mesh-phong-material\\n        [parameters]=\\"{ color }\\"\\n    ></ngt-mesh-phong-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","line":96,"type":"THREE.ColorRepresentation","decorators":[]},{"name":"position","deprecated":false,"deprecationMessage":"","line":97,"type":"NgtVector3","decorators":[]},{"name":"rotation","deprecated":false,"deprecationMessage":"","line":98,"type":"NgtEuler","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { BoxProps, SphereProps } from \'@angular-three/cannon\';\\r\\nimport {\\r\\n    NgtPhysicBox\\r\\n} from \'@angular-three/cannon/bodies\';\\r\\nimport {\\r\\n \\r\\n    NgtEuler,\\r\\n    NgtRender,\\r\\n    NgtTriplet,\\r\\n    NgtVector3,\\r\\n} from \'@angular-three/core\';\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgModule,\\r\\n} from \'@angular/core\';\\r\\n\\r\\n// @ts-ignore\\r\\nimport niceColors from \'nice-color-palettes\';\\r\\nimport * as THREE from \'three\';\\r\\n\\r\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-kinematic-cube\',\\r\\n    template: `\\r\\n        <ngt-canvas [shadows]=\\"true\\" [camera]=\\"{ position: [0, -12, 16] }\\" style=\\"height:100vh; width: 100vw;\\">\\r\\n            <ngt-stats></ngt-stats>\\r\\n\\r\\n            <ngt-hemisphere-light [intensity]=\\"0.35\\"></ngt-hemisphere-light>\\r\\n            <ngt-spot-light\\r\\n                [position]=\\"[30, 0, 30]\\"\\r\\n                [intensity]=\\"2\\"\\r\\n                [shadow]=\\"{ mapSize: [256, 256] | vector2 }\\"\\r\\n                [castShadow]=\\"true\\"\\r\\n                [args]=\\"[undefined, undefined, undefined, 0.3, 1]\\"\\r\\n            ></ngt-spot-light>\\r\\n            <ngt-point-light\\r\\n                [position]=\\"[-30, 0, -30]\\"\\r\\n                [intensity]=\\"0.5\\"\\r\\n            ></ngt-point-light>\\r\\n\\r\\n            <ngt-physics [gravity]=\\"[0, 0, -30]\\">\\r\\n                <demo-plane [color]=\\"niceColor[4]\\"></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[1]\\"\\r\\n                    [position]=\\"[-6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, 0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[2]\\"\\r\\n                    [position]=\\"[6, 0, 0]\\"\\r\\n                    [rotation]=\\"[0, -0.9, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[3]\\"\\r\\n                    [position]=\\"[0, 6, 0]\\"\\r\\n                    [rotation]=\\"[0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n                <demo-plane\\r\\n                    [color]=\\"niceColor[0]\\"\\r\\n                    [position]=\\"[0, -6, 0]\\"\\r\\n                    [rotation]=\\"[-0.9, 0, 0]\\"\\r\\n                ></demo-plane>\\r\\n\\r\\n                <demo-box></demo-box>\\r\\n                <demo-spheres [number]=\\"100\\"></demo-spheres>\\r\\n            </ngt-physics>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KinematicCubeComponent {\\r\\n    niceColor = niceColor;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-plane\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicPlane\\r\\n            [rotation]=\\"rotation\\"\\r\\n            [position]=\\"position\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n        >\\r\\n            <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ color }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KPlaneComponent {\\r\\n    @Input() color?: THREE.ColorRepresentation;\\r\\n    @Input() position?: NgtVector3;\\r\\n    @Input() rotation?: NgtEuler;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-box\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            ngtPhysicBox\\r\\n            #physicBox=\\"ngtPhysicBox\\"\\r\\n            [getPhysicProps]=\\"getBoxProps\\"\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\r\\n        >\\r\\n            <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\r\\n            <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KBoxComponent {\\r\\n    boxSize: NgtTriplet = [4, 4, 4];\\r\\n\\r\\n    getBoxProps = (): BoxProps => ({\\r\\n        mass: 1,\\r\\n        type: \'Kinematic\',\\r\\n        args: this.boxSize,\\r\\n    });\\r\\n\\r\\n    onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\r\\n        const t = clock.getElapsedTime();\\r\\n        api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\r\\n        api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\r\\n    }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-spheres\',\\r\\n    template: `\\r\\n        <ngt-instanced-mesh\\r\\n            ngtPhysicSphere\\r\\n            [castShadow]=\\"true\\"\\r\\n            [receiveShadow]=\\"true\\"\\r\\n            [getPhysicProps]=\\"getInstancedProps\\"\\r\\n            [args]=\\"[number]\\"\\r\\n        >\\r\\n            <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\r\\n                <ngt-instanced-buffer-attribute\\r\\n                    attach=\\"color\\"\\r\\n                    [args]=\\"[colors, 3]\\"\\r\\n                ></ngt-instanced-buffer-attribute>\\r\\n            </ngt-sphere-geometry>\\r\\n            <ngt-mesh-phong-material\\r\\n                [parameters]=\\"{ vertexColors: true }\\"\\r\\n            ></ngt-mesh-phong-material>\\r\\n        </ngt-instanced-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class KInstancedSpheresComponent {\\r\\n    @Input() number = 100;\\r\\n\\r\\n    colors!: Float32Array;\\r\\n\\r\\n    ngOnInit() {\\r\\n        this.colors = new Float32Array(this.number * 3);\\r\\n        const color = new THREE.Color();\\r\\n\\r\\n        for (let i = 0; i < this.number; i++) {\\r\\n            color\\r\\n                .set(niceColor[Math.floor(Math.random() * 5)])\\r\\n                .convertSRGBToLinear()\\r\\n                .toArray(this.colors, i * 3);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    getInstancedProps(index: number) {\\r\\n        return {\\r\\n            args: [1],\\r\\n            mass: 1,\\r\\n            position: [\\r\\n                Math.random() - 0.5,\\r\\n                Math.random() - 0.5,\\r\\n                index * 2,\\r\\n            ] as SphereProps[\'position\'],\\r\\n        } as SphereProps;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"MarkerComponent","id":"component-MarkerComponent-d8922a49c094837f7fd9b17b17f761d85d7c18ce540426f2877b87336ce5d73447f2f4ea8b8143c2202cfd109255096418a275cd81c2d256e6c3e3bf06995c22","file":"src/app/threejs-basic/earth-marker/earth-marker.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-marker","styleUrls":[],"styles":[],"template":"<ngt-soba-html\\n    [transform]=\\"true\\"\\n    [rotation]=\\"rotation\\"\\n    [position]=\\"position\\"\\n    [occlude]=\\"true\\"\\n    (occludeChange)=\\"onOccludeChange($event)\\"\\n    [parentStyle]=\\"{\\n        transition: \'all 0.2s\',\\n        opacity: hidden ? \'0\' : \'1\'\\n    }\\"\\n>\\n<fa-icon [icon]=\\"faMarker\\" [styles]=\\"{ color: \'red\' }\\"></fa-icon>\\n</ngt-soba-html>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"color","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":115,"type":"string","decorators":[]},{"name":"position","deprecated":false,"deprecationMessage":"","line":113,"type":"NgtVector3","decorators":[]},{"name":"rotation","deprecated":false,"deprecationMessage":"","line":112,"type":"NgtEuler","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"faMarker","defaultValue":"faLocationArrow","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":119},{"name":"hidden","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":117}],"methodsClass":[{"name":"onOccludeChange","args":[{"name":"occluded","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"occluded","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n    NgtEuler,\\r\\n    NgtVector3,\\r\\n} from \'@angular-three/core\';\\r\\n\\r\\nimport { NgtGLTFLoader } from \'@angular-three/soba/loaders\';\\r\\n\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgZone,\\r\\n} from \'@angular/core\';\\r\\nimport { faLocationArrow } from \'@fortawesome/free-solid-svg-icons/faLocationArrow\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-earth-marker\',\\r\\n    template: `\\r\\n\\r\\n        <ngt-canvas [initialLog]=\\"true\\" [dpr]=\\"[1, 2]\\" [camera]=\\"{ fov: 50 }\\" style=\\"height:100vh; width: 100vw;\\"  >\\r\\n\\r\\n        <ngt-soba-stage [controls]=\\"ngtSobaOrbitControls.controls\\" >\\r\\n                <demo-earth ></demo-earth>\\r\\n            </ngt-soba-stage>\\r\\n\\r\\n            <ngt-soba-orbit-controls\\r\\n                #ngtSobaOrbitControls=\\"ngtSobaOrbitControls\\"\\r\\n                (ready)=\\"$event.autoRotate = true\\"\\r\\n            ></ngt-soba-orbit-controls>\\r\\n        </ngt-canvas>\\r\\n\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class EarthMarkerComponent {\\r\\n    \\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-earth\',\\r\\n    template: `\\r\\n        <ng-container *ngIf=\\"earth$ | async as earth\\"  >\\r\\n            <ngt-group [dispose]=\\"null\\">\\r\\n                <ngt-group\\r\\n                    [rotation]=\\"[-90 | radian, 0, 0.05]\\"\\r\\n                    [scale]=\\"[100, 100, 100]\\"\\r\\n                >\\r\\n                    <ngt-mesh\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_Lampd_Ice_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'Lampd_Ice\']\\"\\r\\n                    ></ngt-mesh>\\r\\n                    <ngt-mesh\\r\\n                        (pointerover)=\\"$event.stopPropagation()\\"\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_watr_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'watr\']\\"\\r\\n                        (ready)=\\"$any($event.material).roughness = 0\\"\\r\\n                    ></ngt-mesh>\\r\\n                    <ngt-mesh\\r\\n                        [geometry]=\\"\\r\\n                            $any(earth.nodes[\'URF-Height_Lampd_0\']).geometry\\r\\n                        \\"\\r\\n                        [material]=\\"earth.materials[\'Lampd\']\\"\\r\\n                    >\\r\\n                        <demo-marker\\r\\n                            [rotation]=\\"[0, 90 | radian, 0]\\"\\r\\n                            [position]=\\"[0, 1.3, 0]\\"\\r\\n                            color=\\"orange\\"\\r\\n                        ></demo-marker>\\r\\n\\r\\n                        <demo-marker\\r\\n                            [rotation]=\\"[0, 90 | radian, 90 | radian]\\"\\r\\n                            [position]=\\"[0, 0, 1.3]\\"\\r\\n                            color=\\"indianred\\"\\r\\n                        ></demo-marker>\\r\\n                    </ngt-mesh>\\r\\n                </ngt-group>\\r\\n            </ngt-group>\\r\\n        </ng-container>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class EarthComponent {\\r\\n    earth$ = this.gltfLoader.load(\'assets/earth.gltf\');\\r\\n\\r\\n    constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-marker\',\\r\\n    template: `\\r\\n        <ngt-soba-html\\r\\n            [transform]=\\"true\\"\\r\\n            [rotation]=\\"rotation\\"\\r\\n            [position]=\\"position\\"\\r\\n            [occlude]=\\"true\\"\\r\\n            (occludeChange)=\\"onOccludeChange($event)\\"\\r\\n            [parentStyle]=\\"{\\r\\n                transition: \'all 0.2s\',\\r\\n                opacity: hidden ? \'0\' : \'1\'\\r\\n            }\\"\\r\\n        >\\r\\n        <fa-icon [icon]=\\"faMarker\\" [styles]=\\"{ color: \'red\' }\\"></fa-icon>\\r\\n        </ngt-soba-html>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class MarkerComponent {\\r\\n    @Input() rotation?: NgtEuler;\\r\\n    @Input() position?: NgtVector3;\\r\\n\\r\\n    @Input() color = \'\';\\r\\n\\r\\n    hidden = false;\\r\\n    \\r\\n    faMarker = faLocationArrow;\\r\\n    constructor(private zone: NgZone) {}\\r\\n\\r\\n    get parentStyle(): Partial<CSSStyleDeclaration> {\\r\\n        return {\\r\\n            transition: \'all 0.2s\',\\r\\n            opacity: this.hidden ? \'0\' : \'1\',\\r\\n            transform: `scale(${this.hidden ? 0.25 : 1})`,\\r\\n        };\\r\\n    }\\r\\n\\r\\n    onOccludeChange(occluded: boolean) {\\r\\n        this.zone.run(() => {\\r\\n            this.hidden = occluded;\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":""}],"line":119,"jsdoctags":[{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"parentStyle":{"name":"parentStyle","getSignature":{"name":"parentStyle","type":"","returnType":"Partial<CSSStyleDeclaration>","line":122}}}},{"name":"MarmiRxstateComponent","id":"component-MarmiRxstateComponent-672e9ebd4f7f37a6c4ebc07274697505264ce86473a906a77657dd527ecf44052774d6ab9621e9c63703bbe9895d14d6c0b6ce603356e61f7049cdfc7987e434","file":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"RxState"}],"selector":"app-marmi-rxstate","styleUrls":["./marmi-rxstate.component.scss"],"styles":[],"templateUrl":["./marmi-rxstate.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"hasNext$","defaultValue":"this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => {\\n      console.count(\'compute hasNext...\');\\n      return recipeIndex + 1 < recipes.length;\\n    })\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"hasPrevious$","defaultValue":"this._state\\n    .select(\'recipeIndex\')\\n    .pipe(select(map((index) => index > 0)))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"recipe$","defaultValue":"this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => recipes?.[recipeIndex])\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"recipes$","defaultValue":"this._state.select(\'recipes\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40}],"methodsClass":[{"name":"next","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":""},{"name":"previous","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":""},{"name":"reset","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState, select, selectSlice } from \'@rx-angular/state\';\\nimport { map } from \'rxjs\';\\nimport { UserdataService } from \'../../service/userdata.service\';\\nimport { Recipe } from \'../receipe\';\\n\\nexport interface State {\\n  recipes: Recipe[];\\n  recipeIndex: number;\\n}\\n\\n@Component({\\n  selector: \'app-marmi-rxstate\',\\n  templateUrl: \'./marmi-rxstate.component.html\',\\n  styleUrls: [\'./marmi-rxstate.component.scss\'],  \\n  providers: [RxState],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class MarmiRxstateComponent {\\n  // 👇 Using select/selectslice create observables for using in template for display\\n  recipe$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => recipes?.[recipeIndex])\\n  );\\n  // 👇 create boolean observable for use in template\\n  hasPrevious$ = this._state\\n    .select(\'recipeIndex\')\\n    .pipe(select(map((index) => index > 0)));\\n\\n  // 👇 create boolean observable for use in template\\n  hasNext$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => {\\n      console.count(\'compute hasNext...\');\\n      return recipeIndex + 1 < recipes.length;\\n    })\\n  );\\n  // 👇 create store in template \\n  recipes$ = this._state.select(\'recipes\');\\n\\n  constructor(\\n    private _recipeRepository: UserdataService,\\n    private _state: RxState<State>\\n  ) {\\n    // 👇 set command initializes the store state\\n    this._state.set({ recipeIndex: 0 });\\n    // 👇 Data from template/service is connected to the store state recepes\\n    this._state.connect(\'recipes\', this._recipeRepository.getRecipes());\\n  }\\n\\n  // 👇 set command directly interacts with store for no side effect\\n  next() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex + 1 }));\\n  }\\n\\n  previous() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex - 1 }));\\n  }\\n\\n  reset() {\\n    this._state.set({ recipeIndex: 0 });\\n  }\\n}\\n\\n;\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-recipe-preview\',\\n  template: `<wm-card *ngIf=\\"recipe\\" [pictureUri]=\\"recipe.pictureUri\\">\\n    <h2 data-role=\\"recipe-name\\">{{ recipe.name }}</h2>\\n    <ng-content></ng-content>\\n  </wm-card>`,\\n  styles: [\\n    `\\n      h2 {\\n        font-size: 1.2em;\\n        text-align: center;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n})\\nexport class RecipePreviewComponent {\\n  @Input() recipe?: Recipe;\\n}\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-card\',\\n  template: ` <img *ngIf=\\"pictureUri\\" class=\\"picture\\" [src]=\\"pictureUri\\" />\\n    <div class=\\"content\\">\\n      <ng-content></ng-content>\\n    </div>`,\\n  styles: [\\n    `\\n      :host {\\n        display: block;\\n        border-radius: 10px;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n        overflow: hidden;\\n        text-align: left;\\n        width: 300px;\\n      }\\n      .picture {\\n        object-fit: cover;\\n        height: 300px;\\n        width: 100%;\\n      }\\n      .content {\\n        margin: 10px;\\n      }\\n    `,\\n  ],\\n})\\nexport class CardComponent {\\n  @Input() pictureUri?: string;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\r\\n    text-align: center;\\r\\n  }\\r\\n  .container {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n  }","styleUrl":"./marmi-rxstate.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_recipeRepository","type":"UserdataService","deprecated":false,"deprecationMessage":""},{"name":"_state","type":"RxState<State>","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"_recipeRepository","type":"UserdataService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_state","type":"RxState<State>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"\x3c!-- Top navigation buttons. --\x3e\\n<ng-container *ngTemplateOutlet=\\"navigation\\"></ng-container>\\n<div class=\\"container\\">\\n  <wm-recipe-preview *ngIf=\\"recipe$ | async as recipe\\" [recipe]=\\"recipe\\">\\n  </wm-recipe-preview>\\n</div>\\n\x3c!-- Bottom navigation buttons. --\x3e\\n<ng-container *ngTemplateOutlet=\\"navigation\\"></ng-container>\\n\x3c!-- Navigation actions template. --\x3e\\n<ng-template #navigation>\\n  <div *ngIf=\\"recipes$ | async\\">\\n    <button mat-button color=\\"warn\\" (click)=\\"reset()\\">RESET</button>\\n    <button\\n      [disabled]=\\"(hasPrevious$ | async) !== true\\"\\n      mat-button\\n      (click)=\\"previous()\\"\\n    >\\n      PREVIOUS\\n    </button>\\n    <button\\n      [disabled]=\\"(hasNext$ | async) !== true\\"\\n      mat-button\\n      (click)=\\"next()\\"\\n    >\\n      NEXT\\n    </button>\\n  </div>\\n</ng-template>"},{"name":"MiscHtmlComponent","id":"component-MiscHtmlComponent-13fcad5547781b56861cbd6748b563797230e9866b44d810e6001ead5260103ef2bea4c6c4976b3912f411b6033f182d173c115b719b1e1843ef34f18ac255b1","file":"src/app/threejs-soba/misc-html/misc-html.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-misc-html","styleUrls":["./misc-html.component.scss"],"styles":[],"templateUrl":["./misc-html.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12},{"name":"cameraPosition","defaultValue":"[-20, 20, -20]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":11},{"name":"color","defaultValue":"\'palegreen\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"distanceFactor","defaultValue":"30","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":24},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"parentClass","defaultValue":"\'html-story-block margin300\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23},{"name":"transform","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"onAnimate","args":[{"name":"object","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"object","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-misc-html\',\\n  templateUrl: \'./misc-html.component.html\',\\n  styleUrls: [\'./misc-html.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class MiscHtmlComponent  {\\n  cameraPosition: [number, number, number] = [-20, 20, -20];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  //distanceFactor= 30;\\n  //parentClass= \'html-story-block\';\\n\\n  color= \'palegreen\';\\n  transform= true;\\n  parentClass=\'html-story-block margin300\';\\n  distanceFactor= 30;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  onAnimate(object: THREE.Object3D) {\\n    object.rotation.y += 0.01;\\n}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./misc-html.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":24},"templateData":"<ngt-canvas\\r\\n  [shadows]=\\"true\\"\\r\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\r\\n  [scene]=\'{background: \\"black\\" | color}\'\\r\\n  style=\\"height:100vh; width: 100vw;\\"\\r\\n>\\r\\n  <ngt-stats></ngt-stats>\\r\\n\\r\\n  <ng-container *ngIf=\\"true\\">\\r\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\r\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\r\\n  </ng-container>\\r\\n\\r\\n  <ngt-soba-orbit-controls\\r\\n    *ngIf=\\"true\\"\\r\\n    [makeDefault]=\\"false\\"\\r\\n  ></ngt-soba-orbit-controls>\\r\\n\\r\\n  \x3c!--ngt-group (animateReady)=\\"onAnimate($event.object)\\">\\r\\n    <ngt-icosahedron-geometry #ngtGeometry=\\"ngtIcosahedronGeometry\\" [args]=\\"[2, 2]\\"></ngt-icosahedron-geometry>\\r\\n    <ngt-mesh-basic-material\\r\\n        #ngtMaterial=\\"ngtMeshBasicMaterial\\"\\r\\n        [parameters]=\\"{wireframe: true, color: \'hotpink\'}\\"\\r\\n    ></ngt-mesh-basic-material>\\r\\n    <ngt-mesh\\r\\n        [position]=\\"[3, 6, 4]\\"\\r\\n        [geometry]=\\"ngtGeometry.geometry\\"\\r\\n        [material]=\\"ngtMaterial.material\\"\\r\\n    >\\r\\n        <ngt-soba-html [distanceFactor]=\\"distanceFactor\\" [parentClass]=\\"parentClass\\">First</ngt-soba-html>\\r\\n    </ngt-mesh>\\r\\n    <ngt-mesh\\r\\n        [position]=\\"[10, 0, 10]\\"\\r\\n        [geometry]=\\"ngtGeometry.geometry\\"\\r\\n        [material]=\\"ngtMaterial.material\\"\\r\\n    >\\r\\n        <ngt-soba-html [distanceFactor]=\\"distanceFactor\\" [parentClass]=\\"parentClass\\">Second</ngt-soba-html>\\r\\n    </ngt-mesh>\\r\\n    <ngt-mesh\\r\\n        [position]=\\"[-20, 0, -20]\\"\\r\\n        [geometry]=\\"ngtGeometry.geometry\\"\\r\\n        [material]=\\"ngtMaterial.material\\"\\r\\n    >\\r\\n        <ngt-soba-html [distanceFactor]=\\"distanceFactor\\" [parentClass]=\\"parentClass\\">Third</ngt-soba-html>\\r\\n    </ngt-mesh>\\r\\n</ngt-group--\x3e\\r\\n<ngt-group (animateReady)=\\"onAnimate($event.object)\\">\\r\\n  <ngt-icosahedron-geometry #ngtGeometry=\\"ngtIcosahedronGeometry\\" [args]=\\"[2, 2]\\"></ngt-icosahedron-geometry>\\r\\n  <ngt-mesh-basic-material\\r\\n      #ngtMaterial=\\"ngtMeshBasicMaterial\\"\\r\\n      [parameters]=\\"{wireframe: true, color: color }\\"\\r\\n  ></ngt-mesh-basic-material>\\r\\n  <ngt-mesh\\r\\n      [position]=\\"[3, 6, 4]\\"\\r\\n      [geometry]=\\"ngtGeometry.geometry\\"\\r\\n      [material]=\\"ngtMaterial.material\\"\\r\\n  >\\r\\n      <ngt-soba-html [transform]=\\"transform\\" [distanceFactor]=\\"distanceFactor\\" [parentClass]=\\"parentClass\\">First</ngt-soba-html>\\r\\n  </ngt-mesh>\\r\\n  <ngt-mesh\\r\\n      [position]=\\"[10, 0, 10]\\"\\r\\n      [geometry]=\\"ngtGeometry.geometry\\"\\r\\n      [material]=\\"ngtMaterial.material\\"\\r\\n  >\\r\\n      <ngt-soba-html [transform]=\\"transform\\" [distanceFactor]=\\"distanceFactor\\" [parentClass]=\\"parentClass\\">Second</ngt-soba-html>\\r\\n  </ngt-mesh>\\r\\n  <ngt-mesh\\r\\n      [position]=\\"[-20, 0, -20]\\"\\r\\n      [geometry]=\\"ngtGeometry.geometry\\"\\r\\n      [material]=\\"ngtMaterial.material\\"\\r\\n  >\\r\\n      <ngt-soba-html [transform]=\\"transform\\" [distanceFactor]=\\"distanceFactor\\" [parentClass]=\\"parentClass\\"  [parentStyle]=\\"{background: color, fontSize: \'50px\', padding: \'10px 18px\', border: \'2px solid black\'}\\">Third</ngt-soba-html>\\r\\n  </ngt-mesh>\\r\\n  <ngt-soba-html\\r\\n      [sprite]=\\"true\\"\\r\\n      [transform]=\\"transform\\"\\r\\n      [distanceFactor]=\\"20\\"\\r\\n      [parentStyle]=\\"{background: color, fontSize: \'50px\', padding: \'10px 18px\', border: \'2px solid black\'}\\"\\r\\n      [position]=\\"[5, 15, 0]\\"\\r\\n  >\\r\\n      Transform Mode\\r\\n  </ngt-soba-html>\\r\\n</ngt-group>\\r\\n  \\r\\n</ngt-canvas>\\r\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"OptionsComponent","id":"component-OptionsComponent-e8d8d492ed0d6bbb32b38b755bbbb3695c15f1a4c8646c4bba8e375d7730af21df51c06f796f5e0e567792175ec8302b6ad728960f7d8641889c58cab863a4d5","file":"src/app/threejs-basic/options/options.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-options","styleUrls":["./options.component.scss"],"styles":[],"templateUrl":["./options.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"change3D","args":[{"name":"selected3D","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selected3D","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-options\',\\r\\n  templateUrl: \'./options.component.html\',\\r\\n  styleUrls: [\'./options.component.scss\']\\r\\n})\\r\\nexport class OptionsComponent implements OnInit {\\r\\n\\r\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n  }\\r\\n  change3D(selected3D: number) {\\r\\n    switch (selected3D) {\\r\\n      case 1:\\r\\n        this.router.navigate([\'cube\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 2:\\r\\n        this.router.navigate([\'spincube\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 3:\\r\\n        this.router.navigate([\'cubestate\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 4:\\r\\n        this.router.navigate([\'twospin\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 5:\\r\\n        this.router.navigate([\'cubelight\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 6:\\r\\n        this.router.navigate([\'cubespotlight\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 7:\\r\\n        this.router.navigate([\'cameracontrol\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 8:\\r\\n        this.router.navigate([\'kinematics\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 9:\\r\\n        this.router.navigate([\'marmi-rxstate\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 10:\\r\\n        this.router.navigate([\'rxstate\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 11:\\r\\n        this.router.navigate([\'rxstate-presenter\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 12:\\r\\n        this.router.navigate([\'demo-cube\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 13:\\r\\n        this.router.navigate([\'demo-keen\'], { relativeTo: this.route });\\r\\n        break;\\r\\n\\r\\n      case 14:\\r\\n        this.router.navigate([\'demo-kine\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 15:\\r\\n        this.router.navigate([\'demo-transform\'], { relativeTo: this.route });\\r\\n        break;\\r\\n        case 16:\\r\\n          this.router.navigate([\'demo-earth\'], { relativeTo: this.route });\\r\\n          break;\\r\\n      //soba\\r\\n      case 17:\\r\\n        this.router.navigate([\'soba-billboard\'], { relativeTo: this.route });\\r\\n        break;\\r\\n\\r\\n      //cannon\\r\\n      case 50:\\r\\n        this.router.navigate([\'cannon-start\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 51:\\r\\n        this.router.navigate([\'cannon-single\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 52:\\r\\n        this.router.navigate([\'cannon-kinematic\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 53:\\r\\n        this.router.navigate([\'cannon-compound\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 54:\\r\\n        this.router.navigate([\'cannon-clump\'], { relativeTo: this.route });\\r\\n        break;\\r\\n      case 55:\\r\\n        this.router.navigate([\'cannon-sphere\'], { relativeTo: this.route });\\r\\n        break;\\r\\n        case 56:\\r\\n          this.router.navigate([\'/3jssoba\']);\\r\\n          break;\\r\\n    }\\r\\n\\r\\n  }\\r\\n  goback() {\\r\\n    this.router.navigate([\'/beforelogin\'], { relativeTo: this.route });\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./options.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div fxLayout=\\"column\\" style=\\"background-color:  #FFFFB7; height:100vh;\\"  style=\\"overflow-x: auto;\\">\\r\\n    <div fxFlex=\\"grow\\"  fxLayoutAlign=\\"center center\\" style=\\"margin-top: 1em;\\">\\r\\n        <p>\\r\\n            <mat-chip-list class=\\"mat-chip-list-stacked\\" aria-label=\\"Fish selection\\">\\r\\n                <mat-chip color=\\"primary\\" selected>ThreeJs App</mat-chip>\\r\\n            </mat-chip-list>\\r\\n        </p>\\r\\n    </div>\\r\\n    <div fxLayout=\\"row\\" fxLayout.xs=\\"column\\" fxLayoutAlign.gt-sm=\\"center center\\" >\\r\\n        <div style=\\"background-color: FFFFB7; margin:5em 2em;\\" fxLayoutAlign=\\"center center\\"   >\\r\\n        \\r\\n            <mat-chip-list class=\\"mat-chip-list-stacked\\">\\r\\n                <button mat-raised-button color=\\"primary\\" fxFlexAlign=\\"center\\" style=\\"margin-bottom: 1em;\\"> Introduction</button>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(1)\\">Cube</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(2)\\">Spinning Cube</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(3)\\">Cube State</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(4)\\">Two Cubes</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(5)\\">Cube Lights</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(6)\\">Cube SpotLights</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(7)\\">Camera Control</mat-chip>\\r\\n            </mat-chip-list>\\r\\n        </div>    \\r\\n        <div style=\\"background-color: FFFFB7; margin:5em 2em;\\" fxLayoutAlign=\\"center center\\">\\r\\n        \\r\\n            <mat-chip-list class=\\"mat-chip-list-stacked\\">\\r\\n                <button mat-raised-button color=\\"primary\\" fxFlexAlign=\\"center\\" style=\\"margin-bottom: 1em;\\" > Examples Check</button>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(8)\\">kinematics</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(9)\\">Marmicode RxState</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(10)\\">RxStateExample</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(11)\\">RxStatePresenter</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(12)\\">Demo-cube</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(13)\\">Demo-keen</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(14)\\">Demo-kinematic</mat-chip>                \\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(15)\\">Demo-Transform</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(16)\\">Demo-Earth</mat-chip>\\r\\n            </mat-chip-list>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\"background-color: FFFFB7; margin:5em 2em;\\" fxLayoutAlign=\\"center center\\">\\r\\n        \\r\\n            <mat-chip-list class=\\"mat-chip-list-stacked\\">\\r\\n                <button mat-raised-button color=\\"primary\\" fxFlexAlign=\\"center\\" style=\\"margin-bottom: 1em;\\">Soba</button>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(17)\\">Abstractions</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(2)\\">Staging</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(3)\\">Cameras</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(4)\\">Controls</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(5)\\">Performances</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(6)\\">Misc</mat-chip>\\r\\n            </mat-chip-list>\\r\\n        </div>\\r\\n\\r\\n        <div style=\\"background-color: FFFFB7; margin:5em 2em;\\" fxLayoutAlign=\\"center center\\">\\r\\n        \\r\\n            <mat-chip-list class=\\"mat-chip-list-stacked\\">\\r\\n                <button mat-raised-button color=\\"primary\\" fxFlexAlign=\\"center\\" style=\\"margin-bottom: 1em;\\">Cannon</button>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(50)\\">fallingcube</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(51)\\">single Cube</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(52)\\">Cube kinematics</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(53)\\">compound</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(54)\\">clump</mat-chip>\\r\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(55)\\">sphere</mat-chip>\\r\\n                <mat-chip color=\\"primary\\" selected (click)=\\"change3D(56)\\">soba</mat-chip>\\r\\n            </mat-chip-list>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\r\\n    \\r\\n        </div>\\r\\n    \\r\\n        <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\r\\n          Back\\r\\n        </button>\\r\\n        <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\r\\n    \\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\"padding-bottom: 10px;\\">\\r\\n    \\r\\n      </div>\\r\\n</div>"},{"name":"OptionsComponent","id":"component-OptionsComponent-0bdf65c0edb3195bebbc216302f65c5ee3dc285465a47ffe7b220c1698bf60f264a99c23ae7daace02eeb507888f235772f9bf27f4d82fd917cbbed3ed0946b1-1","file":"src/app/threejs-soba/options/options.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-options","styleUrls":["./options.component.scss"],"styles":[],"templateUrl":["./options.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"change3D","args":[{"name":"selected3D","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selected3D","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-options\',\\n  templateUrl: \'./options.component.html\',\\n  styleUrls: [\'./options.component.scss\']\\n})\\nexport class OptionsComponent implements OnInit {\\n\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n  change3D(selected3D: number) {\\n    switch (selected3D) {\\n      case 1:\\n        this.router.navigate([\'abs-billboard\'], { relativeTo: this.route });\\n        break;\\n      case 2:\\n        this.router.navigate([\'abs-gizmo\'], { relativeTo: this.route });\\n        break;\\n      case 3:\\n        this.router.navigate([\'abs-gradient\'], { relativeTo: this.route });\\n        break;\\n      case 4:\\n        this.router.navigate([\'abs-line\'], { relativeTo: this.route });\\n        break;\\n      case 5:\\n        this.router.navigate([\'abs-text\'], { relativeTo: this.route });\\n        break;\\n      case 6:\\n        this.router.navigate([\'stage-shake\'], { relativeTo: this.route });\\n        break;\\n      case 7:\\n        this.router.navigate([\'stage-center\'], { relativeTo: this.route });\\n        break;\\n      case 8:\\n        this.router.navigate([\'stage-shadow\'], { relativeTo: this.route });\\n        break;\\n      case 9:\\n        this.router.navigate([\'stage-sky\'], { relativeTo: this.route });\\n        break;\\n      case 10:\\n        this.router.navigate([\'stage-spot\'], { relativeTo: this.route });\\n        break;\\n      case 11:\\n        this.router.navigate([\'stage-stage\'], { relativeTo: this.route });\\n        break;\\n      case 12:\\n        this.router.navigate([\'stage-stars\'], { relativeTo: this.route });\\n        break;\\n      case 13:\\n        this.router.navigate([\'cam-othro\'], { relativeTo: this.route });\\n        break;\\n      case 14:\\n        this.router.navigate([\'control-transform\'], { relativeTo: this.route });\\n        break;\\n\\n      case 15:\\n        this.router.navigate([\'control-lock\'], { relativeTo: this.route });\\n        break;\\n      case 16:\\n        this.router.navigate([\'perf-detailed\'], { relativeTo: this.route });\\n        break;\\n      case 17:\\n        this.router.navigate([\'misc-html\'], { relativeTo: this.route });\\n        break;\\n        case 18:\\n          this.router.navigate([\'stage-env\'], { relativeTo: this.route });\\n          break;\\n    }\\n\\n  }\\n  goback() {\\n    this.router.navigate([\'/beforelogin\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./options.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"OptionsComponent-1","templateData":"<div fxLayout=\\"column\\" style=\\"background-color:  #FFFFB7; height:100vh;\\"  style=\\"overflow-x: auto;\\">\\n    <div fxFlex=\\"grow\\"  fxLayoutAlign=\\"center center\\" style=\\"margin-top: 1em;\\">\\n        <p>\\n            <mat-chip-list class=\\"mat-chip-list-stacked\\" aria-label=\\"Fish selection\\">\\n                <mat-chip color=\\"primary\\" selected>ThreeJs App</mat-chip>\\n            </mat-chip-list>\\n        </p>\\n    </div>\\n    <div fxLayout=\\"row\\" fxLayout.xs=\\"column\\" fxLayoutAlign.gt-sm=\\"center center\\" >\\n        <div style=\\"background-color: FFFFB7; margin:5em 2em;\\" fxLayoutAlign=\\"center center\\"   >\\n        \\n            <mat-chip-list class=\\"mat-chip-list-stacked\\">\\n                <button mat-raised-button color=\\"primary\\" fxFlexAlign=\\"center\\" style=\\"margin-bottom: 1em;\\"> Abstraction</button>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(1)\\">Billboard</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(2)\\">Gizmo</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(3)\\">Gradient</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(4)\\">Line</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(5)\\">Text</mat-chip>\\n            </mat-chip-list>\\n        </div>    \\n        <div style=\\"background-color: FFFFB7; margin:5em 2em;\\" fxLayoutAlign=\\"center center\\">\\n        \\n            <mat-chip-list class=\\"mat-chip-list-stacked\\">\\n                <button mat-raised-button color=\\"primary\\" fxFlexAlign=\\"center\\" style=\\"margin-bottom: 1em;\\" > Staging</button>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(6)\\">Shake</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(7)\\">Center</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(8)\\">Shadow</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(18)\\">Env</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(9)\\">Sky</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(10)\\">Spot</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(11)\\">Stage</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(12)\\">Stars</mat-chip>      \\n            </mat-chip-list>\\n        </div>\\n\\n        <div style=\\"background-color: FFFFB7; margin:5em 2em;\\" fxLayoutAlign=\\"center center\\">\\n        \\n            <mat-chip-list class=\\"mat-chip-list-stacked\\">\\n                <button mat-raised-button color=\\"primary\\" fxFlexAlign=\\"center\\" style=\\"margin-bottom: 1em;\\">Others</button>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(13)\\">Othographic camera</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(14)\\">Transform Control</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(15)\\">Lock Control</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(16)\\">Detailed Performance</mat-chip>\\n                <mat-chip color=\\"accent\\" selected (click)=\\"change3D(17)\\">HTML Misc</mat-chip>\\n            </mat-chip-list>\\n        </div>\\n    </div>\\n\\n    <div>\\n        <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n    \\n        </div>\\n    \\n        <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\n          Back\\n        </button>\\n        <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n    \\n        </div>\\n      </div>\\n      <div style=\\"padding-bottom: 10px;\\">\\n    \\n      </div>\\n</div>"},{"name":"PageComponent","id":"component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064","file":"src/stories/page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-page","styleUrls":["./page.css"],"styles":[],"template":"<article>    <storybook-header\\n      [user]=\\"user\\"\\n      (onLogout)=\\"doLogout()\\"\\n      (onLogin)=\\"doLogin()\\"\\n      (onCreateAccount)=\\"doCreateAccount()\\"\\n    ></storybook-header>\\n    <section>\\n      <h2>Pages in Storybook</h2>\\n      <p>\\n        We recommend building UIs with a\\n        <a href=\\"https://componentdriven.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\n          <strong>component-driven</strong>\\n        </a>\\n        process starting with atomic components and ending with pages.\\n      </p>\\n      <p>\\n        Render pages with mock data. This makes it easy to build and review page states without\\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\\n        in Storybook:\\n      </p>\\n      <ul>\\n        <li>\\n          Use a higher-level connected component. Storybook helps you compose such data from the\\n          \\"args\\" of child component stories\\n        </li>\\n        <li>\\n          Assemble data in the page component from your services. You can mock these services out\\n          using Storybook.\\n        </li>\\n      </ul>\\n      <p>\\n        Get a guided tutorial on component-driven development at\\n        <a href=\\"https://storybook.js.org/tutorials/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\n          Storybook tutorials\\n        </a>\\n        . Read more in the\\n        <a href=\\"https://storybook.js.org/docs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"> docs </a>\\n        .\\n      </p>\\n      <div class=\\"tip-wrapper\\">\\n        <span class=\\"tip\\">Tip</span> Adjust the width of the canvas with the\\n        <svg width=\\"10\\" height=\\"10\\" viewBox=\\"0 0 12 12\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\n            <path\\n              d=\\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\\"\\n              id=\\"a\\"\\n              fill=\\"#999\\"\\n            />\\n          </g>\\n        </svg>\\n        Viewports addon in the toolbar\\n      </div>\\n    </section>\\n  </article>","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"user","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"User | null","optional":false,"description":"","line":64}],"methodsClass":[{"name":"doCreateAccount","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""},{"name":"doLogin","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"doLogout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { User } from \'./User\';\\n\\n@Component({\\n  selector: \'storybook-page\',\\n  template: `<article>\\n    <storybook-header\\n      [user]=\\"user\\"\\n      (onLogout)=\\"doLogout()\\"\\n      (onLogin)=\\"doLogin()\\"\\n      (onCreateAccount)=\\"doCreateAccount()\\"\\n    ></storybook-header>\\n    <section>\\n      <h2>Pages in Storybook</h2>\\n      <p>\\n        We recommend building UIs with a\\n        <a href=\\"https://componentdriven.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\n          <strong>component-driven</strong>\\n        </a>\\n        process starting with atomic components and ending with pages.\\n      </p>\\n      <p>\\n        Render pages with mock data. This makes it easy to build and review page states without\\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\\n        in Storybook:\\n      </p>\\n      <ul>\\n        <li>\\n          Use a higher-level connected component. Storybook helps you compose such data from the\\n          \\"args\\" of child component stories\\n        </li>\\n        <li>\\n          Assemble data in the page component from your services. You can mock these services out\\n          using Storybook.\\n        </li>\\n      </ul>\\n      <p>\\n        Get a guided tutorial on component-driven development at\\n        <a href=\\"https://storybook.js.org/tutorials/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\n          Storybook tutorials\\n        </a>\\n        . Read more in the\\n        <a href=\\"https://storybook.js.org/docs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"> docs </a>\\n        .\\n      </p>\\n      <div class=\\"tip-wrapper\\">\\n        <span class=\\"tip\\">Tip</span> Adjust the width of the canvas with the\\n        <svg width=\\"10\\" height=\\"10\\" viewBox=\\"0 0 12 12\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\n            <path\\n              d=\\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\\"\\n              id=\\"a\\"\\n              fill=\\"#999\\"\\n            />\\n          </g>\\n        </svg>\\n        Viewports addon in the toolbar\\n      </div>\\n    </section>\\n  </article>`,\\n  styleUrls: [\'./page.css\'],\\n})\\nexport default class PageComponent {\\n  user: User | null = null;\\n\\n  doLogout() {\\n    this.user = null;\\n  }\\n\\n  doLogin() {\\n    this.user = { name: \'Jane Doe\' };\\n  }\\n\\n  doCreateAccount() {\\n    this.user = { name: \'Jane Doe\' };\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"section {\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\n  font-size: 14px;\\n  line-height: 24px;\\n  padding: 48px 20px;\\n  margin: 0 auto;\\n  max-width: 600px;\\n  color: #333;\\n}\\n\\nsection h2 {\\n  font-weight: 900;\\n  font-size: 32px;\\n  line-height: 1;\\n  margin: 0 0 4px;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\nsection p {\\n  margin: 1em 0;\\n}\\n\\nsection a {\\n  text-decoration: none;\\n  color: #1ea7fd;\\n}\\n\\nsection ul {\\n  padding-left: 30px;\\n  margin: 1em 0;\\n}\\n\\nsection li {\\n  margin-bottom: 8px;\\n}\\n\\nsection .tip {\\n  display: inline-block;\\n  border-radius: 1em;\\n  font-size: 11px;\\n  line-height: 12px;\\n  font-weight: 700;\\n  background: #e7fdd8;\\n  color: #66bf3c;\\n  padding: 4px 12px;\\n  margin-right: 10px;\\n  vertical-align: top;\\n}\\n\\nsection .tip-wrapper {\\n  font-size: 13px;\\n  line-height: 20px;\\n  margin-top: 40px;\\n  margin-bottom: 40px;\\n}\\n\\nsection .tip-wrapper svg {\\n  display: inline-block;\\n  height: 12px;\\n  width: 12px;\\n  margin-right: 4px;\\n  vertical-align: top;\\n  margin-top: 3px;\\n}\\n\\nsection .tip-wrapper svg path {\\n  fill: #1ea7fd;\\n}\\n","styleUrl":"./page.css"}],"stylesData":""},{"name":"PerfDetailedComponent","id":"component-PerfDetailedComponent-6e150950a037c9d3284780b837cbdd89578e8e720db0204952ef8d5f5ef134703f5a4bf61b174cf8b2c15a05c967880d62f65634fc9e98d1f1f7f3fb8314d2fb","file":"src/app/threejs-soba/perf-detailed/perf-detailed.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-perf-detailed","styleUrls":["./perf-detailed.component.scss"],"styles":[],"templateUrl":["./perf-detailed.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":12},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"onOrbitControlsReady","args":[{"name":"controls","type":"OrbitControls","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"controls","type":"OrbitControls","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\nimport { OrbitControls } from \'three-stdlib\';\\n\\n@Component({\\n  selector: \'app-perf-detailed\',\\n  templateUrl: \'./perf-detailed.component.html\',\\n  styleUrls: [\'./perf-detailed.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class PerfDetailedComponent  {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n \\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  onOrbitControlsReady (controls: OrbitControls) {\\n    controls.enablePan = false;\\n    controls.enableRotate = false;\\n    controls.zoomSpeed = 0.5;\\n}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./perf-detailed.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":18},"templateData":"<ngt-canvas\\r\\n  [shadows]=\\"true\\"\\r\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\r\\n  [scene]=\'{background: \\"black\\" | color}\'\\r\\n  style=\\"height:100vh; width: 100vw;\\"\\r\\n>\\r\\n  <ngt-stats></ngt-stats>\\r\\n\\r\\n  <ng-container *ngIf=\\"true\\">\\r\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\r\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\r\\n  </ng-container>\\r\\n\\r\\n  <ngt-soba-orbit-controls\\r\\n    *ngIf=\\"false\\"\\r\\n    [makeDefault]=\\"false\\"\\r\\n  ></ngt-soba-orbit-controls>\\r\\n\\r\\n  <ngt-soba-detailed [distances]=\\"[50, 100, 150, 200, 250]\\">\\r\\n    <ngt-mesh [scale]=\\"[5, 5, 5]\\">\\r\\n        <ngt-icosahedron-geometry [args]=\\"[10, 10]\\"></ngt-icosahedron-geometry>\\r\\n        <ngt-mesh-basic-material [parameters]=\'{color: \\"turquoise\\", wireframe: true}\'></ngt-mesh-basic-material>\\r\\n    </ngt-mesh>\\r\\n\\r\\n    <ngt-mesh [scale]=\\"[5, 5, 5]\\">\\r\\n        <ngt-icosahedron-geometry [args]=\\"[10, 5]\\"></ngt-icosahedron-geometry>\\r\\n        <ngt-mesh-basic-material [parameters]=\'{color: \\"lightgreen\\", wireframe: true}\'></ngt-mesh-basic-material>\\r\\n    </ngt-mesh>\\r\\n\\r\\n    <ngt-mesh [scale]=\\"[5, 5, 5]\\">\\r\\n        <ngt-icosahedron-geometry [args]=\\"[10, 3]\\"></ngt-icosahedron-geometry>\\r\\n        <ngt-mesh-basic-material [parameters]=\'{color: \\"lightblue\\", wireframe: true}\'></ngt-mesh-basic-material>\\r\\n    </ngt-mesh>\\r\\n\\r\\n    <ngt-mesh [scale]=\\"[5, 5, 5]\\">\\r\\n        <ngt-icosahedron-geometry [args]=\\"[10, 2]\\"></ngt-icosahedron-geometry>\\r\\n        <ngt-mesh-basic-material [parameters]=\'{color: \\"hotpink\\", wireframe: true}\'></ngt-mesh-basic-material>\\r\\n    </ngt-mesh>\\r\\n\\r\\n    <ngt-mesh [scale]=\\"[5, 5, 5]\\">\\r\\n        <ngt-icosahedron-geometry [args]=\\"[10, 1]\\"></ngt-icosahedron-geometry>\\r\\n        <ngt-mesh-basic-material [parameters]=\'{color: \\"orange\\", wireframe: true}\'></ngt-mesh-basic-material>\\r\\n    </ngt-mesh>\\r\\n</ngt-soba-detailed>\\r\\n\\r\\n<ngt-soba-orbit-controls (ready)=\\"onOrbitControlsReady($event)\\"></ngt-soba-orbit-controls>\\r\\n  \\r\\n</ngt-canvas>\\r\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"PlaneComponent","id":"component-PlaneComponent-19dea74262f72e4f13a45db9a8e6829abc013af69d55c86d8820444b284cb44a3673195620f58f5eef6b0a1791a009a778a02dfdbd2ed3a951b989361f329afc","file":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-plane","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicPlane\\n    [rotation]=\\"rotation\\"\\n    [position]=\\"position\\"\\n    [receiveShadow]=\\"true\\"\\n>\\n    <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n    <ngt-mesh-phong-material\\n        [parameters]=\\"{ color }\\"\\n    ></ngt-mesh-phong-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","line":57,"type":"THREE.ColorRepresentation","decorators":[]},{"name":"position","deprecated":false,"deprecationMessage":"","line":58,"type":"NgtVector3","decorators":[]},{"name":"rotation","deprecated":false,"deprecationMessage":"","line":59,"type":"NgtEuler","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { BoxProps, SphereProps } from \'@angular-three/cannon\';\\nimport {\\n  ChangeDetectionStrategy,\\n  Input\\n} from \'@angular/core\';\\nimport {\\n  NgtEuler,\\n  NgtRender,\\n  NgtTriplet,\\n  NgtVector3\\n} from \'@angular-three/core\';\\n\\nimport {\\n  NgtPhysicBox\\n} from \'@angular-three/cannon/bodies\';\\n\\n// @ts-ignore\\nimport niceColors from \'nice-color-palettes\';\\nimport * as THREE from \'three\';\\nconst niceColor = niceColors[Math.floor(Math.random() * niceColors.length)];\\n\\n\\n@Component({\\n  selector: \'app-cannon-kinematic\',\\n  templateUrl: \'./cannon-kinematic.component.html\',\\n  styleUrls: [\'./cannon-kinematic.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonKinematicComponent implements OnInit {\\n  niceColor = niceColor;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n@Component({\\n  selector: \'app-plane\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [rotation]=\\"rotation\\"\\n          [position]=\\"position\\"\\n          [receiveShadow]=\\"true\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ color }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneComponent {\\n  @Input() color?: THREE.ColorRepresentation;\\n  @Input() position?: NgtVector3;\\n  @Input() rotation?: NgtEuler;\\n}\\n\\n@Component({\\n  selector: \'app-box\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicBox\\n          #physicBox=\\"ngtPhysicBox\\"\\n          [getPhysicProps]=\\"getBoxProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          (animateReady)=\\"onBoxAnimate($event.state, physicBox)\\"\\n      >\\n          <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n          <ngt-mesh-lambert-material></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BoxComponent {\\n  boxSize: NgtTriplet = [4, 4, 4];\\n\\n  getBoxProps = (): BoxProps => ({\\n      mass: 1,\\n      type: \'Kinematic\',\\n      args: this.boxSize,\\n  });\\n\\n  onBoxAnimate({ clock }: NgtRender, { api }: NgtPhysicBox) {\\n      const t = clock.getElapsedTime();\\n      api.position.set(Math.sin(t * 2) * 5, Math.cos(t * 2) * 5, 3);\\n      api.rotation.set(Math.sin(t * 6), Math.cos(t * 6), 0);\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-spheres\',\\n  template: `\\n      <ngt-instanced-mesh\\n          ngtPhysicSphere\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [getPhysicProps]=\\"getInstancedProps\\"\\n          [args]=\\"[number]\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 16, 16]\\">\\n              <ngt-instanced-buffer-attribute\\n                  attach=\\"color\\"\\n                  [args]=\\"[colors, 3]\\"\\n              ></ngt-instanced-buffer-attribute>\\n          </ngt-sphere-geometry>\\n          <ngt-mesh-phong-material\\n              [parameters]=\\"{ vertexColors: true }\\"\\n          ></ngt-mesh-phong-material>\\n      </ngt-instanced-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class InstancedSpheresComponent {\\n  @Input() number = 100;\\n\\n  colors!: Float32Array;\\n\\n  ngOnInit() {\\n      this.colors = new Float32Array(this.number * 3);\\n      const color = new THREE.Color();\\n\\n      for (let i = 0; i < this.number; i++) {\\n          color\\n              .set(niceColor[Math.floor(Math.random() * 5)])\\n              .convertSRGBToLinear()\\n              .toArray(this.colors, i * 3);\\n      }\\n  }\\n\\n  getInstancedProps(index: number) {\\n      return {\\n          args: [1],\\n          mass: 1,\\n          position: [\\n              Math.random() - 0.5,\\n              Math.random() - 0.5,\\n              index * 2,\\n          ] as SphereProps[\'position\'],\\n      } as SphereProps;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"PlaneCompoundComponent","id":"component-PlaneCompoundComponent-80afcd2c664fd8c33210780df76d2d25990a0291295e077e1d229f3b07ea150ddfc0f8feb74383d537a86364b638ce145877175261a54165db6704d031057e32","file":"src/app/threejs-basic/cannon-compound/cannon-compound.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngt-plane","styleUrls":[],"styles":[],"template":"<ngt-group\\n    ngtPhysicPlane\\n    [getPhysicProps]=\\"getPlaneProps\\"\\n    [rotation]=\\"rotation\\"\\n>\\n    <ngt-mesh>\\n        <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n        <ngt-mesh-basic-material\\n            [parameters]=\\"{ color: \'#ffb385\' }\\"\\n        ></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n\\n    <ngt-mesh [receiveShadow]=\\"true\\">\\n        <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n        <ngt-shadow-material\\n            [parameters]=\\"{ color: \'lightsalmon\' }\\"\\n        ></ngt-shadow-material>\\n    </ngt-mesh>\\n</ngt-group>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"rotation","deprecated":false,"deprecationMessage":"","line":75,"type":"NgtEuler","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"getPlaneProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<PlaneProps>","optional":false,"description":"","line":77}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  Input,\\n  NgModule,\\n  Output,\\n} from \'@angular/core\';\\nimport { mapTo, startWith, tap, timer } from \'rxjs\';\\nimport {\\n  NgtEuler,\\n  NgtTriplet,\\n  NgtVector3,\\n} from \'@angular-three/core\';\\nimport {\\n  CompoundBodyProps,\\n  GetByIndex,\\n  PlaneProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicCompound} from \'@angular-three/cannon/bodies\';\\n\\n@Component({\\n  selector: \'app-cannon-compound\',\\n  templateUrl: \'./cannon-compound.component.html\',\\n  styleUrls: [\'./cannon-compound.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonCompoundComponent {\\n\\n  ready$ = timer(2000).pipe(mapTo(true), startWith(false));\\n  copy$ = timer(1000).pipe(\\n      tap(() => {\\n          this.isCopied = true;\\n      }),\\n      mapTo(true),\\n      startWith(false)\\n  );\\n\\n  isCopied = false;\\n\\n  position: NgtVector3 = [0, 0, 0];\\n  rotation: NgtEuler = [0, 0, 0];\\n\\n}\\n\\n\\n\\n@Component({\\n  selector: \'ngt-plane\',\\n  template: `\\n      <ngt-group\\n          ngtPhysicPlane\\n          [getPhysicProps]=\\"getPlaneProps\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-mesh>\\n              <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n              <ngt-mesh-basic-material\\n                  [parameters]=\\"{ color: \'#ffb385\' }\\"\\n              ></ngt-mesh-basic-material>\\n          </ngt-mesh>\\n\\n          <ngt-mesh [receiveShadow]=\\"true\\">\\n              <ngt-plane-geometry [args]=\\"[8, 8]\\"></ngt-plane-geometry>\\n              <ngt-shadow-material\\n                  [parameters]=\\"{ color: \'lightsalmon\' }\\"\\n              ></ngt-shadow-material>\\n          </ngt-mesh>\\n      </ngt-group>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneCompoundComponent {\\n  @Input() rotation?: NgtEuler;\\n\\n  getPlaneProps: GetByIndex<PlaneProps> = () => ({\\n      rotation: this.rotation as NgtTriplet,\\n      type: \'Static\',\\n  });\\n}\\n\\n@Component({\\n  selector: \'ngt-compound\',\\n  template: `\\n      <ngt-group\\n          ngtPhysicCompound\\n          #ngtPhysicCompound=\\"ngtPhysicCompound\\"\\n          (ready)=\\"onReady(ngtPhysicCompound)\\"\\n          [getPhysicProps]=\\"getCompoundProps\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-mesh [castShadow]=\\"true\\">\\n              <ngt-box-geometry [args]=\\"boxSize\\"></ngt-box-geometry>\\n              <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n          </ngt-mesh>\\n          <ngt-mesh [castShadow]=\\"true\\" [position]=\\"[1, 0, 0]\\">\\n              <ngt-sphere-geometry\\n                  [args]=\\"[sphereRadius, 16, 16]\\"\\n              ></ngt-sphere-geometry>\\n              <ngt-mesh-normal-material></ngt-mesh-normal-material>\\n          </ngt-mesh>\\n      </ngt-group>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CompoundComponent {\\n  @Input() isTrigger?: boolean;\\n  @Input() mass = 12;\\n  @Input() position?: NgtVector3;\\n  @Input() rotation?: NgtEuler;\\n\\n  @Output() positionChange = new EventEmitter<NgtVector3>();\\n  @Output() rotationChange = new EventEmitter<NgtEuler>();\\n\\n  boxSize: NgtTriplet = [1, 1, 1];\\n  sphereRadius = 0.65;\\n\\n  #positionSubscription?: () => void;\\n  #rotationSubscription?: () => void;\\n\\n  ngOnDestroy() {\\n      this.#positionSubscription?.();\\n      this.#rotationSubscription?.();\\n  }\\n\\n  getCompoundProps: GetByIndex<CompoundBodyProps> = () => {\\n      return {\\n          isTrigger: this.isTrigger,\\n          mass: this.mass,\\n          position: this.position as NgtTriplet,\\n          rotation: this.rotation as NgtTriplet,\\n          shapes: [\\n              {\\n                  type: \'Box\',\\n                  position: [0, 0, 0],\\n                  rotation: [0, 0, 0],\\n                  args: this.boxSize,\\n              },\\n              {\\n                  type: \'Sphere\',\\n                  position: [1, 0, 0],\\n                  rotation: [0, 0, 0],\\n                  args: [this.sphereRadius],\\n              },\\n          ],\\n      };\\n  };\\n\\n  onReady(ngtPhysicCompound: NgtPhysicCompound) {\\n      if (this.positionChange.observed) {\\n          this.#positionSubscription =\\n              ngtPhysicCompound.api.position.subscribe(\\n                  this.positionChange.emit.bind(this.positionChange)\\n              );\\n      }\\n\\n      if (this.rotationChange.observed) {\\n          this.#rotationSubscription =\\n              ngtPhysicCompound.api.rotation.subscribe(\\n                  this.rotationChange.emit.bind(this.rotationChange)\\n              );\\n      }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"PlaneSingleComponent","id":"component-PlaneSingleComponent-e4176349fc9afcae577c175998dac7733df8e7cc0b9e87b37b40a3613b8ef12dc872bab49fa0ed7a186dd523cc63651bc98c0618e919cf977a44c3fdf5418c8b","file":"src/app/threejs-basic/cannon-single/cannon-single.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-plane","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicPlane\\n    [receiveShadow]=\\"true\\"\\n    [position]=\\"position\\"\\n    [rotation]=\\"[-90 | radian, 0, 0]\\"\\n>\\n    <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n    <ngt-shadow-material\\n        [parameters]=\\"{\\n            color: \'#171717\',\\n            transparent: true,\\n            opacity: 0.4\\n        }\\"\\n    ></ngt-shadow-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"position","deprecated":false,"deprecationMessage":"","line":42,"type":"NgtVector3","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,ChangeDetectionStrategy,Input } from \'@angular/core\';\\nimport { NgtVector3,NgtEuler,NgtTriplet } from \'@angular-three/core\';\\nimport { BoxProps, GetByIndex } from \'@angular-three/cannon\';\\n\\n@Component({\\n  selector: \'app-cannon-single\',\\n  templateUrl: \'./cannon-single.component.html\',\\n  styleUrls: [\'./cannon-single.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonSingleComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n@Component({\\n  selector: \'storybook-plane\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"[-90 | radian, 0, 0]\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[1000, 1000]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{\\n                  color: \'#171717\',\\n                  transparent: true,\\n                  opacity: 0.4\\n              }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneSingleComponent {\\n  @Input() position?: NgtVector3;\\n}\\n\\n@Component({\\n  selector: \'storybook-cube\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicBox\\n          [getPhysicProps]=\\"getCubeProps\\"\\n          [receiveShadow]=\\"true\\"\\n          [castShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          [rotation]=\\"rotation\\"\\n      >\\n          <ngt-box-geometry></ngt-box-geometry>\\n          <ngt-mesh-lambert-material\\n              [parameters]=\\"{ color: \'hotpink\' }\\"\\n          ></ngt-mesh-lambert-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CubeSingleComponent {\\n  @Input() position?: NgtVector3;\\n  rotation = [0.4, 0.2, 0.5] as NgtEuler;\\n\\n  getCubeProps: GetByIndex<BoxProps> = () => ({\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n      rotation: this.rotation as NgtTriplet,\\n  });\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"PlaneSphereComponent","id":"component-PlaneSphereComponent-114d61a02b42665fcf9e9aec8ed56de1c433c629d5d5018b381aed28e42adb521f0b8418091bd8380638028ad27fda9c23092def0f2ddf08408ad98b99c72827","file":"src/app/threejs-basic/cannon-sphere/cannon-sphere.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-plane-sphere","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicPlane\\n    [getPhysicProps]=\\"getPlaneProps\\"\\n    [rotation]=\\"rotation\\"\\n    [receiveShadow]=\\"true\\"\\n>\\n    <ngt-plane-geometry [args]=\\"[20, 20]\\"></ngt-plane-geometry>\\n    <ngt-shadow-material\\n        [parameters]=\\"{ color: \'#171717\' }\\"\\n    ></ngt-shadow-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"getPlaneProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<PlaneProps>","optional":false,"description":"","line":55},{"name":"rotation","defaultValue":"[-Math.PI / 2, 0, 0] as NgtEuler","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  GetByIndex,\\n  PlaneProps,\\n  SphereProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicSphere\\n} from \'@angular-three/cannon/bodies\';\\nimport {\\n  NgtEuler,\\n  NgtTriplet,\\n  NgtVector3,\\n} from \'@angular-three/core\';\\n\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  NgModule,\\n  ViewChild,\\n} from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-cannon-sphere\',\\n  templateUrl: \'./cannon-sphere.component.html\',\\n  styleUrls: [\'./cannon-sphere.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonSphereComponent  {\\n\\n  constructor() { }\\n\\n\\n}\\n\\n@Component({\\n  selector: \'storybook-plane-sphere\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [getPhysicProps]=\\"getPlaneProps\\"\\n          [rotation]=\\"rotation\\"\\n          [receiveShadow]=\\"true\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[20, 20]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{ color: \'#171717\' }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneSphereComponent {\\n  rotation = [-Math.PI / 2, 0, 0] as NgtEuler;\\n\\n  getPlaneProps: GetByIndex<PlaneProps> = () => ({\\n      type: \'Static\',\\n      rotation: this.rotation as NgtTriplet,\\n  });\\n}\\n\\n@Component({\\n  selector: \'storybook-scalable-ball\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicSphere\\n          [getPhysicProps]=\\"getBallProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          (click)=\\"onClick()\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  color: \'blue\',\\n                  transparent: true,\\n                  opacity: 0.5\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ScalableBallComponent {\\n  isSleeping = false;\\n\\n  position = [0, 5, 0] as NgtVector3;\\n\\n  @ViewChild(NgtPhysicSphere, { static: true })\\n  physicSphere!: NgtPhysicSphere;\\n\\n  getBallProps: GetByIndex<SphereProps> = () => ({\\n      args: [1],\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n  });\\n\\n  onClick() {\\n      this.isSleeping\\n          ? this.physicSphere.api.wakeUp()\\n          : this.physicSphere.api.sleep();\\n      this.isSleeping = !this.isSleeping;\\n  }\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"PointerComponent","id":"component-PointerComponent-fc40598bdd7400dc6ea15875db2bc395c711b447894e92e5f8409e9ab62370f594c6c733b5382b48cd5a2fe7e22a93067092c93b8217b7e753dc80dbc2b3008d","file":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-pointer","styleUrls":[],"styles":[],"template":"<ng-container\\n    ngtPhysicSphere\\n    [getPhysicProps]=\\"getSphereProps\\"\\n></ng-container>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"getSphereProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<SphereProps>","optional":false,"description":"","line":51},{"name":"physicSphere","deprecated":false,"deprecationMessage":"","type":"NgtPhysicSphere","optional":false,"description":"","line":58,"decorators":[{"name":"ViewChild","stringifiedArguments":"NgtPhysicSphere, {static: true}"}]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  OnInit,\\n  ViewChild,\\n} from \'@angular/core\';\\nimport {\\n  NgtAnimationFrameStore,\\n  NgtStore,\\n  NgtTriplet,\\n  NgtVector3,\\n  tapEffect,\\n} from \'@angular-three/core\';\\n\\nimport {\\n  GetByIndex,\\n  SphereProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicSphere\\n} from \'@angular-three/cannon/bodies\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-cannon-clump\',\\n  templateUrl: \'./cannon-clump.component.html\',\\n  styleUrls: [\'./cannon-clump.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonClumpComponent {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n\\n@Component({\\n  selector: \'storybook-pointer\',\\n  template: `\\n      <ng-container\\n          ngtPhysicSphere\\n          [getPhysicProps]=\\"getSphereProps\\"\\n      ></ng-container>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PointerComponent extends NgtStore implements OnInit {\\n  getSphereProps: GetByIndex<SphereProps> = () => ({\\n      position: [0, 0, 0],\\n      type: \'Kinematic\',\\n      args: [3],\\n  });\\n\\n  @ViewChild(NgtPhysicSphere, { static: true })\\n  physicSphere!: NgtPhysicSphere;\\n\\n  constructor(private animationFrameStore: NgtAnimationFrameStore) {\\n      super();\\n  }\\n\\n  ngOnInit() {\\n      this.effect<void>(\\n          tapEffect(() => {\\n              const uuid = this.animationFrameStore.register({\\n                  callback: ({ viewport, mouse }) => {\\n                      this.physicSphere.api.position.set(\\n                          (mouse.x * viewport.width) / 2,\\n                          (mouse.y * viewport.height) / 2,\\n                          0\\n                      );\\n                  },\\n              });\\n\\n              return () => {\\n                  this.animationFrameStore.unregister(uuid);\\n              };\\n          })\\n      )();\\n  }\\n}\\n\\nconst mat = new THREE.Matrix4();\\nconst vec = new THREE.Vector3();\\n\\n@Component({\\n  selector: \'storybook-clump\',\\n  template: `\\n      <ngt-instanced-mesh\\n          ngtPhysicSphere\\n          #physicSphere=\\"ngtPhysicSphere\\"\\n          [getPhysicProps]=\\"getSphereProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [args]=\\"[count]\\"\\n          (animateReady)=\\"onAnimate($event.object, physicSphere)\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  color: \'red\',\\n                  roughness: 0,\\n                  envMapIntensity: 0.2,\\n                  emissive: \'#370037\'\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-instanced-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ClumpComponent {\\n  get position() {\\n      return [\\n          THREE.MathUtils.randFloatSpread(20),\\n          THREE.MathUtils.randFloatSpread(20),\\n          THREE.MathUtils.randFloatSpread(20),\\n      ] as NgtVector3;\\n  }\\n\\n  count = 40;\\n\\n  getSphereProps: GetByIndex<SphereProps> = () => ({\\n      args: [1],\\n      mass: 1,\\n      angularDamping: 0.1,\\n      linearDamping: 0.65,\\n      position: this.position as NgtTriplet,\\n  });\\n\\n  onAnimate(object: THREE.Object3D, physicSphere: NgtPhysicSphere) {\\n      for (let i = 0; i < this.count; i++) {\\n          // Get current whereabouts of the instanced sphere\\n          (object as THREE.InstancedMesh).getMatrixAt(i, mat);\\n          // Normalize the position and multiply by a negative force.\\n          // This is enough to drive it towards the center-point.\\n          physicSphere.api\\n              .at(i)\\n              .applyForce(\\n                  vec\\n                      .setFromMatrixPosition(mat)\\n                      .normalize()\\n                      .multiplyScalar(-50)\\n                      .toArray(),\\n                  [0, 0, 0]\\n              );\\n      }\\n  }\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"animationFrameStore","type":"NgtAnimationFrameStore","deprecated":false,"deprecationMessage":""}],"line":58,"jsdoctags":[{"name":"animationFrameStore","type":"NgtAnimationFrameStore","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"NgtStore","implements":["OnInit"]},{"name":"PresenterPatternSolution","id":"component-PresenterPatternSolution-e1a2a59a5e894120dfe6acfa7f1282d1080d19bc3d0618a1406a1fd1a3d98e2d900cb2f1855bcf37a37b0caba0abd5e5bf62b249337ec0b021ffbd15f6555cb6","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"Presenter"},{"name":"Adapter"}],"selector":"rxa-presenter-pattern-solution","styleUrls":[],"styles":[],"template":"<h3>Presenter Pattern</h3>\\n<mat-expansion-panel\\n  *ngIf=\\"ps.vm$ | async as m\\"\\n  (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n  [expanded]=\\"m.listExpanded\\"\\n>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n      User Name\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      <span *ngIf=\\"!m.listExpanded\\"\\n      >{{ m.list.length }} Repositories Updated every:\\n        {{ m.refreshInterval }} ms</span\\n      >\\n      <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <button\\n    mat-raised-button\\n    color=\\"primary\\"\\n    (click)=\\"ps.refreshClicks.next($event)\\"\\n  >\\n    Refresh List\\n  </button>\\n  <div *ngIf=\\"m.list.length; else noList\\">\\n    <mat-list>\\n      <mat-list-item *ngFor=\\"let item of m.list\\">\\n        {{ item.name }}\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n  <ng-template #noList>\\n    <mat-card>No list given!</mat-card>\\n  </ng-template>\\n</mat-expansion-panel>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"refreshInterval","deprecated":false,"deprecationMessage":"","line":145,"type":"Observable<number>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"ad","deprecated":false,"deprecationMessage":"","type":"Adapter","optional":false,"description":"","line":153,"modifierKind":[123]},{"name":"ps","deprecated":false,"deprecationMessage":"","type":"Presenter","optional":false,"description":"","line":152,"modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Observable,switchMap } from \'rxjs\';\\nimport { filter } from \'rxjs/operators\';\\nimport { Subject } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { Injectable } from \'@angular/core\';\\nimport { merge,  timer } from \'rxjs\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\nexport interface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n\\n\\n@Injectable()\\nexport class Presenter extends RxState<ComponentState> {\\n  refreshClicks = new Subject<Event>();\\n  listExpandedChanges = new Subject<boolean>();\\n\\n  vm$ = this.select();\\n  // 👇 user interaction is collected in presenter\\n  refreshListTrigger$ = merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )\\n\\n  constructor() {\\n    super();\\n    this.set(initComponentState);\\n      // 👇 user open close data is stored in store\\n    this.connect(\\n      this.listExpandedChanges.pipe(map((b) => ({ listExpanded: b })))\\n    );\\n  }\\n\\n}\\n\\n\\n@Injectable()\\nexport class Adapter extends RxState<Pick<ComponentState, \'list\'>> {\\n\\n  list$ = this.select(\'list\');\\n  constructor(\\n    private listService: ListService\\n  ) {\\n    super();\\n      // 👇 store list is populated using service\\n    this.connect(\'list\', this.listService.list$\\n      .pipe(map(this.parseListItems))\\n    );\\n  }\\n\\n  refresh = () => {\\n    this.listService.refetchList()\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-rxstate-presenter\',\\n  templateUrl: \'./rxstate-presenter.component.html\',\\n  styleUrls: [\'./rxstate-presenter.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RxstatePresenterComponent {\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\n@Component({\\n  selector: \'rxa-presenter-pattern-solution\',\\n  template: `\\n    <h3>Presenter Pattern</h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"ps.vm$ | async as m\\"\\n      (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n      [expanded]=\\"m.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          User Name\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span *ngIf=\\"!m.listExpanded\\"\\n          >{{ m.list.length }} Repositories Updated every:\\n            {{ m.refreshInterval }} ms</span\\n          >\\n          <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"ps.refreshClicks.next($event)\\"\\n      >\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"m.list.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of m.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [Presenter, Adapter]\\n})\\nexport class PresenterPatternSolution extends RxState<any> {\\n\\n  @Input()\\n  set refreshInterval(refreshInterval$: Observable<number>) {\\n    this.ps.connect(\'refreshInterval\', refreshInterval$.pipe(\\n      filter(i => null? i > 100: false)\\n    ));\\n  }\\n\\n  constructor(\\n    public ps: Presenter,\\n    public ad: Adapter\\n  ) {\\n    super();\\n    // 👇 update the store\\n    this.ps.connect(\'list\', this.ad.list$);\\n    // 👇 side effects is managed here\\n    this.hold(this.ps.refreshListTrigger$, this.ad.refresh);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ps","type":"Presenter","deprecated":false,"deprecationMessage":""},{"name":"ad","type":"Adapter","deprecated":false,"deprecationMessage":""}],"line":149,"jsdoctags":[{"name":"ps","type":"Presenter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"ad","type":"Adapter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"RxState","accessors":{"refreshInterval":{"name":"refreshInterval","setSignature":{"name":"refreshInterval","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"refreshInterval$","type":"Observable<number>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":145,"jsdoctags":[{"name":"refreshInterval$","type":"Observable<number>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"RecipePreviewComponent","id":"component-RecipePreviewComponent-672e9ebd4f7f37a6c4ebc07274697505264ce86473a906a77657dd527ecf44052774d6ab9621e9c63703bbe9895d14d6c0b6ce603356e61f7049cdfc7987e434","file":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"wm-recipe-preview","styleUrls":[],"styles":["\\n      h2 {\\n        font-size: 1.2em;\\n        text-align: center;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n      }\\n    "],"template":"<wm-card *ngIf=\\"recipe\\" [pictureUri]=\\"recipe.pictureUri\\">    <h2 data-role=\\"recipe-name\\">{{ recipe.name }}</h2>\\n    <ng-content></ng-content>\\n  </wm-card>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"recipe","deprecated":false,"deprecationMessage":"","line":88,"type":"Recipe","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState, select, selectSlice } from \'@rx-angular/state\';\\nimport { map } from \'rxjs\';\\nimport { UserdataService } from \'../../service/userdata.service\';\\nimport { Recipe } from \'../receipe\';\\n\\nexport interface State {\\n  recipes: Recipe[];\\n  recipeIndex: number;\\n}\\n\\n@Component({\\n  selector: \'app-marmi-rxstate\',\\n  templateUrl: \'./marmi-rxstate.component.html\',\\n  styleUrls: [\'./marmi-rxstate.component.scss\'],  \\n  providers: [RxState],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class MarmiRxstateComponent {\\n  // 👇 Using select/selectslice create observables for using in template for display\\n  recipe$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => recipes?.[recipeIndex])\\n  );\\n  // 👇 create boolean observable for use in template\\n  hasPrevious$ = this._state\\n    .select(\'recipeIndex\')\\n    .pipe(select(map((index) => index > 0)));\\n\\n  // 👇 create boolean observable for use in template\\n  hasNext$ = this._state.select(\\n    selectSlice([\'recipes\', \'recipeIndex\']),\\n    map(({ recipes, recipeIndex }) => {\\n      console.count(\'compute hasNext...\');\\n      return recipeIndex + 1 < recipes.length;\\n    })\\n  );\\n  // 👇 create store in template \\n  recipes$ = this._state.select(\'recipes\');\\n\\n  constructor(\\n    private _recipeRepository: UserdataService,\\n    private _state: RxState<State>\\n  ) {\\n    // 👇 set command initializes the store state\\n    this._state.set({ recipeIndex: 0 });\\n    // 👇 Data from template/service is connected to the store state recepes\\n    this._state.connect(\'recipes\', this._recipeRepository.getRecipes());\\n  }\\n\\n  // 👇 set command directly interacts with store for no side effect\\n  next() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex + 1 }));\\n  }\\n\\n  previous() {\\n    this._state.set(({ recipeIndex }) => ({ recipeIndex: recipeIndex - 1 }));\\n  }\\n\\n  reset() {\\n    this._state.set({ recipeIndex: 0 });\\n  }\\n}\\n\\n;\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-recipe-preview\',\\n  template: `<wm-card *ngIf=\\"recipe\\" [pictureUri]=\\"recipe.pictureUri\\">\\n    <h2 data-role=\\"recipe-name\\">{{ recipe.name }}</h2>\\n    <ng-content></ng-content>\\n  </wm-card>`,\\n  styles: [\\n    `\\n      h2 {\\n        font-size: 1.2em;\\n        text-align: center;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n      }\\n    `,\\n  ],\\n})\\nexport class RecipePreviewComponent {\\n  @Input() recipe?: Recipe;\\n}\\n\\n@Component({\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'wm-card\',\\n  template: ` <img *ngIf=\\"pictureUri\\" class=\\"picture\\" [src]=\\"pictureUri\\" />\\n    <div class=\\"content\\">\\n      <ng-content></ng-content>\\n    </div>`,\\n  styles: [\\n    `\\n      :host {\\n        display: block;\\n        border-radius: 10px;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n        overflow: hidden;\\n        text-align: left;\\n        width: 300px;\\n      }\\n      .picture {\\n        object-fit: cover;\\n        height: 300px;\\n        width: 100%;\\n      }\\n      .content {\\n        margin: 10px;\\n      }\\n    `,\\n  ],\\n})\\nexport class CardComponent {\\n  @Input() pictureUri?: string;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      h2 {\\n        font-size: 1.2em;\\n        text-align: center;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n      }\\n    \\n"},{"name":"RxstateExampleComponent","id":"component-RxstateExampleComponent-42e06883b801ee9fa054e6e5ab69bfc663d35a986215a50826feadeb136b7772e3210d9caddc2b53b1a7fac791a7305b32e2927e27bf8cb5475f0211e5358832","file":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-rxstate-example","styleUrls":["./rxstate-example.component.scss"],"styles":[],"templateUrl":["./rxstate-example.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"refreshInterval$","defaultValue":"this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"refreshIntervalInput$","defaultValue":"new Subject<Event>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, Output } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Subject } from \'rxjs\';\\nimport { distinctUntilKeyChanged, map, startWith } from \'rxjs/operators\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\n@Component({\\n  selector: \'app-rxstate-example\',\\n  templateUrl: \'./rxstate-example.component.html\',\\n  styleUrls: [\'./rxstate-example.component.scss\']\\n})\\nexport class RxstateExampleComponent  {\\n\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\ninterface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n@Component({\\n  selector: \'rxa-side-effects-solution\',\\n  template: `\\n    <h3>\\n      Side Effects\\n    </h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"model$ | async as vm\\"\\n      (expandedChange)=\\"listExpandedChanges.next($event)\\"\\n      [expanded]=\\"vm.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header class=\\"list\\">\\n        <mat-progress-bar *ngIf=\\"false\\" [mode]=\\"\'query\'\\"></mat-progress-bar>\\n        <mat-panel-title>\\n          List\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span\\n          >{{ vm.list.length }} Repositories Updated every:\\n            {{ vm.refreshInterval }} ms\\n          </span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"refreshClicks$.next($event)\\">\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"vm.list?.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of vm.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SideEffectsSolution extends RxState<ComponentState>\\n  implements OnInit, OnDestroy {\\n  model$ = this.select();\\n\\n  listExpandedChanges = new Subject<boolean>();\\n  refreshClicks$ = new Subject<Event>();\\n\\n  @Input()\\n  set refreshInterval(refreshInterval: number) {\\n    if (refreshInterval > 4000) {\\n      this.set({ refreshInterval });\\n    }\\n  }\\n\\n  listExpanded: boolean = initComponentState.listExpanded;\\n  @Output()\\n  listExpandedChange = this.$.pipe(distinctUntilKeyChanged(\'listExpanded\'), map(s => s.listExpanded));\\n\\n  constructor(private listService: ListService) {\\n    super();\\n    this.set(initComponentState);\\n    this.connect(\'listExpanded\', this.listExpandedChanges);\\n    this.connect(\'list\', this.listService.list$.pipe(map(this.parseListItems)));\\n    this.hold(this.refreshClicks$.pipe(startWith(true)), () => this.listService.refetchList())\\n  }\\n\\n  ngOnInit(): void {\\n    this.refreshClicks$.next(undefined);\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rxstate-example.component.scss"}],"stylesData":"","templateData":"<h1>Side Effects</h1>\\n<br/>\\n<mat-form-field>\\n  <label>RefreshInterval</label>\\n  <input\\n    type=\\"number\\"\\n    (input)=\\"refreshIntervalInput$.next($event)\\"\\n    matInput/>\\n</mat-form-field>\\n<rxa-side-effects-solution [refreshInterval]=\\"refreshInterval$ | async\\">\\n</rxa-side-effects-solution>"},{"name":"RxstatePresenterComponent","id":"component-RxstatePresenterComponent-e1a2a59a5e894120dfe6acfa7f1282d1080d19bc3d0618a1406a1fd1a3d98e2d900cb2f1855bcf37a37b0caba0abd5e5bf62b249337ec0b021ffbd15f6555cb6","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-rxstate-presenter","styleUrls":["./rxstate-presenter.component.scss"],"styles":[],"templateUrl":["./rxstate-presenter.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"refreshInterval$","defaultValue":"this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  )","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":88},{"name":"refreshIntervalInput$","defaultValue":"new Subject<Event>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":87}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Observable,switchMap } from \'rxjs\';\\nimport { filter } from \'rxjs/operators\';\\nimport { Subject } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { Injectable } from \'@angular/core\';\\nimport { merge,  timer } from \'rxjs\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\nexport interface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n\\n\\n@Injectable()\\nexport class Presenter extends RxState<ComponentState> {\\n  refreshClicks = new Subject<Event>();\\n  listExpandedChanges = new Subject<boolean>();\\n\\n  vm$ = this.select();\\n  // 👇 user interaction is collected in presenter\\n  refreshListTrigger$ = merge(\\n    this.refreshClicks,\\n    this.select(\\n      map((s) => s.refreshInterval),\\n      switchMap((ms) => timer(0, ms))\\n    )\\n  )\\n\\n  constructor() {\\n    super();\\n    this.set(initComponentState);\\n      // 👇 user open close data is stored in store\\n    this.connect(\\n      this.listExpandedChanges.pipe(map((b) => ({ listExpanded: b })))\\n    );\\n  }\\n\\n}\\n\\n\\n@Injectable()\\nexport class Adapter extends RxState<Pick<ComponentState, \'list\'>> {\\n\\n  list$ = this.select(\'list\');\\n  constructor(\\n    private listService: ListService\\n  ) {\\n    super();\\n      // 👇 store list is populated using service\\n    this.connect(\'list\', this.listService.list$\\n      .pipe(map(this.parseListItems))\\n    );\\n  }\\n\\n  refresh = () => {\\n    this.listService.refetchList()\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n\\n@Component({\\n  selector: \'app-rxstate-presenter\',\\n  templateUrl: \'./rxstate-presenter.component.html\',\\n  styleUrls: [\'./rxstate-presenter.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RxstatePresenterComponent {\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\n@Component({\\n  selector: \'rxa-presenter-pattern-solution\',\\n  template: `\\n    <h3>Presenter Pattern</h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"ps.vm$ | async as m\\"\\n      (expandedChange)=\\"ps.listExpandedChanges.next($event)\\"\\n      [expanded]=\\"m.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          User Name\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span *ngIf=\\"!m.listExpanded\\"\\n          >{{ m.list.length }} Repositories Updated every:\\n            {{ m.refreshInterval }} ms</span\\n          >\\n          <span *ngIf=\\"m.listExpanded\\">{{ m.list.length }}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"ps.refreshClicks.next($event)\\"\\n      >\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"m.list.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of m.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [Presenter, Adapter]\\n})\\nexport class PresenterPatternSolution extends RxState<any> {\\n\\n  @Input()\\n  set refreshInterval(refreshInterval$: Observable<number>) {\\n    this.ps.connect(\'refreshInterval\', refreshInterval$.pipe(\\n      filter(i => null? i > 100: false)\\n    ));\\n  }\\n\\n  constructor(\\n    public ps: Presenter,\\n    public ad: Adapter\\n  ) {\\n    super();\\n    // 👇 update the store\\n    this.ps.connect(\'list\', this.ad.list$);\\n    // 👇 side effects is managed here\\n    this.hold(this.ps.refreshListTrigger$, this.ad.refresh);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rxstate-presenter.component.scss"}],"stylesData":"","templateData":"<h1>Presenter Pattern</h1>\\n<mat-form-field>\\n  <label>RefreshInterval {{ refreshInterval$ | async }}</label>\\n  <input\\n    type=\\"number\\"\\n    (input)=\\"refreshIntervalInput$.next($event)\\"\\n    matInput\\n  />\\n</mat-form-field>\\n<rxa-presenter-pattern-solution [refreshInterval]=\\"(refreshInterval$ | async)\\">\\n</rxa-presenter-pattern-solution>"},{"name":"ScalableBallComponent","id":"component-ScalableBallComponent-114d61a02b42665fcf9e9aec8ed56de1c433c629d5d5018b381aed28e42adb521f0b8418091bd8380638028ad27fda9c23092def0f2ddf08408ad98b99c72827","file":"src/app/threejs-basic/cannon-sphere/cannon-sphere.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-scalable-ball","styleUrls":[],"styles":[],"template":"<ngt-mesh\\n    ngtPhysicSphere\\n    [getPhysicProps]=\\"getBallProps\\"\\n    [castShadow]=\\"true\\"\\n    [receiveShadow]=\\"true\\"\\n    [position]=\\"position\\"\\n    (click)=\\"onClick()\\"\\n>\\n    <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n    <ngt-mesh-standard-material\\n        [parameters]=\\"{\\n            color: \'blue\',\\n            transparent: true,\\n            opacity: 0.5\\n        }\\"\\n    ></ngt-mesh-standard-material>\\n</ngt-mesh>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"getBallProps","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"GetByIndex<SphereProps>","optional":false,"description":"","line":92},{"name":"isSleeping","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":85},{"name":"physicSphere","deprecated":false,"deprecationMessage":"","type":"NgtPhysicSphere","optional":false,"description":"","line":90,"decorators":[{"name":"ViewChild","stringifiedArguments":"NgtPhysicSphere, {static: true}"}]},{"name":"position","defaultValue":"[0, 5, 0] as NgtVector3","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":87}],"methodsClass":[{"name":"onClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  GetByIndex,\\n  PlaneProps,\\n  SphereProps,\\n} from \'@angular-three/cannon\';\\nimport {\\n  NgtPhysicSphere\\n} from \'@angular-three/cannon/bodies\';\\nimport {\\n  NgtEuler,\\n  NgtTriplet,\\n  NgtVector3,\\n} from \'@angular-three/core\';\\n\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  NgModule,\\n  ViewChild,\\n} from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-cannon-sphere\',\\n  templateUrl: \'./cannon-sphere.component.html\',\\n  styleUrls: [\'./cannon-sphere.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CannonSphereComponent  {\\n\\n  constructor() { }\\n\\n\\n}\\n\\n@Component({\\n  selector: \'storybook-plane-sphere\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicPlane\\n          [getPhysicProps]=\\"getPlaneProps\\"\\n          [rotation]=\\"rotation\\"\\n          [receiveShadow]=\\"true\\"\\n      >\\n          <ngt-plane-geometry [args]=\\"[20, 20]\\"></ngt-plane-geometry>\\n          <ngt-shadow-material\\n              [parameters]=\\"{ color: \'#171717\' }\\"\\n          ></ngt-shadow-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class PlaneSphereComponent {\\n  rotation = [-Math.PI / 2, 0, 0] as NgtEuler;\\n\\n  getPlaneProps: GetByIndex<PlaneProps> = () => ({\\n      type: \'Static\',\\n      rotation: this.rotation as NgtTriplet,\\n  });\\n}\\n\\n@Component({\\n  selector: \'storybook-scalable-ball\',\\n  template: `\\n      <ngt-mesh\\n          ngtPhysicSphere\\n          [getPhysicProps]=\\"getBallProps\\"\\n          [castShadow]=\\"true\\"\\n          [receiveShadow]=\\"true\\"\\n          [position]=\\"position\\"\\n          (click)=\\"onClick()\\"\\n      >\\n          <ngt-sphere-geometry [args]=\\"[1, 32, 32]\\"></ngt-sphere-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  color: \'blue\',\\n                  transparent: true,\\n                  opacity: 0.5\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ScalableBallComponent {\\n  isSleeping = false;\\n\\n  position = [0, 5, 0] as NgtVector3;\\n\\n  @ViewChild(NgtPhysicSphere, { static: true })\\n  physicSphere!: NgtPhysicSphere;\\n\\n  getBallProps: GetByIndex<SphereProps> = () => ({\\n      args: [1],\\n      mass: 1,\\n      position: this.position as NgtTriplet,\\n  });\\n\\n  onClick() {\\n      this.isSleeping\\n          ? this.physicSphere.api.wakeUp()\\n          : this.physicSphere.api.sleep();\\n      this.isSleeping = !this.isSleeping;\\n  }\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"SideEffectsSolution","id":"component-SideEffectsSolution-42e06883b801ee9fa054e6e5ab69bfc663d35a986215a50826feadeb136b7772e3210d9caddc2b53b1a7fac791a7305b32e2927e27bf8cb5475f0211e5358832","file":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rxa-side-effects-solution","styleUrls":[],"styles":[],"template":"<h3>\\n  Side Effects\\n</h3>\\n<mat-expansion-panel\\n  *ngIf=\\"model$ | async as vm\\"\\n  (expandedChange)=\\"listExpandedChanges.next($event)\\"\\n  [expanded]=\\"vm.listExpanded\\"\\n>\\n  <mat-expansion-panel-header class=\\"list\\">\\n    <mat-progress-bar *ngIf=\\"false\\" [mode]=\\"\'query\'\\"></mat-progress-bar>\\n    <mat-panel-title>\\n      List\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      <span\\n      >{{ vm.list.length }} Repositories Updated every:\\n        {{ vm.refreshInterval }} ms\\n      </span>\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <button\\n    mat-raised-button\\n    color=\\"primary\\"\\n    (click)=\\"refreshClicks$.next($event)\\">\\n    Refresh List\\n  </button>\\n  <div *ngIf=\\"vm.list?.length; else noList\\">\\n    <mat-list>\\n      <mat-list-item *ngFor=\\"let item of vm.list\\">\\n        {{ item.name }}\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n  <ng-template #noList>\\n    <mat-card>No list given!</mat-card>\\n  </ng-template>\\n</mat-expansion-panel>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"refreshInterval","deprecated":false,"deprecationMessage":"","line":90,"type":"number","decorators":[]}],"outputsClass":[{"name":"listExpandedChange","defaultValue":"this.$.pipe(distinctUntilKeyChanged(\'listExpanded\'), map(s => s.listExpanded))","deprecated":false,"deprecationMessage":"","line":98}],"propertiesClass":[{"name":"listExpanded","defaultValue":"initComponentState.listExpanded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":96},{"name":"listExpandedChanges","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":86},{"name":"model$","defaultValue":"this.select()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":84},{"name":"refreshClicks$","defaultValue":"new Subject<Event>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":87}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":""},{"name":"parseListItems","args":[{"name":"l","type":"ListServerItem[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DemoBasicsItem[]","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"l","type":"ListServerItem[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, Output } from \'@angular/core\';\\nimport { RxState } from \'@rx-angular/state\';\\nimport { Subject } from \'rxjs\';\\nimport { distinctUntilKeyChanged, map, startWith } from \'rxjs/operators\';\\nimport { ListService, } from \'../../service/list.service\';\\nimport { ListServerItem } from \'../../threejs-basic/receipe\';\\n\\n@Component({\\n  selector: \'app-rxstate-example\',\\n  templateUrl: \'./rxstate-example.component.html\',\\n  styleUrls: [\'./rxstate-example.component.scss\']\\n})\\nexport class RxstateExampleComponent  {\\n\\n  refreshIntervalInput$ = new Subject<Event>();\\n  refreshInterval$ = this.refreshIntervalInput$.pipe(\\n    map((e: any) => e.target.value)\\n  );\\n}\\n\\n\\nexport interface DemoBasicsItem {\\n  id: string;\\n  name: string;\\n}\\n\\ninterface ComponentState {\\n  refreshInterval: number;\\n  list: DemoBasicsItem[];\\n  listExpanded: boolean;\\n}\\n\\nconst initComponentState = {\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n};\\n\\n@Component({\\n  selector: \'rxa-side-effects-solution\',\\n  template: `\\n    <h3>\\n      Side Effects\\n    </h3>\\n    <mat-expansion-panel\\n      *ngIf=\\"model$ | async as vm\\"\\n      (expandedChange)=\\"listExpandedChanges.next($event)\\"\\n      [expanded]=\\"vm.listExpanded\\"\\n    >\\n      <mat-expansion-panel-header class=\\"list\\">\\n        <mat-progress-bar *ngIf=\\"false\\" [mode]=\\"\'query\'\\"></mat-progress-bar>\\n        <mat-panel-title>\\n          List\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <span\\n          >{{ vm.list.length }} Repositories Updated every:\\n            {{ vm.refreshInterval }} ms\\n          </span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <button\\n        mat-raised-button\\n        color=\\"primary\\"\\n        (click)=\\"refreshClicks$.next($event)\\">\\n        Refresh List\\n      </button>\\n      <div *ngIf=\\"vm.list?.length; else noList\\">\\n        <mat-list>\\n          <mat-list-item *ngFor=\\"let item of vm.list\\">\\n            {{ item.name }}\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n      <ng-template #noList>\\n        <mat-card>No list given!</mat-card>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SideEffectsSolution extends RxState<ComponentState>\\n  implements OnInit, OnDestroy {\\n  model$ = this.select();\\n\\n  listExpandedChanges = new Subject<boolean>();\\n  refreshClicks$ = new Subject<Event>();\\n\\n  @Input()\\n  set refreshInterval(refreshInterval: number) {\\n    if (refreshInterval > 4000) {\\n      this.set({ refreshInterval });\\n    }\\n  }\\n\\n  listExpanded: boolean = initComponentState.listExpanded;\\n  @Output()\\n  listExpandedChange = this.$.pipe(distinctUntilKeyChanged(\'listExpanded\'), map(s => s.listExpanded));\\n\\n  constructor(private listService: ListService) {\\n    super();\\n    this.set(initComponentState);\\n    this.connect(\'listExpanded\', this.listExpandedChanges);\\n    this.connect(\'list\', this.listService.list$.pipe(map(this.parseListItems)));\\n    this.hold(this.refreshClicks$.pipe(startWith(true)), () => this.listService.refetchList())\\n  }\\n\\n  ngOnInit(): void {\\n    this.refreshClicks$.next(undefined);\\n  }\\n\\n  parseListItems(l: ListServerItem[]): DemoBasicsItem[] {\\n    return l.map(({ id, name }) => ({ id, name }));\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"listService","type":"ListService","deprecated":false,"deprecationMessage":""}],"line":98,"jsdoctags":[{"name":"listService","type":"ListService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"RxState","implements":["OnInit","OnDestroy"],"accessors":{"refreshInterval":{"name":"refreshInterval","setSignature":{"name":"refreshInterval","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"refreshInterval","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":90,"jsdoctags":[{"name":"refreshInterval","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"SimpleCubeComponent","id":"component-SimpleCubeComponent-ba39fa3743e3086ccf06a4d668958cabaa747717a348044dd3cec38de27d1a46efcccd7eafc4d7afd6860c346a267b4c027ebd8e2247489e3e4624fd70a9b0a4","file":"src/app/threejs-basic/simple-cube/simple-cube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-simple-cube","styleUrls":[],"styles":[],"template":"<ngt-canvas [camera]=\\"{ position: [5, 5, 5] }\\">\\n    <ngt-ambient-light></ngt-ambient-light>\\n    <ngt-spot-light [position]=\\"[5, 5, 5]\\"></ngt-spot-light>\\n\\n    <ngt-group\\n        [ngtBoxHelper]=\\"[\'red\']\\"\\n        (animateReady)=\\"onGroupAnimate($event.object)\\"\\n    >\\n        <demo-cube [position]=\\"[2, 0, 0]\\"></demo-cube>\\n        <demo-cube [position]=\\"[-2, 0, 0]\\"></demo-cube>\\n        <demo-cube [position]=\\"[0, 0, 2]\\"></demo-cube>\\n        <demo-cube [position]=\\"[0, 0, -2]\\"></demo-cube>\\n    </ngt-group>\\n\\n\\n\\n    <ngt-stats></ngt-stats>\\n</ngt-canvas>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onGroupAnimate","args":[{"name":"group","type":"Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"group","type":"Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { NgtCoreModule, NgtVector3 } from \'@angular-three/core\';\\r\\nimport { NgtBoxGeometryModule } from \'@angular-three/core/geometries\';\\r\\nimport { NgtGroupModule } from \'@angular-three/core/group\';\\r\\nimport {\\r\\n    NgtBoxHelperModule,\\r\\n    NgtGridHelperModule,\\r\\n} from \'@angular-three/core/helpers\';\\r\\nimport {\\r\\n    NgtAmbientLightModule,\\r\\n    NgtSpotLightModule,\\r\\n} from \'@angular-three/core/lights\';\\r\\nimport { NgtMeshStandardMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport { NgtStatsModule } from \'@angular-three/core/stats\';\\r\\nimport { NgtSobaOrbitControlsModule } from \'@angular-three/soba/controls\';\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgModule,\\r\\n} from \'@angular/core\';\\r\\nimport { Object3D } from \'three\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-simple-cube\',\\r\\n    template: `\\r\\n        <ngt-canvas [camera]=\\"{ position: [5, 5, 5] }\\">\\r\\n            <ngt-ambient-light></ngt-ambient-light>\\r\\n            <ngt-spot-light [position]=\\"[5, 5, 5]\\"></ngt-spot-light>\\r\\n\\r\\n            <ngt-group\\r\\n                [ngtBoxHelper]=\\"[\'red\']\\"\\r\\n                (animateReady)=\\"onGroupAnimate($event.object)\\"\\r\\n            >\\r\\n                <demo-cube [position]=\\"[2, 0, 0]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[-2, 0, 0]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[0, 0, 2]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[0, 0, -2]\\"></demo-cube>\\r\\n            </ngt-group>\\r\\n\\r\\n \\r\\n\\r\\n            <ngt-stats></ngt-stats>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class SimpleCubeComponent {\\r\\n    onGroupAnimate(group: Object3D) {\\r\\n        group.rotation.y += 0.01;\\r\\n    }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-cube\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            [ngtBoxHelper]=\\"[\'black\']\\"\\r\\n            (animateReady)=\\"onCubeAnimate($event.object)\\"\\r\\n            (click)=\\"active = !active\\"\\r\\n            (pointerover)=\\"hover = true\\"\\r\\n            (pointerout)=\\"hover = false\\"\\r\\n            [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\r\\n            [position]=\\"position\\"\\r\\n        >\\r\\n            <ngt-box-geometry></ngt-box-geometry>\\r\\n            <ngt-mesh-standard-material\\r\\n                [parameters]=\\"{ color: hover ? \'hotpink\' : \'orange\' }\\"\\r\\n            ></ngt-mesh-standard-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class CubeComponent {\\r\\n    @Input() position?: NgtVector3;\\r\\n\\r\\n    hover = false;\\r\\n    active = false;\\r\\n\\r\\n    onCubeAnimate(cube: Object3D) {\\r\\n        cube.rotation.x = cube.rotation.y += 0.01;\\r\\n    }\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [SimpleCubeComponent, CubeComponent],\\r\\n    exports: [SimpleCubeComponent],\\r\\n    imports: [\\r\\n        NgtCoreModule,\\r\\n        NgtBoxGeometryModule,\\r\\n        NgtMeshStandardMaterialModule,\\r\\n        NgtAmbientLightModule,\\r\\n        NgtSpotLightModule,\\r\\n        NgtBoxHelperModule,\\r\\n        NgtStatsModule,\\r\\n        NgtMeshModule,\\r\\n        NgtSobaOrbitControlsModule,\\r\\n        NgtGridHelperModule,\\r\\n        NgtGroupModule,\\r\\n    ],\\r\\n})\\r\\nexport class SimpleCubeComponentModule {}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"SobaBillboardComponent","id":"component-SobaBillboardComponent-e7fc7091c9e447949f21c07ee100d80052f434e02b69feacb62ea596691a664cd4e8b5176e0c89077266a5c634a2ce5ed4e8ab5f7b23c727c9449d1c92bc75f3","file":"src/app/threejs-basic/soba-billboard/soba-billboard.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-soba-billboard","styleUrls":["./soba-billboard.component.scss"],"styles":[],"templateUrl":["./soba-billboard.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  NgtVector3,\\n} from \'@angular-three/core\';\\n\\nimport { Object3D } from \'three\';\\n\\nimport {\\n    ChangeDetectionStrategy,\\n    Component,\\n    Input,\\n} from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-soba-billboard\',\\n  templateUrl: \'./soba-billboard.component.html\',\\n  styleUrls: [\'./soba-billboard.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class SobaBillboardComponent {\\n\\n\\n}\\n\\n\\n/*\\n@Component({\\n  selector: \'demo-earth\',\\n  template: `\\n      <ng-container *ngIf=\\"earth$ | async as earth\\" style=\\"height: 50vh; width: 50vw;\\">\\n          <ngt-group [dispose]=\\"null\\">\\n              <ngt-group\\n                  [rotation]=\\"[-90 | radian, 0, 0.05]\\"\\n                  [scale]=\\"[100, 100, 100]\\"\\n              >\\n                  <ngt-mesh\\n                      [geometry]=\\"\\n                          $any(earth.nodes[\'URF-Height_Lampd_Ice_0\']).geometry\\n                      \\"\\n                      [material]=\\"earth.materials[\'Lampd_Ice\']\\"\\n                  ></ngt-mesh>\\n                  <ngt-mesh\\n                      (pointerover)=\\"$event.stopPropagation()\\"\\n                      [geometry]=\\"\\n                          $any(earth.nodes[\'URF-Height_watr_0\']).geometry\\n                      \\"\\n                      [material]=\\"earth.materials[\'watr\']\\"\\n                      (ready)=\\"$any($event.material).roughness = 0\\"\\n                  ></ngt-mesh>\\n                  <ngt-mesh\\n                      [geometry]=\\"\\n                          $any(earth.nodes[\'URF-Height_Lampd_0\']).geometry\\n                      \\"\\n                      [material]=\\"earth.materials[\'Lampd\']\\"\\n                  >\\n                      <demo-marker\\n                          [rotation]=\\"[0, 90 | radian, 0]\\"\\n                          [position]=\\"[0, 1.3, 0]\\"\\n                          color=\\"orange\\"\\n                      ></demo-marker>\\n\\n                      <demo-marker\\n                          [rotation]=\\"[0, 90 | radian, 90 | radian]\\"\\n                          [position]=\\"[0, 0, 1.3]\\"\\n                          color=\\"indianred\\"\\n                      ></demo-marker>\\n                  </ngt-mesh>\\n              </ngt-group>\\n          </ngt-group>\\n      </ng-container>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class EarthComponent {\\n  earth$ = this.gltfLoader.load(\'assets/earth.gltf\');\\n\\n  constructor(private gltfLoader: NgtGLTFLoader) {}\\n}\\n\\n@Component({\\n  selector: \'demo-marker\',\\n  template: `\\n      <ngt-soba-html\\n          [transform]=\\"true\\"\\n          [rotation]=\\"rotation\\"\\n          [position]=\\"position\\"\\n          [occlude]=\\"true\\"\\n          (occludeChange)=\\"onOccludeChange($event)\\"\\n          [parentStyle]=\\"{\\n              transition: \'all 0.2s\',\\n              opacity: hidden ? \'0\' : \'1\'\\n          }\\"\\n      >\\n\\n      </ngt-soba-html>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class MarkerComponent {\\n  @Input() rotation?: NgtEuler;\\n  @Input() position?: NgtVector3;\\n\\n  @Input() color = \'\';\\n\\n  hidden = false;\\n\\n\\n  constructor(private zone: NgZone) {}\\n\\n  get parentStyle(): Partial<CSSStyleDeclaration> {\\n      return {\\n          transition: \'all 0.2s\',\\n          opacity: this.hidden ? \'0\' : \'1\',\\n          transform: `scale(${this.hidden ? 0.25 : 1})`,\\n      };\\n  }\\n\\n  onOccludeChange(occluded: boolean) {\\n      this.zone.run(() => {\\n          this.hidden = occluded;\\n      });\\n  }\\n}\\n*/\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./soba-billboard.component.scss"}],"stylesData":"","templateData":"<div fxLayout=\\"column\\" style=\\"height: 50vh; width: 50vw;\\">\\n\\n<ngt-canvas style=\\"height: 50vh\\"\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: [0,0,10], fov: 75}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    (ready)=\\"$event.enablePan = true; $event.zoomSpeed = 0.5\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-plane-geometry\\n    #planeGeometry=\\"ngtPlaneGeometry\\"\\n    [args]=\\"[3, 2]\\"\\n  ></ngt-plane-geometry>\\n\\n  <ngt-soba-billboard [position]=\\"[-4, -2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'red\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[-4, 2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'orange\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[0, 0, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'green\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[4, -2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'blue\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n\\n  <ngt-soba-billboard [position]=\\"[4, 2, 0]\\">\\n    <ngt-mesh [geometry]=\\"planeGeometry.geometry\\">\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'yellow\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n</ngt-canvas>\\n\\n<ngt-canvas style=\\"height: 50vh\\"\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: [0,0,10], fov: 75}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"false\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-orbit-controls\\n    (ready)=\\"$event.enablePan = true; $event.zoomSpeed = 0.5\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-billboard [position]=\\"[0.5, 2.05, 0.5]\\">\\n    <ngt-soba-text\\n      text=\\"box\\"\\n      [fontSize]=\\"1\\"\\n      outlineWidth=\\"5%\\"\\n      outlineColor=\\"#000000\\"\\n      [outlineOpacity]=\\"1\\"\\n    ></ngt-soba-text>\\n  </ngt-soba-billboard>\\n\\n  <ngt-mesh [position]=\\"[0.5, 1, 0.5]\\">\\n    <ngt-box-geometry></ngt-box-geometry>\\n    <ngt-mesh-standard-material\\n      [parameters]=\\"{ color: \'red\' }\\"\\n    ></ngt-mesh-standard-material>\\n  </ngt-mesh>\\n\\n  <ngt-group [position]=\\"[-2.5, -3, -1]\\">\\n    <ngt-soba-billboard [position]=\\"[0, 1.05, 0]\\">\\n      <ngt-soba-text\\n        text=\\"cone\\"\\n   \\n        [fontSize]=\\"1\\"\\n        outlineWidth=\\"5%\\"\\n        outlineColor=\\"#000000\\"\\n        [outlineOpacity]=\\"1\\"\\n      ></ngt-soba-text>\\n    </ngt-soba-billboard>\\n\\n    <ngt-mesh>\\n      <ngt-cone-geometry></ngt-cone-geometry>\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'green\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-group>\\n\\n  <ngt-soba-billboard [position]=\\"[0, 0, -5]\\">\\n    <ngt-mesh>\\n      <ngt-plane-geometry [args]=\\"[2, 2]\\"></ngt-plane-geometry>\\n      <ngt-mesh-standard-material\\n        [parameters]=\\"{ color: \'#000066\' }\\"\\n      ></ngt-mesh-standard-material>\\n    </ngt-mesh>\\n  </ngt-soba-billboard>\\n</ngt-canvas>\\n\\n\\n</div>\\n\\n<div fxLayout=\\"column\\" style=\\"height: 50vh; width: 50vw;\\">\\n\\n\\n  <ngt-canvas style=\\"height: 50vh\\"\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: [-5,5,5], fov: 75}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-mesh>\\n    <ngt-plane-geometry></ngt-plane-geometry>\\n    <ngt-mesh-basic-material\\n      [parameters]=\'{depthWrite: false }\'\\n    >\\n      <ngt-soba-gradient-texture\\n        [stops]=\\"[0, 1]\\"\\n        [colors]=\'[\\"aquamarine\\", \\"hotpink\\"]\'\\n      ></ngt-soba-gradient-texture>\\n    </ngt-mesh-basic-material>\\n  </ngt-mesh>\\n</ngt-canvas>\\n</div>\\n        "},{"name":"SpincubeComponent","id":"component-SpincubeComponent-63ef96a210449c7cb3054a58e06394a43ad884d27d309fa02edebac9af84d8f0bb2c4e9e2313522cac7307977ddd11f251c2732bd2eb989b8dd6e3cfb371503c","file":"src/app/threejs-basic/spincube/spincube.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-spincube","styleUrls":["./spincube.component.scss"],"styles":[],"templateUrl":["./spincube.component.html"],"viewProviders":[],"inputsClass":[{"name":"position","deprecated":false,"deprecationMessage":"","line":12,"type":"NgtVector3","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14}],"methodsClass":[{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"onAnimate","args":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ChangeDetectionStrategy, Input } from \'@angular/core\';\\nimport { NgtVector3 } from \'@angular-three/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-spincube\',\\n  templateUrl: \'./spincube.component.html\',\\n  styleUrls: [\'./spincube.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class SpincubeComponent implements OnInit {\\n  @Input() position?: NgtVector3; // imported from @angular-three/core\\n\\n  hover = false;\\n  active = false;\\n\\n  onAnimate(mesh: THREE.Object3D) {\\n    mesh.rotation.x = mesh.rotation.y += 0.01;\\n  }\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n  goback() {\\n    this.router.navigate([\'/basicthree\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./spincube.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\">\\n  <ngt-canvas>\\n    <ngt-mesh (animateReady)=\\"onAnimate($event.object)\\">\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-basic-material></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n  </ngt-canvas>\\n\\n  <div>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n\\n    <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\n      Back\\n    </button>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n  </div>\\n  <div style=\\"padding-bottom: 10px;\\">\\n\\n  </div>\\n</div>"},{"name":"StageCenterComponent","id":"component-StageCenterComponent-b5e57f623c172f25f77fe35d11a226e9466c3df8065036bf4958f089171e8ad10aeb0a7dd637bf96fec27653140234fabf5d4737bc43e62bb8ad5366e76892a1","file":"src/app/threejs-soba/stage-center/stage-center.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stage-center","styleUrls":["./stage-center.component.scss"],"styles":[],"templateUrl":["./stage-center.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"alignTop","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20},{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":17},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":16},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n  ChangeDetectionStrategy,\\r\\n  Component,\\r\\n  Input\\r\\n} from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\nimport { NgtGLTFLoader } from \'@angular-three/soba/loaders\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stage-center\',\\r\\n  templateUrl: \'./stage-center.component.html\',\\r\\n  styleUrls: [\'./stage-center.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class StageCenterComponent  {\\r\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\r\\n  cameraFov: number = 75;\\r\\n  lights = true;\\r\\n  controls = true;\\r\\n  alignTop= false;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n  constructor() { }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'ngt-default-center\',\\r\\n  template: `\\r\\n      <ng-container *ngIf=\\"node$ | async as node\\">\\r\\n          <ngt-soba-center [position]=\\"[5, 5, 10]\\" [alignTop]=\\"alignTop\\">\\r\\n              <ngt-mesh>\\r\\n                  <ngt-box-geometry [args]=\\"[10, 10, 10]\\"></ngt-box-geometry>\\r\\n                  <ngt-mesh-normal-material\\r\\n                      [parameters]=\\"{ wireframe: true }\\"\\r\\n                  ></ngt-mesh-normal-material>\\r\\n              </ngt-mesh>\\r\\n              <ngt-primitive\\r\\n                  [object]=\\"node.scene\\"\\r\\n                  [scale]=\\"[0.01, 0.01, 0.01]\\"\\r\\n                  (animateReady)=\\"onTokyoAnimated(node.scene)\\"\\r\\n              ></ngt-primitive>\\r\\n          </ngt-soba-center>\\r\\n      </ng-container>\\r\\n  `,\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class DefaultCenter {\\r\\n  @Input() alignTop = false;\\r\\n\\r\\n  node$ = this.gltfLoader.load(\'/assets/LittlestTokyo.glb\');\\r\\n\\r\\n  constructor(private gltfLoader: NgtGLTFLoader) {}\\r\\n\\r\\n  onTokyoAnimated(scene: THREE.Group) {\\r\\n      scene.rotation.y += 0.01;\\r\\n  }\\r\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-center.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":23},"templateData":"<ngt-canvas\\r\\n  [shadows]=\\"true\\"\\r\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\r\\n  [scene]=\'{background: \\"black\\" | color}\'\\r\\n  style=\\"height:100vh; width: 100vw;\\"\\r\\n>\\r\\n  <ngt-stats></ngt-stats>\\r\\n\\r\\n  <ng-container *ngIf=\\"true\\">\\r\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\r\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\r\\n  </ng-container>\\r\\n\\r\\n  <ngt-soba-orbit-controls\\r\\n    *ngIf=\\"true\\"\\r\\n    [makeDefault]=\\"false\\"\\r\\n  ></ngt-soba-orbit-controls>\\r\\n  <ngt-default-center [alignTop]=\\"alignTop\\"></ngt-default-center>\\r\\n\\r\\n  \\r\\n</ngt-canvas>\\r\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"StageEnvComponent","id":"component-StageEnvComponent-aa0fdfc471ecd53edb53403111e0e20fd527923e75fffb6f6c978eb2a7912be1b7d0f19d0ff76ab2c483f84439526c454f7e0b4ff835cbb3d4ebd6767b7d7804","file":"src/app/threejs-soba/stage-env/stage-env.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stage-env","styleUrls":["./stage-env.component.scss"],"styles":[],"templateUrl":["./stage-env.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"background","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":14},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":13},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"preset","defaultValue":"\\"sunset\\"","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\nimport {\\n  NgtSobaEnvironment\\n} from \'@angular-three/soba/staging\';\\n\\n@Component({\\n  selector: \'app-stage-env\',\\n  templateUrl: \'./stage-env.component.html\',\\n  styleUrls: [\'./stage-env.component.scss\']\\n})\\nexport class StageEnvComponent  {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  preset : NgtSobaEnvironment[\\"preset\\"]= \\"sunset\\";\\n\\n  background= true;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-env.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":22},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-mesh>\\n    <ngt-torus-knot-geometry [args]=\'[1, 0.5, 128, 32]\'></ngt-torus-knot-geometry>\\n    <ngt-mesh-standard-material [parameters]=\'{metalness: 1, roughness: 0}\'></ngt-mesh-standard-material>\\n  </ngt-mesh>\\n  <ngt-soba-environment [preset]=\\"preset\\" [background]=\'background\'></ngt-soba-environment>\\n  <ngt-soba-orbit-controls (ready)=\'$event.autoRotate = true;\'></ngt-soba-orbit-controls>\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"StageShadowComponent","id":"component-StageShadowComponent-17d32836c630d392106a7268009ba99dcf551928299db2152e0d0305c2fbe1952899faccd396a9919c3ae8afc5f4bb377e7b4bc8a54f109fac1be17047a9c201","file":"src/app/threejs-soba/stage-shadow/stage-shadow.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stage-shadow","styleUrls":["./stage-shadow.component.scss"],"styles":[],"templateUrl":["./stage-shadow.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":12},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16}],"methodsClass":[{"name":"animate","args":[{"type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\nimport {  NgtRender } from \'@angular-three/core\';\\n\\n@Component({\\n  selector: \'app-stage-shadow\',\\n  templateUrl: \'./stage-shadow.component.html\',\\n  styleUrls: [\'./stage-shadow.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class StageShadowComponent {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n  animate({\\n    object,\\n    state: { clock },\\n}: {\\n    state: NgtRender;\\n    object: THREE.Object3D;\\n}) {\\n    object.position.y = Math.sin(clock.getElapsedTime()) + 2.5;\\n}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-shadow.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":18},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n        <ngt-mesh [position]=\\"[0, 2, 0]\\" (animateReady)=\\"animate($event)\\">\\n            <ngt-icosahedron-geometry [args]=\\"[1, 2]\\"></ngt-icosahedron-geometry>\\n            <ngt-mesh-basic-material [parameters]=\\"{color: \'lightblue\'}\\"></ngt-mesh-basic-material>\\n        </ngt-mesh>\\n        <ngt-soba-contact-shadows\\n            [position]=\\"[0, 0, 0]\\"\\n            [width]=\\"10\\"\\n            [height]=\\"10\\"\\n            [far]=\\"20\\"\\n            [rotation]=\\"[90 | radian, 0, 0]\\"\\n        ></ngt-soba-contact-shadows>\\n        <ngt-mesh [position]=\\"[0, -0.01, 0]\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\n            <ngt-plane-geometry [args]=\\"[10, 10]\\"></ngt-plane-geometry>\\n            <ngt-mesh-basic-material [parameters]=\\"{color: \'white\'}\\"></ngt-mesh-basic-material>\\n        </ngt-mesh>\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"StageShakeComponent","id":"component-StageShakeComponent-089110a08e78165ddf46cfcba20358707d06622b9881d77a895e7dd138fc5b1e31d2a12827161a54ede161e68fc4d797bfa752d40f2f679930c11676782167c3","file":"src/app/threejs-soba/stage-shake/stage-shake.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stage-shake","styleUrls":["./stage-shake.component.scss"],"styles":[],"templateUrl":["./stage-shake.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":11},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"maxPitch","defaultValue":"0.05","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":19},{"name":"maxRoll","defaultValue":"0.05","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":20},{"name":"maxYaw","defaultValue":"0.05","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":21},{"name":"pitchFrequency","defaultValue":"0.8","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":22},{"name":"rollFrequency","defaultValue":"0.8","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":23},{"name":"yawFrequency","defaultValue":"0.8","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":24}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"onAnimateReady","args":[{"name":"cube","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"cube","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-stage-shake\',\\n  templateUrl: \'./stage-shake.component.html\',\\n  styleUrls: [\'./stage-shake.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class StageShakeComponent  {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n\\n  maxPitch= 0.05;\\n  maxRoll= 0.05;\\n  maxYaw= 0.05;\\n  pitchFrequency= 0.8;\\n  rollFrequency= 0.8;\\n  yawFrequency= 0.8;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  onAnimateReady(cube: THREE.Object3D) {\\n    cube.rotation.x = cube.rotation.y += 0.01;\\n}\\n}\\n\\n\\n\\n@Component({\\n  selector: \'ngt-default-camera-shake-scene\',\\n  template: `\\n      <ngt-mesh (animateReady)=\\"onAnimateReady($event.object)\\">\\n          <ngt-box-geometry [args]=\\"[2, 2, 2]\\"></ngt-box-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{ wireframe: true }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n      <ngt-mesh [position]=\\"[0, -6, 0]\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\n          <ngt-plane-geometry\\n              [args]=\\"[200, 200, 75, 75]\\"\\n          ></ngt-plane-geometry>\\n          <ngt-mesh-standard-material\\n              [parameters]=\\"{\\n                  wireframe: true,\\n                  color: \'red\',\\n                  side: \'double\' | side\\n              }\\"\\n          ></ngt-mesh-standard-material>\\n      </ngt-mesh>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DefaultCameraShakeScene {\\n  onAnimateReady(cube: THREE.Object3D) {\\n      cube.rotation.x = cube.rotation.y += 0.01;\\n  }\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-shake.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":24},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"false\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n  <ngt-soba-orbit-controls [makeDefault]=\\"true\\"></ngt-soba-orbit-controls>\\n  <ngt-soba-camera-shake\\n  [maxPitch]=\\"maxPitch\\"\\n  [maxRoll]=\\"maxRoll\\"\\n  [maxYaw]=\\"maxYaw\\"\\n  [pitchFrequency]=\\"pitchFrequency\\"\\n  [rollFrequency]=\\"rollFrequency\\"\\n  [yawFrequency]=\\"yawFrequency\\"\\n></ngt-soba-camera-shake>\\n<ngt-default-camera-shake-scene></ngt-default-camera-shake-scene>\\n\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"StageSkyComponent","id":"component-StageSkyComponent-77a39513b8d02fe321ce88f34f4b4398c1ac539cca5da65c595d12e48589fce0082b00cccbfa86cc8d3f07e8471f54625ced75521df392e40e04e486f0d40884","file":"src/app/threejs-soba/stage-sky/stage-sky.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stage-sky","styleUrls":["./stage-sky.component.scss"],"styles":[],"templateUrl":["./stage-sky.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":11},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-stage-sky\',\\n  templateUrl: \'./stage-sky.component.html\',\\n  styleUrls: [\'./stage-sky.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class StageSkyComponent  {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-sky.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":17},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-sky></ngt-soba-sky>\\n  <ngt-mesh [rotation]=\\"[90 | radian, 0, 0]\\">\\n      <ngt-plane-geometry [args]=\\"[100, 100, 4, 4]\\"></ngt-plane-geometry>\\n      <ngt-mesh-basic-material [parameters]=\\"{color: \'black\', wireframe: true}\\"></ngt-mesh-basic-material>\\n  </ngt-mesh>\\n  <ngt-axes-helper></ngt-axes-helper>\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"StageSpotComponent","id":"component-StageSpotComponent-3e91f70172dc2142e0f07f5fbab248cb767531d10f58c3b32b9d0a5dcdbef1c5cb37c386ab7ac6db51adabacb74a3f8ac066346316331678781e5d44add9fa12","file":"src/app/threejs-soba/stage-spot/stage-spot.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"NGT_SOBA_DEPTH_BUFFER_PROVIDER"}],"selector":"app-stage-spot","styleUrls":["./stage-spot.component.scss"],"styles":[],"templateUrl":["./stage-spot.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28},{"name":"cameraPosition","defaultValue":"[-5,5,5]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":27},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"lights","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy,NgModule } from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\nimport {  NgtStore } from \'@angular-three/core\';\\r\\nimport {\\r\\n  NGT_SOBA_DEPTH_BUFFER_PROVIDER,\\r\\n  NgtSobaDepthBuffer\\r\\n} from \'@angular-three/soba/misc\';\\r\\nimport { map } from \'rxjs\';\\r\\nimport { NgtRadianPipeModule } from \'@angular-three/core\';\\r\\nimport {\\r\\n    NgtBoxGeometryModule,\\r\\n    NgtPlaneGeometryModule,\\r\\n} from \'@angular-three/core/geometries\';\\r\\nimport { NgtMeshPhongMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport { NgtSobaSpotLightModule } from \'@angular-three/soba/staging\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stage-spot\',\\r\\n  templateUrl: \'./stage-spot.component.html\',\\r\\n  styleUrls: [\'./stage-spot.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n  providers: [NGT_SOBA_DEPTH_BUFFER_PROVIDER]\\r\\n})\\r\\nexport class StageSpotComponent {\\r\\n  cameraPosition: [number, number, number] = [-5,5,5];\\r\\n  cameraFov: number = 75;\\r\\n  lights = false;\\r\\n  controls = true;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n\\r\\n  constructor() {\\r\\n\\r\\n}\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'ngt-default-spot-light\',\\r\\n  template: `\\r\\n      <ngt-soba-spot-light\\r\\n          [penumbra]=\\"0.5\\"\\r\\n          [position]=\\"[-3, 2, 0]\\"\\r\\n          [intensity]=\\"0.5\\"\\r\\n          [angle]=\\"0.5\\"\\r\\n          color=\\"#0EEC82\\"\\r\\n          [castShadow]=\\"true\\"\\r\\n          [depthBuffer]=\\"depthBuffer\\"\\r\\n      ></ngt-soba-spot-light>\\r\\n\\r\\n      <ngt-soba-spot-light\\r\\n          [penumbra]=\\"0.5\\"\\r\\n          [position]=\\"[3, 2, 0]\\"\\r\\n          [intensity]=\\"0.5\\"\\r\\n          [angle]=\\"0.5\\"\\r\\n          color=\\"#FF005B\\"\\r\\n          [castShadow]=\\"true\\"\\r\\n          [depthBuffer]=\\"depthBuffer\\"\\r\\n      ></ngt-soba-spot-light>\\r\\n\\r\\n      <ngt-mesh [position]=\\"[0, 0.5, 0]\\" [castShadow]=\\"true\\">\\r\\n          <ngt-box-geometry></ngt-box-geometry>\\r\\n          <ngt-mesh-phong-material></ngt-mesh-phong-material>\\r\\n      </ngt-mesh>\\r\\n\\r\\n      <ngt-mesh [receiveShadow]=\\"true\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\r\\n          <ngt-plane-geometry [args]=\\"[100, 100]\\"></ngt-plane-geometry>\\r\\n          <ngt-mesh-phong-material></ngt-mesh-phong-material>\\r\\n      </ngt-mesh>\\r\\n  `,\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n  providers: [NGT_SOBA_DEPTH_BUFFER_PROVIDER],\\r\\n})\\r\\nexport class DefaultSpotLight extends NgtStore<{\\r\\n  depthBuffer: THREE.DepthTexture;\\r\\n}> {\\r\\n  constructor(sobaDepthBuffer: NgtSobaDepthBuffer) {\\r\\n      super();\\r\\n      this.set(\\r\\n          sobaDepthBuffer.use().pipe(map((depthBuffer) => ({ depthBuffer })))\\r\\n      );\\r\\n  }\\r\\n\\r\\n  get depthBuffer() {\\r\\n      return this.get((s) => s.depthBuffer);\\r\\n  }\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [DefaultSpotLight],\\r\\n  exports: [DefaultSpotLight],\\r\\n  imports: [\\r\\n      NgtSobaSpotLightModule,\\r\\n      NgtMeshPhongMaterialModule,\\r\\n      NgtMeshModule,\\r\\n      NgtPlaneGeometryModule,\\r\\n      NgtBoxGeometryModule,\\r\\n      CommonModule,\\r\\n      NgtRadianPipeModule,\\r\\n  ],\\r\\n})\\r\\nexport class DefaultSpotLightModule {}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-spot.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":33},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"false\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n  <ngt-default-spot-light>    \\n  </ngt-default-spot-light>\\n\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"StageStageComponent","id":"component-StageStageComponent-7c3aac4158e86cc26fbaf97c99c840e1e4f5f0611c92dbb3b56befaab625c6f9c0ae3cdd6a47da1beaf5535b6c9aa55e0369432cbd9b6fe9f6f4da277027ced3","file":"src/app/threejs-soba/stage-stage/stage-stage.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stage-stage","styleUrls":["./stage-stage.component.scss"],"styles":[],"templateUrl":["./stage-stage.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":26},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":25},{"name":"contactShadow","defaultValue":"{\\r\\n    blur: 2,\\r\\n    opacity: 0.5,\\r\\n    position: [0, 0, 0],\\r\\n}","deprecated":false,"deprecationMessage":"","type":"stagestatege","optional":false,"description":"","line":33},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28},{"name":"environment","defaultValue":"\\"forest\\"","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40},{"name":"intensity","defaultValue":".10","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":39},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"preset","defaultValue":"presets.portrait","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42},{"name":"shadows","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\nimport {  presetsObj } from \'@angular-three/soba/staging\';\\r\\nimport {\\r\\n  NgtSobaEnvironment\\r\\n} from \'@angular-three/soba/staging\';\\r\\n\\r\\nenum presets {\\r\\n  rembrant = \'rembrandt\',\\r\\n  portrait = \'portrait\',\\r\\n  upfront = \'upfront\',\\r\\n  soft = \'soft\',\\r\\n}\\r\\n\\r\\ninterface stagestatege {\\r\\n   blur: number; opacity?: number; position?: [x: number, y: number, z: number]; \\r\\n}\\r\\n@Component({\\r\\n  selector: \'app-stage-stage\',\\r\\n  templateUrl: \'./stage-stage.component.html\',\\r\\n  styleUrls: [\'./stage-stage.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush\\r\\n})\\r\\nexport class StageStageComponent {\\r\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\r\\n  cameraFov: number = 75;\\r\\n  lights = true;\\r\\n  controls = true;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n\\r\\n  contactShadow :stagestatege= {\\r\\n    blur: 2,\\r\\n    opacity: 0.5,\\r\\n    position: [0, 0, 0],\\r\\n};\\r\\nshadows= true;\\r\\nintensity= .10;\\r\\nenvironment : NgtSobaEnvironment[\\"preset\\"]= \\"forest\\";\\r\\n\\r\\npreset= presets.portrait;\\r\\n\\r\\n  constructor() { }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n  }\\r\\n\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-stage.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":42},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-stage\\n  [contactShadow]=\\"contactShadow\\"\\n  [shadows]=\\"shadows\\"\\n  [intensity]=\\"intensity\\"\\n  [environment]=\\"environment\\"\\n  [preset]=\\"preset\\"\\n>\\n  <ngt-mesh>\\n      <ngt-sphere-geometry [args]=\\"[1, 24, 24]\\"></ngt-sphere-geometry>\\n      <ngt-mesh-phong-material [parameters]=\'{color: \\"royalblue\\"}\'></ngt-mesh-phong-material>\\n  </ngt-mesh>\\n</ngt-soba-stage>\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"StageStarsComponent","id":"component-StageStarsComponent-2db3e2d7c9e6cb07408599b9a3c709febbe55e853c85962b51226bd3bb3c4245478d0861d1e41d78446b25dcf1bec2e635e4466c575f55a60573af07afbb74dc","file":"src/app/threejs-soba/stage-stars/stage-stars.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-stage-stars","styleUrls":["./stage-stars.component.scss"],"styles":[],"templateUrl":["./stage-stars.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"black","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"cameraFov","defaultValue":"75","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12},{"name":"cameraPosition","defaultValue":"[0, 0, 100]","deprecated":false,"deprecationMessage":"","type":"[number, number, number]","optional":false,"description":"","line":11},{"name":"controls","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"lights","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"loader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17},{"name":"makeControlsDefault","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ChangeDetectionStrategy } from \'@angular/core\';\\nimport * as THREE from \'three\';\\n\\n@Component({\\n  selector: \'app-stage-stars\',\\n  templateUrl: \'./stage-stars.component.html\',\\n  styleUrls: [\'./stage-stars.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class StageStarsComponent  {\\n  cameraPosition: [number, number, number] = [0, 0, 100];\\n  cameraFov: number = 75;\\n  lights = true;\\n  controls = true;\\n  makeControlsDefault = false;\\n  black = true;\\n  loader = false;\\n  \\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./stage-stars.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":17},"templateData":"<ngt-canvas\\n  [shadows]=\\"true\\"\\n  [camera]=\\"{position: cameraPosition, fov: cameraFov}\\"\\n  [scene]=\'{background: \\"black\\" | color}\'\\n  style=\\"height:100vh; width: 100vw;\\"\\n>\\n  <ngt-stats></ngt-stats>\\n\\n  <ng-container *ngIf=\\"true\\">\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light [intensity]=\\"1\\" [position]=\\"[0, 6, 0]\\"></ngt-point-light>\\n  </ng-container>\\n\\n  <ngt-soba-orbit-controls\\n    *ngIf=\\"true\\"\\n    [makeDefault]=\\"false\\"\\n  ></ngt-soba-orbit-controls>\\n\\n  <ngt-soba-stars></ngt-soba-stars>\\n  <ngt-mesh [rotation]=\\"[90 | radian, 0, 0]\\">\\n    <ngt-plane-geometry  [args]=\\"[100, 100, 4, 4]\\"></ngt-plane-geometry>\\n    <ngt-mesh-basic-material [parameters]=\\"{ wireframe: true }\\"></ngt-mesh-basic-material>\\n  </ngt-mesh>\\n  <ngt-axes-helper></ngt-axes-helper>\\n  \\n</ngt-canvas>\\n<ngt-soba-loader *ngIf=\\"false\\"></ngt-soba-loader>"},{"name":"ThreejsBasicComponent","id":"component-ThreejsBasicComponent-31859ad27d0958f95d1bddab4a2c713131832716f2a243a3a36be06b2922b5a95b582aba92415d62e4db2d5881cacc88125832be32c328b1f9cfa05365275f78","file":"src/app/threejs-basic/threejs-basic.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-threejs-basic","styleUrls":["./threejs-basic.component.scss"],"styles":[],"templateUrl":["./threejs-basic.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"destroyed","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"displayNameMap","defaultValue":"new Map([\\n    [Breakpoints.XSmall, \'XSmall\'],\\n    [Breakpoints.Small, \'Small\'],\\n    [Breakpoints.Medium, \'Medium\'],\\n    [Breakpoints.Large, \'Large\'],\\n    [Breakpoints.XLarge, \'XLarge\'],\\n  ])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"flexwidth","defaultValue":"\\"100vw\\"","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,OnDestroy } from \'@angular/core\';\\nimport { Observable,Subject, Subscription } from \'rxjs\';\\nimport {BreakpointObserver, Breakpoints} from \'@angular/cdk/layout\';\\nimport {takeUntil} from \'rxjs/operators\';\\n \\n\\n@Component({\\n  selector: \'app-threejs-basic\',\\n  templateUrl: \'./threejs-basic.component.html\',\\n  styleUrls: [\'./threejs-basic.component.scss\']\\n})\\nexport class ThreejsBasicComponent implements OnInit,OnDestroy {\\n  destroyed = new Subject<void>();\\n  displayNameMap = new Map([\\n    [Breakpoints.XSmall, \'XSmall\'],\\n    [Breakpoints.Small, \'Small\'],\\n    [Breakpoints.Medium, \'Medium\'],\\n    [Breakpoints.Large, \'Large\'],\\n    [Breakpoints.XLarge, \'XLarge\'],\\n  ]);\\n  flexwidth=\\"100vw\\";\\n\\n  constructor(breakpointObserver: BreakpointObserver) {\\n\\n    breakpointObserver.observe([\\n      Breakpoints.XSmall,\\n      Breakpoints.Small,\\n      Breakpoints.Medium,\\n      Breakpoints.Large,\\n      Breakpoints.XLarge,\\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\\n        for (const query of Object.keys(result.breakpoints)) {\\n          if (result.breakpoints[query]) {\\n            console.log(this.displayNameMap.get(query));\\n            switch(this.displayNameMap.get(query)){\\n              case \'XSmall\':\\n                 this.flexwidth=\\"100vw\\";\\n                break;\\n                default:\\n                  this.flexwidth=\\"100vw\\";\\n                  break;\\n \\n            };\\n          }\\n        }\\n    });\\n\\n\\n   }\\n\\n  ngOnInit(): void {\\n  }\\n  ngOnDestroy() {\\n    this.destroyed.next();\\n    this.destroyed.complete();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./threejs-basic.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div [fxFlex]=\\"flexwidth\\" fxFill  >\x3c!--style=\\"background-color: blue; \\" fxLayoutAlign=\\"center center\\"--\x3e\\n    <router-outlet></router-outlet>\\n</div>\\n"},{"name":"ThreejsSobaComponent","id":"component-ThreejsSobaComponent-4b4dbccbe10821eebd1af4322650c7b500be567cacedad9c6386fd5099b6ea1d22917868fb33e6ed155f8f2fe6468f5fab83b171ad3b33b79d5b8f5046f0424e","file":"src/app/threejs-soba/threejs-soba.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-threejs-soba","styleUrls":["./threejs-soba.component.scss"],"styles":[],"templateUrl":["./threejs-soba.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"destroyed","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":12},{"name":"displayNameMap","defaultValue":"new Map([\\n    [Breakpoints.XSmall, \'XSmall\'],\\n    [Breakpoints.Small, \'Small\'],\\n    [Breakpoints.Medium, \'Medium\'],\\n    [Breakpoints.Large, \'Large\'],\\n    [Breakpoints.XLarge, \'XLarge\'],\\n  ])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"flexwidth","defaultValue":"\\"100vw\\"","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit,OnDestroy } from \'@angular/core\';\\nimport { Observable,Subject, Subscription } from \'rxjs\';\\nimport {BreakpointObserver, Breakpoints} from \'@angular/cdk/layout\';\\nimport {takeUntil} from \'rxjs/operators\';\\n \\n@Component({\\n  selector: \'app-threejs-soba\',\\n  templateUrl: \'./threejs-soba.component.html\',\\n  styleUrls: [\'./threejs-soba.component.scss\']\\n})\\nexport class ThreejsSobaComponent implements OnInit,OnDestroy {\\n  destroyed = new Subject<void>();\\n  displayNameMap = new Map([\\n    [Breakpoints.XSmall, \'XSmall\'],\\n    [Breakpoints.Small, \'Small\'],\\n    [Breakpoints.Medium, \'Medium\'],\\n    [Breakpoints.Large, \'Large\'],\\n    [Breakpoints.XLarge, \'XLarge\'],\\n  ]);\\n  flexwidth=\\"100vw\\";\\n\\n  constructor(breakpointObserver: BreakpointObserver) {\\n\\n    breakpointObserver.observe([\\n      Breakpoints.XSmall,\\n      Breakpoints.Small,\\n      Breakpoints.Medium,\\n      Breakpoints.Large,\\n      Breakpoints.XLarge,\\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\\n        for (const query of Object.keys(result.breakpoints)) {\\n          if (result.breakpoints[query]) {\\n            console.log(this.displayNameMap.get(query));\\n            switch(this.displayNameMap.get(query)){\\n              case \'XSmall\':\\n                 this.flexwidth=\\"100vw\\";\\n                break;\\n                default:\\n                  this.flexwidth=\\"100vw\\";\\n                  break;\\n \\n            };\\n          }\\n        }\\n    });\\n\\n\\n   }\\n\\n  ngOnInit(): void {\\n  }\\n  ngOnDestroy() {\\n    this.destroyed.next();\\n    this.destroyed.complete();\\n  }\\n\\n}\\n\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./threejs-soba.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div [fxFlex]=\\"flexwidth\\" fxFill  >\x3c!--style=\\"background-color: blue; \\" fxLayoutAlign=\\"center center\\"--\x3e\\n    <router-outlet></router-outlet>\\n</div>\\n"},{"name":"TransformControlsDemoComponent","id":"component-TransformControlsDemoComponent-1be90ec8a09bc8d3a0a8b0b684d690fb370c2b19fd664ecd5b6975ba26da370a83967c6928e56122d1c2ee567fde555e2b1d5145b4000b41ffb7b7ddfdf9db66","file":"src/app/threejs-basic/transform-controls-demo/transform-controls-demo.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"demo-transform-controls","styleUrls":[],"styles":[],"template":"<ngt-canvas\\n    [shadows]=\\"true\\"\\n    [camera]=\\"{ position: [-5, 5, 5], fov: 75 }\\"\\n    [scene]=\\"{ background: \'black\' | color }\\"\\n    style=\\"height:100vh; width: 100vw;\\"\\n>\\n    <ngt-stats></ngt-stats>\\n\\n    <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\n    <ngt-point-light\\n        [intensity]=\\"1\\"\\n        [position]=\\"[0, 6, 0]\\"\\n    ></ngt-point-light>\\n\\n    <ngt-soba-transform-controls>\\n        <ngt-mesh>\\n            <ngt-box-geometry></ngt-box-geometry>\\n            <ngt-mesh-basic-material\\n                [parameters]=\\"{ wireframe: true }\\"\\n            ></ngt-mesh-basic-material>\\n        </ngt-mesh>\\n    </ngt-soba-transform-controls>\\n\\n    <ngt-soba-orbit-controls\\n        [makeDefault]=\\"true\\"\\n    ></ngt-soba-orbit-controls>\\n</ngt-canvas>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-transform-controls\',\\r\\n    template: `\\r\\n        <ngt-canvas\\r\\n            [shadows]=\\"true\\"\\r\\n            [camera]=\\"{ position: [-5, 5, 5], fov: 75 }\\"\\r\\n            [scene]=\\"{ background: \'black\' | color }\\"\\r\\n            style=\\"height:100vh; width: 100vw;\\"\\r\\n        >\\r\\n            <ngt-stats></ngt-stats>\\r\\n\\r\\n            <ngt-ambient-light [intensity]=\\"0.8\\"></ngt-ambient-light>\\r\\n            <ngt-point-light\\r\\n                [intensity]=\\"1\\"\\r\\n                [position]=\\"[0, 6, 0]\\"\\r\\n            ></ngt-point-light>\\r\\n\\r\\n            <ngt-soba-transform-controls>\\r\\n                <ngt-mesh>\\r\\n                    <ngt-box-geometry></ngt-box-geometry>\\r\\n                    <ngt-mesh-basic-material\\r\\n                        [parameters]=\\"{ wireframe: true }\\"\\r\\n                    ></ngt-mesh-basic-material>\\r\\n                </ngt-mesh>\\r\\n            </ngt-soba-transform-controls>\\r\\n\\r\\n            <ngt-soba-orbit-controls\\r\\n                [makeDefault]=\\"true\\"\\r\\n            ></ngt-soba-orbit-controls>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class TransformControlsDemoComponent {}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"TwospinComponent","id":"component-TwospinComponent-3f294e9093882fe55ca2781b0bb03357f99291a5c909ba5431dec275468e35f0d981daaa22d924ea89078c373639c459baee56c1422874b34232369692183e61","file":"src/app/threejs-basic/twospin/twospin.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-twospin","styleUrls":["./twospin.component.scss"],"styles":[],"templateUrl":["./twospin.component.html"],"viewProviders":[],"inputsClass":[{"name":"position","deprecated":false,"deprecationMessage":"","line":12,"type":"NgtVector3","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"active2","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18},{"name":"hover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14},{"name":"hover2","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17}],"methodsClass":[{"name":"goback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":""},{"name":"onAnimate","args":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mesh","type":"THREE.Object3D","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ChangeDetectionStrategy, Input } from \'@angular/core\';\\nimport { NgtVector3 } from \'@angular-three/core\';\\nimport { Router, ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-twospin\',\\n  templateUrl: \'./twospin.component.html\',\\n  styleUrls: [\'./twospin.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class TwospinComponent implements OnInit {\\n  @Input() position?: NgtVector3; // imported from @angular-three/core\\n\\n  hover = false;\\n  active = false;\\n\\n  hover2 = false;\\n  active2 = false;\\n\\n  onAnimate(mesh: THREE.Object3D) {\\n    mesh.rotation.x = mesh.rotation.y += 0.01;\\n  }\\n  constructor(private route: ActivatedRoute, private router: Router) { }\\n\\n  ngOnInit(): void {\\n  }\\n  goback() {\\n    this.router.navigate([\'/basicthree\'], { relativeTo: this.route });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./twospin.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div style=\\"height: 80vh; width: 100vw;\\" fxLayout=\\"column\\" fxLayoutGap=\\"2em\\">\\n  <ngt-canvas>\\n    <ngt-mesh (animateReady)=\\"onAnimate($event.object)\\" (click)=\\"active = !active\\" (pointerover)=\\"hover = true\\"\\n      (pointerout)=\\"hover = false\\" [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\" [position]=\\"[1, 0, 0]\\">\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-basic-material [parameters]=\\"{ color: hover ? \'turquoise\' : \'tomato\' }\\"></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n\\n    <ngt-mesh #mesh2=\\"ngtMesh\\" (animateReady)=\\"onAnimate(mesh2.mesh)\\" (click)=\\"active2 = !active2\\"\\n      (pointerover)=\\"hover2 = true\\" (pointerout)=\\"hover2 = false\\" [scale]=\\"active2 ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\n      [position]=\\"[-1, 0, 0]\\">\\n      <ngt-box-geometry></ngt-box-geometry>\\n      <ngt-mesh-basic-material [parameters]=\\"{ color: hover2 ? \'turquoise\' : \'tomato\' }\\"></ngt-mesh-basic-material>\\n    </ngt-mesh>\\n  </ngt-canvas>\\n\\n\\n  <div>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n\\n    <button mat-raised-button color=\\"primary\\" fxFlex (click)=\\"goback()\\">\\n      Back\\n    </button>\\n    <div style=\\"padding-bottom: 1em;\\" fxFlex=\\"5em\\">\\n\\n    </div>\\n  </div>\\n  <div style=\\"padding-bottom: 10px;\\">\\n\\n  </div>\\n</div>"}],"modules":[{"name":"AppModule","id":"module-AppModule-a11fd354a6af6d43b25b455fce8518227292350794b52dbbfd675916fca80740cabe60d8680135a71960f268592fe3bc2f619ce6c62a2b9824d5594183c490b4","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\n\\nimport { AppRoutingModule } from \'./app-routing.module\';\\nimport { AppComponent } from \'./app.component\';\\n\\nimport { initializeApp,provideFirebaseApp } from \'@angular/fire/app\';\\nimport { environment } from \'../environments/environment\';\\nimport { provideAuth,getAuth } from \'@angular/fire/auth\';\\nimport { provideFirestore,getFirestore } from \'@angular/fire/firestore\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { FontAwesomeModule } from \'@fortawesome/angular-fontawesome\';\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent\\n  ],\\n  imports: [\\n    BrowserModule,\\n    AppRoutingModule,\\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\\n    provideAuth(() => getAuth()),\\n    provideFirestore(() => getFirestore()),\\n    BrowserAnimationsModule,\\n    HttpClientModule,\\n    FontAwesomeModule\\n  ],\\n  providers: [],\\n  bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AppComponent"}]},{"type":"imports","elements":[{"name":"AppRoutingModule"},{"name":"provideAuth(() => getAuth())"},{"name":"provideFirebaseApp(() => initializeApp(environment"},{"name":"provideFirestore(() => getFirestore())"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","id":"module-AppRoutingModule-e8acc699857ec2feb1864bda6611d7f320617152989543f37d5c3eb77d351464f2763b9e307d1315f2c0e7c5bc7d55aa03c2b1451b30a71015399da55895d5e3","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\n\\nconst routes: Routes = [\\n  \\n  { path: \'\', redirectTo: \'beforelogin\', pathMatch: \'full\' },  \\n  { path: \'beforelogin\', loadChildren: () => \\"import(\'./before-login/before-login.module\').then(m => m.BeforeLoginModule)\\" },\\n  { path: \'basicthree\', loadChildren: () => \\"import(\'./threejs-basic/threejs-basic.module\').then(m => m.ThreejsBasicModule)\\" },\\n  \\n  { path: \'3jssoba\', loadChildren: () => \\"import(\'./threejs-soba/threejs-soba.module\').then(m => m.ThreejsSobaModule)\\" }];\\n\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes)],\\n  exports: [RouterModule]\\n})\\nexport class AppRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AppSharedModule","id":"module-AppSharedModule-cc71b56848580073fda8d9dd804cf52173dd18bae240e41510559772df265436ae900fa9df4274827bba995a380c20606fdafd94ee45e4f1e9f60f41d3cc9971","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app-shared/app-shared.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { MaterialModule } from \'../material/material.module\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\n\\nimport { FontAwesomeModule, FaIconLibrary } from \'@fortawesome/angular-fontawesome\';\\nimport { faGoogle } from \'@fortawesome/free-brands-svg-icons/faGoogle\';\\nimport { faWhatsappSquare } from \'@fortawesome/free-brands-svg-icons/faWhatsappSquare\';\\nimport { faSignOutAlt ,faInfoCircle ,faCalendarAlt,faHome, faPhone, faArrowAltCircleRight, faMotorcycle, faCoffee, faTruckPickup, faCarSide, faReceipt } from \'@fortawesome/free-solid-svg-icons\';\\nimport { faLaugh, faSquare } from \'@fortawesome/free-regular-svg-icons\';\\nimport { faLocationArrow } from \'@fortawesome/free-solid-svg-icons/faLocationArrow\';\\n\\n@NgModule({\\n  declarations: [],\\n  exports: [\\n    CommonModule,\\n    MaterialModule,\\n    FormsModule, ReactiveFormsModule,\\n    FlexLayoutModule,\\n    FontAwesomeModule\\n  ]\\n})\\nexport class AppSharedModule { \\n  constructor(private library: FaIconLibrary) {\\n    // tslint:disable-next-line: max-line-length\\n    library.addIcons( faLocationArrow, faSignOutAlt, faInfoCircle, faCalendarAlt,faHome, faPhone, faArrowAltCircleRight, faMotorcycle, faGoogle, faSquare, faCoffee, faLaugh, faTruckPickup, faCarSide, faReceipt, faWhatsappSquare);\\n  }\\n\\n\\n}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"MaterialModule"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BeforeLoginModule","id":"module-BeforeLoginModule-928873835cfd3a50baca0ad56c01385bcc2912183e801606ab9b740a1807a1fa644ee7c0a80b77aa2eb2cfee6602eff177c362aab9efeb3e092959b0aafda753","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/before-login/before-login.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BeforeLoginRoutingModule } from \'./before-login-routing.module\';\\nimport { BeforeLoginComponent } from \'./before-login.component\';\\nimport { AppSharedModule } from \'../app-shared/app-shared.module\';\\n\\n@NgModule({\\n  declarations: [\\n    BeforeLoginComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BeforeLoginRoutingModule,\\n    AppSharedModule\\n  ]\\n})\\nexport class BeforeLoginModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BeforeLoginComponent"}]},{"type":"imports","elements":[{"name":"AppSharedModule"},{"name":"BeforeLoginRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BeforeLoginRoutingModule","id":"module-BeforeLoginRoutingModule-004a97c485c793b3b5b94b4ad7cb20214570d822d7639c6168430058d38f5d11f2549465f589872b54c7b85a3e179b12e4380af1e76a5f6165abc0f085cd0be3","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/before-login/before-login-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BeforeLoginComponent } from \'./before-login.component\';\\n\\nconst routes: Routes = [{   \\n  path: \'\',\\n  component: BeforeLoginComponent \\n    }];\\n\\n\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BeforeLoginRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DefaultSpotLightModule","id":"module-DefaultSpotLightModule-3e91f70172dc2142e0f07f5fbab248cb767531d10f58c3b32b9d0a5dcdbef1c5cb37c386ab7ac6db51adabacb74a3f8ac066346316331678781e5d44add9fa12","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/threejs-soba/stage-spot/stage-spot.component.ts","methods":[],"sourceCode":"import { Component,ChangeDetectionStrategy,NgModule } from \'@angular/core\';\\r\\nimport * as THREE from \'three\';\\r\\nimport {  NgtStore } from \'@angular-three/core\';\\r\\nimport {\\r\\n  NGT_SOBA_DEPTH_BUFFER_PROVIDER,\\r\\n  NgtSobaDepthBuffer\\r\\n} from \'@angular-three/soba/misc\';\\r\\nimport { map } from \'rxjs\';\\r\\nimport { NgtRadianPipeModule } from \'@angular-three/core\';\\r\\nimport {\\r\\n    NgtBoxGeometryModule,\\r\\n    NgtPlaneGeometryModule,\\r\\n} from \'@angular-three/core/geometries\';\\r\\nimport { NgtMeshPhongMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport { NgtSobaSpotLightModule } from \'@angular-three/soba/staging\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-stage-spot\',\\r\\n  templateUrl: \'./stage-spot.component.html\',\\r\\n  styleUrls: [\'./stage-spot.component.scss\'],\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n  providers: [NGT_SOBA_DEPTH_BUFFER_PROVIDER]\\r\\n})\\r\\nexport class StageSpotComponent {\\r\\n  cameraPosition: [number, number, number] = [-5,5,5];\\r\\n  cameraFov: number = 75;\\r\\n  lights = false;\\r\\n  controls = true;\\r\\n  makeControlsDefault = false;\\r\\n  black = true;\\r\\n  loader = false;\\r\\n\\r\\n  constructor() {\\r\\n\\r\\n}\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n@Component({\\r\\n  selector: \'ngt-default-spot-light\',\\r\\n  template: `\\r\\n      <ngt-soba-spot-light\\r\\n          [penumbra]=\\"0.5\\"\\r\\n          [position]=\\"[-3, 2, 0]\\"\\r\\n          [intensity]=\\"0.5\\"\\r\\n          [angle]=\\"0.5\\"\\r\\n          color=\\"#0EEC82\\"\\r\\n          [castShadow]=\\"true\\"\\r\\n          [depthBuffer]=\\"depthBuffer\\"\\r\\n      ></ngt-soba-spot-light>\\r\\n\\r\\n      <ngt-soba-spot-light\\r\\n          [penumbra]=\\"0.5\\"\\r\\n          [position]=\\"[3, 2, 0]\\"\\r\\n          [intensity]=\\"0.5\\"\\r\\n          [angle]=\\"0.5\\"\\r\\n          color=\\"#FF005B\\"\\r\\n          [castShadow]=\\"true\\"\\r\\n          [depthBuffer]=\\"depthBuffer\\"\\r\\n      ></ngt-soba-spot-light>\\r\\n\\r\\n      <ngt-mesh [position]=\\"[0, 0.5, 0]\\" [castShadow]=\\"true\\">\\r\\n          <ngt-box-geometry></ngt-box-geometry>\\r\\n          <ngt-mesh-phong-material></ngt-mesh-phong-material>\\r\\n      </ngt-mesh>\\r\\n\\r\\n      <ngt-mesh [receiveShadow]=\\"true\\" [rotation]=\\"[-90 | radian, 0, 0]\\">\\r\\n          <ngt-plane-geometry [args]=\\"[100, 100]\\"></ngt-plane-geometry>\\r\\n          <ngt-mesh-phong-material></ngt-mesh-phong-material>\\r\\n      </ngt-mesh>\\r\\n  `,\\r\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n  providers: [NGT_SOBA_DEPTH_BUFFER_PROVIDER],\\r\\n})\\r\\nexport class DefaultSpotLight extends NgtStore<{\\r\\n  depthBuffer: THREE.DepthTexture;\\r\\n}> {\\r\\n  constructor(sobaDepthBuffer: NgtSobaDepthBuffer) {\\r\\n      super();\\r\\n      this.set(\\r\\n          sobaDepthBuffer.use().pipe(map((depthBuffer) => ({ depthBuffer })))\\r\\n      );\\r\\n  }\\r\\n\\r\\n  get depthBuffer() {\\r\\n      return this.get((s) => s.depthBuffer);\\r\\n  }\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [DefaultSpotLight],\\r\\n  exports: [DefaultSpotLight],\\r\\n  imports: [\\r\\n      NgtSobaSpotLightModule,\\r\\n      NgtMeshPhongMaterialModule,\\r\\n      NgtMeshModule,\\r\\n      NgtPlaneGeometryModule,\\r\\n      NgtBoxGeometryModule,\\r\\n      CommonModule,\\r\\n      NgtRadianPipeModule,\\r\\n  ],\\r\\n})\\r\\nexport class DefaultSpotLightModule {}","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DefaultSpotLight"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"DefaultSpotLight"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MaterialModule","id":"module-MaterialModule-7359dc9b5b8d191b66eb75ee366a016954e82cc453f657e8c4d9a3d3728b55c6afcb6d1aa5250adc01e8090d1a09b5cd4fd398d032a591193e9902792be5e46d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/material/material.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { A11yModule } from \'@angular/cdk/a11y\';\\nimport {CdkAccordionModule} from \'@angular/cdk/accordion\';\\nimport { ClipboardModule } from \'@angular/cdk/clipboard\';\\nimport { DragDropModule } from \'@angular/cdk/drag-drop\';\\nimport { PortalModule } from \'@angular/cdk/portal\';\\nimport { ScrollingModule } from \'@angular/cdk/scrolling\';\\nimport { CdkStepperModule } from \'@angular/cdk/stepper\';\\nimport { CdkTableModule } from \'@angular/cdk/table\';\\nimport { CdkTreeModule } from \'@angular/cdk/tree\';\\nimport { MatAutocompleteModule } from \'@angular/material/autocomplete\';\\nimport { MatBadgeModule } from \'@angular/material/badge\';\\nimport { MatBottomSheetModule } from \'@angular/material/bottom-sheet\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatButtonToggleModule } from \'@angular/material/button-toggle\';\\nimport { MatCardModule } from \'@angular/material/card\';\\nimport { MatCheckboxModule } from \'@angular/material/checkbox\';\\nimport { MatChipsModule } from \'@angular/material/chips\';\\nimport { MatStepperModule } from \'@angular/material/stepper\';\\nimport { MatDatepickerModule } from \'@angular/material/datepicker\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatDividerModule } from \'@angular/material/divider\';\\nimport { MatExpansionModule } from \'@angular/material/expansion\';\\nimport { MatGridListModule } from \'@angular/material/grid-list\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatListModule } from \'@angular/material/list\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatNativeDateModule, MatRippleModule } from \'@angular/material/core\';\\nimport { MatPaginatorModule } from \'@angular/material/paginator\';\\nimport { MatProgressBarModule } from \'@angular/material/progress-bar\';\\nimport { MatProgressSpinnerModule } from \'@angular/material/progress-spinner\';\\nimport { MatRadioModule } from \'@angular/material/radio\';\\nimport { MatSelectModule } from \'@angular/material/select\';\\nimport { MatSidenavModule } from \'@angular/material/sidenav\';\\nimport { MatSliderModule } from \'@angular/material/slider\';\\nimport { MatSlideToggleModule } from \'@angular/material/slide-toggle\';\\nimport { MatSnackBarModule } from \'@angular/material/snack-bar\';\\nimport { MatSortModule } from \'@angular/material/sort\';\\nimport { MatTableModule } from \'@angular/material/table\';\\nimport { MatTabsModule } from \'@angular/material/tabs\';\\nimport { MatToolbarModule } from \'@angular/material/toolbar\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { MatTreeModule } from \'@angular/material/tree\';\\nimport { OverlayModule } from \'@angular/cdk/overlay\';\\n \\n@NgModule({\\n  exports: [\\n    A11yModule,\\n    CdkAccordionModule,\\n    ClipboardModule,\\n    CdkStepperModule,\\n    CdkTableModule,\\n    CdkTreeModule,\\n    DragDropModule,\\n    MatAutocompleteModule,\\n    MatBadgeModule,\\n    MatBottomSheetModule,\\n    MatButtonModule,\\n    MatButtonToggleModule,\\n    MatCardModule,\\n    MatCheckboxModule,\\n    MatChipsModule,\\n    MatStepperModule,\\n    MatDatepickerModule,\\n    MatDialogModule,\\n    MatDividerModule,\\n    MatExpansionModule,\\n    MatGridListModule,\\n    MatIconModule,\\n    MatInputModule,\\n    MatListModule,\\n    MatMenuModule,\\n    MatNativeDateModule,\\n    MatPaginatorModule,\\n    MatProgressBarModule,\\n    MatProgressSpinnerModule,\\n    MatRadioModule,\\n    MatRippleModule,\\n    MatSelectModule,\\n    MatSidenavModule,\\n    MatSliderModule,\\n    MatSlideToggleModule,\\n    MatSnackBarModule,\\n    MatSortModule,\\n    MatTableModule,\\n    MatTabsModule,\\n    MatToolbarModule,\\n    MatTooltipModule,\\n    MatTreeModule,\\n    OverlayModule,\\n    PortalModule,\\n    ScrollingModule,\\n  ]\\n})\\nexport class MaterialModule { }","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SimpleCubeComponentModule","id":"module-SimpleCubeComponentModule-ba39fa3743e3086ccf06a4d668958cabaa747717a348044dd3cec38de27d1a46efcccd7eafc4d7afd6860c346a267b4c027ebd8e2247489e3e4624fd70a9b0a4","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/threejs-basic/simple-cube/simple-cube.component.ts","methods":[],"sourceCode":"import { NgtCoreModule, NgtVector3 } from \'@angular-three/core\';\\r\\nimport { NgtBoxGeometryModule } from \'@angular-three/core/geometries\';\\r\\nimport { NgtGroupModule } from \'@angular-three/core/group\';\\r\\nimport {\\r\\n    NgtBoxHelperModule,\\r\\n    NgtGridHelperModule,\\r\\n} from \'@angular-three/core/helpers\';\\r\\nimport {\\r\\n    NgtAmbientLightModule,\\r\\n    NgtSpotLightModule,\\r\\n} from \'@angular-three/core/lights\';\\r\\nimport { NgtMeshStandardMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport { NgtStatsModule } from \'@angular-three/core/stats\';\\r\\nimport { NgtSobaOrbitControlsModule } from \'@angular-three/soba/controls\';\\r\\nimport {\\r\\n    ChangeDetectionStrategy,\\r\\n    Component,\\r\\n    Input,\\r\\n    NgModule,\\r\\n} from \'@angular/core\';\\r\\nimport { Object3D } from \'three\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-simple-cube\',\\r\\n    template: `\\r\\n        <ngt-canvas [camera]=\\"{ position: [5, 5, 5] }\\">\\r\\n            <ngt-ambient-light></ngt-ambient-light>\\r\\n            <ngt-spot-light [position]=\\"[5, 5, 5]\\"></ngt-spot-light>\\r\\n\\r\\n            <ngt-group\\r\\n                [ngtBoxHelper]=\\"[\'red\']\\"\\r\\n                (animateReady)=\\"onGroupAnimate($event.object)\\"\\r\\n            >\\r\\n                <demo-cube [position]=\\"[2, 0, 0]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[-2, 0, 0]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[0, 0, 2]\\"></demo-cube>\\r\\n                <demo-cube [position]=\\"[0, 0, -2]\\"></demo-cube>\\r\\n            </ngt-group>\\r\\n\\r\\n \\r\\n\\r\\n            <ngt-stats></ngt-stats>\\r\\n        </ngt-canvas>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class SimpleCubeComponent {\\r\\n    onGroupAnimate(group: Object3D) {\\r\\n        group.rotation.y += 0.01;\\r\\n    }\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'demo-cube\',\\r\\n    template: `\\r\\n        <ngt-mesh\\r\\n            [ngtBoxHelper]=\\"[\'black\']\\"\\r\\n            (animateReady)=\\"onCubeAnimate($event.object)\\"\\r\\n            (click)=\\"active = !active\\"\\r\\n            (pointerover)=\\"hover = true\\"\\r\\n            (pointerout)=\\"hover = false\\"\\r\\n            [scale]=\\"active ? [1.5, 1.5, 1.5] : [1, 1, 1]\\"\\r\\n            [position]=\\"position\\"\\r\\n        >\\r\\n            <ngt-box-geometry></ngt-box-geometry>\\r\\n            <ngt-mesh-standard-material\\r\\n                [parameters]=\\"{ color: hover ? \'hotpink\' : \'orange\' }\\"\\r\\n            ></ngt-mesh-standard-material>\\r\\n        </ngt-mesh>\\r\\n    `,\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n})\\r\\nexport class CubeComponent {\\r\\n    @Input() position?: NgtVector3;\\r\\n\\r\\n    hover = false;\\r\\n    active = false;\\r\\n\\r\\n    onCubeAnimate(cube: Object3D) {\\r\\n        cube.rotation.x = cube.rotation.y += 0.01;\\r\\n    }\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [SimpleCubeComponent, CubeComponent],\\r\\n    exports: [SimpleCubeComponent],\\r\\n    imports: [\\r\\n        NgtCoreModule,\\r\\n        NgtBoxGeometryModule,\\r\\n        NgtMeshStandardMaterialModule,\\r\\n        NgtAmbientLightModule,\\r\\n        NgtSpotLightModule,\\r\\n        NgtBoxHelperModule,\\r\\n        NgtStatsModule,\\r\\n        NgtMeshModule,\\r\\n        NgtSobaOrbitControlsModule,\\r\\n        NgtGridHelperModule,\\r\\n        NgtGroupModule,\\r\\n    ],\\r\\n})\\r\\nexport class SimpleCubeComponentModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"CubeComponent"},{"name":"SimpleCubeComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"SimpleCubeComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ThreejsBasicModule","id":"module-ThreejsBasicModule-fc99c9f636cba1619b24f0cb40c61bf507d4eda78c9f6daa28b188587f1c212255e7fc2596cdf31254ab25725222106d1450f0d759dd8c0762657bd80c5ddd0e","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/threejs-basic/threejs-basic.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n\\r\\nimport { ThreejsBasicRoutingModule } from \'./threejs-basic-routing.module\';\\r\\nimport { ThreejsBasicComponent } from \'./threejs-basic.component\';\\r\\nimport { OptionsComponent } from \'./options/options.component\';\\r\\nimport { CubeComponent } from \'./cube/cube.component\';\\r\\nimport { AppSharedModule } from \'../app-shared/app-shared.module\';\\r\\n\\r\\nimport { SpincubeComponent } from \'./spincube/spincube.component\';\\r\\nimport { CubestateComponent } from \'./cubestate/cubestate.component\';\\r\\nimport { TwospinComponent } from \'./twospin/twospin.component\';\\r\\nimport { CubelightComponent } from \'./cubelight/cubelight.component\';\\r\\nimport { CubespotlightComponent } from \'./cubespotlight/cubespotlight.component\';\\r\\nimport { CameracontrolComponent } from \'./cameracontrol/cameracontrol.component\';\\r\\nimport { KinematicsComponent, FirstPersonControlsComponent } from \'./kinematics/kinematics.component\';\\r\\n\\r\\nimport { NgtColorPipeModule, NgtCoreModule, NgtRadianPipeModule, NgtVectorPipeModule } from \'@angular-three/core\';\\r\\nimport { NgtStatsModule } from \'@angular-three/core/stats\';\\r\\nimport { NgtInstancedMeshModule, NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport { NgtGroupModule } from \'@angular-three/core/group\';\\r\\nimport {    NgtMeshNormalMaterialModule,NgtMeshLambertMaterialModule, NgtMeshStandardMaterialModule,NgtShadowMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtConeGeometryModule,NgtBoxGeometryModule, NgtCylinderGeometryModule, NgtPlaneGeometryModule, NgtPolyhedronGeometryModule, NgtSphereGeometryModule, NgtTorusGeometryModule } from \'@angular-three/core/geometries\';\\r\\nimport { NgtHemisphereLightModule,NgtAmbientLightModule, NgtDirectionalLightModule, NgtPointLightModule, NgtSpotLightModule } from \'@angular-three/core/lights\';\\r\\nimport { NgtArrowHelperModule, NgtBoxHelperModule } from \'@angular-three/core/helpers\';\\r\\nimport { NgtInstancedBufferAttributeModule } from \'@angular-three/core/attributes\';\\r\\n\\r\\nimport { NgtPhysicsModule } from \'@angular-three/cannon\';\\r\\nimport { NgtPhysicBoxModule, NgtPhysicCompoundModule, NgtPhysicConvexPolyhedronModule, NgtPhysicCylinderModule, NgtPhysicPlaneModule, NgtPhysicSphereModule, NgtPhysicTrimeshModule } from \'@angular-three/cannon/bodies\';\\r\\n\\r\\nimport { NgtSobaGradientTextureModule,NgtSobaTextModule, NgtSobaGizmoHelperModule  } from \'@angular-three/soba/abstractions\';\\r\\n\\r\\nimport { NgtSobaOrbitControlsModule} from \'@angular-three/soba/controls\';\\r\\nimport { NgtCannonDebugModule } from \'@angular-three/cannon/debug\';\\r\\n\\r\\n\\r\\nimport { NgtGridHelperModule } from \'@angular-three/core/helpers\';\\r\\nimport { NgtMeshBasicMaterialModule, NgtMeshPhongMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport {\\r\\n  NgtSobaEnvironmentModule,\\r\\n  NgtSobaSkyModule,\\r\\n} from \'@angular-three/soba/staging\';\\r\\n\\r\\nimport {NgtSobaQuadraticBezierLineModule ,NgtSobaLineModule,NgtSobaBillboardModule, NgtSobaCubicBezierLineModule } from \'@angular-three/soba/abstractions\';\\r\\nimport { NgtEffectComposerModule } from \'@angular-three/postprocessing\';\\r\\nimport { NgtSSAOModule } from \'@angular-three/postprocessing/effects\';\\r\\nimport { NgtSobaLoaderModule } from \'@angular-three/soba/loaders\';\\r\\nimport { NgtSobaHtmlModule } from \'@angular-three/soba/misc\';\\r\\n\\r\\n\\r\\nimport { NgtPrimitiveModule } from \'@angular-three/core/primitive\';\\r\\nimport { NgtSobaStageModule } from \'@angular-three/soba/staging\';\\r\\n\\r\\n\\r\\nimport { MarmiRxstateComponent,RecipePreviewComponent, CardComponent } from \'./marmi-rxstate/marmi-rxstate.component\';\\r\\nimport { RxstateExampleComponent,SideEffectsSolution } from \'./rxstate-example/rxstate-example.component\';\\r\\nimport { RxstatePresenterComponent, PresenterPatternSolution } from \'./rxstate-presenter/rxstate-presenter.component\';\\r\\nimport { CannonStartComponent,FloorComponent,CubeCannonComponent } from \'./cannon-start/cannon-start.component\';\\r\\nimport { CannonSingleComponent, PlaneSingleComponent, CubeSingleComponent } from \'./cannon-single/cannon-single.component\';\\r\\nimport { CannonKinematicComponent,BoxComponent, InstancedSpheresComponent, PlaneComponent } from \'./cannon-kinematic/cannon-kinematic.component\';\\r\\nimport { CannonCompoundComponent,PlaneCompoundComponent,CompoundComponent } from \'./cannon-compound/cannon-compound.component\';\\r\\nimport { CannonClumpComponent, ClumpComponent,PointerComponent} from \'./cannon-clump/cannon-clump.component\';\\r\\nimport { CannonSphereComponent,PlaneSphereComponent,ScalableBallComponent } from \'./cannon-sphere/cannon-sphere.component\';\\r\\n\\r\\n\\r\\nimport { SobaBillboardComponent} from \'./soba-billboard/soba-billboard.component\';\\r\\n\\r\\n\\r\\nimport { MarkerComponent,EarthComponent,EarthMarkerComponent } from \'./earth-marker/earth-marker.component\';\\r\\nimport { KeenBloomComponent, KeenComponent } from \'./keen-bloom/keen-bloom.component\';\\r\\nimport {         \\r\\n  KinematicCubeComponent,\\r\\n  KPlaneComponent,\\r\\n  KBoxComponent,\\r\\n  KInstancedSpheresComponent } from \'./kinematic-cube/kinematic-cube.component\';\\r\\nimport { SimpleCubeComponentModule } from \'./simple-cube/simple-cube.component\';\\r\\nimport { TransformControlsDemoComponent } from \'./transform-controls-demo/transform-controls-demo.component\';\\r\\nimport { DemoCubeComponent, CubedemoComponent } from \'./demo-cube/demo-cube.component\';\\r\\n\\r\\n\\r\\nimport {\\r\\n    NgtBloomModule,\\r\\n    NgtNoiseModule,\\r\\n} from \'@angular-three/postprocessing/effects\';\\r\\nimport {   \\r\\n    NgtSobaTransformControlsModule,\\r\\n} from \'@angular-three/soba/controls\';\\r\\n\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [\\r\\n    ThreejsBasicComponent,\\r\\n    OptionsComponent,\\r\\n    CubeComponent,\\r\\n    SpincubeComponent,\\r\\n    CubestateComponent,\\r\\n    TwospinComponent,\\r\\n    CubelightComponent,\\r\\n    CubespotlightComponent,\\r\\n    CameracontrolComponent,\\r\\n    KinematicsComponent, FirstPersonControlsComponent, \\r\\n    MarmiRxstateComponent, RecipePreviewComponent, CardComponent, \\r\\n    RxstateExampleComponent,SideEffectsSolution, RxstatePresenterComponent,PresenterPatternSolution, \\r\\n    CannonStartComponent,FloorComponent,CubeCannonComponent, \\r\\n    CannonSingleComponent, PlaneSingleComponent, CubeSingleComponent, \\r\\n    CannonKinematicComponent, BoxComponent, InstancedSpheresComponent,PlaneComponent, \\r\\n    CannonCompoundComponent, PlaneCompoundComponent,CompoundComponent,\\r\\n    CannonClumpComponent, ClumpComponent,PointerComponent,\\r\\n    CannonSphereComponent ,PlaneSphereComponent,ScalableBallComponent, \\r\\n    SobaBillboardComponent, \\r\\n    DemoCubeComponent,CubedemoComponent,\\r\\n    KeenComponent,KeenBloomComponent,\\r\\n    MarkerComponent,EarthComponent,EarthMarkerComponent,\\r\\n\\r\\n    KinematicCubeComponent,\\r\\n    KPlaneComponent,\\r\\n    KBoxComponent,\\r\\n    KInstancedSpheresComponent, \\r\\n    TransformControlsDemoComponent\\r\\n  ],\\r\\n  imports: [\\r\\n    CommonModule,\\r\\n    ThreejsBasicRoutingModule,\\r\\n    AppSharedModule,\\r\\n\\r\\n    NgtStatsModule,\\r\\n    NgtBoxHelperModule,\\r\\n    NgtArrowHelperModule,\\r\\n\\r\\n    NgtCoreModule,\\r\\n    NgtMeshModule,\\r\\n    NgtInstancedMeshModule,\\r\\n    NgtGroupModule,\\r\\n\\r\\n    NgtColorPipeModule,\\r\\n    NgtRadianPipeModule,\\r\\n    NgtVectorPipeModule,\\r\\n\\r\\n    NgtBoxGeometryModule,\\r\\n    NgtPlaneGeometryModule,\\r\\n    NgtSphereGeometryModule,\\r\\n    NgtCylinderGeometryModule,\\r\\n    NgtConeGeometryModule,\\r\\n    NgtTorusGeometryModule,\\r\\n    NgtPolyhedronGeometryModule,\\r\\n    NgtInstancedBufferAttributeModule,\\r\\n\\r\\n    NgtAmbientLightModule,\\r\\n    NgtDirectionalLightModule,\\r\\n    NgtSpotLightModule,\\r\\n    NgtPointLightModule,\\r\\n    NgtHemisphereLightModule,\\r\\n\\r\\n    NgtMeshLambertMaterialModule,\\r\\n    NgtMeshStandardMaterialModule,\\r\\n    NgtShadowMaterialModule,\\r\\n    NgtMeshNormalMaterialModule,\\r\\n\\r\\n    NgtPhysicsModule,\\r\\n    NgtPhysicBoxModule,\\r\\n    NgtPhysicPlaneModule,\\r\\n    NgtPhysicSphereModule,\\r\\n    NgtPhysicCylinderModule,\\r\\n    NgtPhysicCompoundModule,\\r\\n    NgtPhysicTrimeshModule,\\r\\n    NgtPhysicConvexPolyhedronModule,\\r\\n    NgtCannonDebugModule,\\r\\n\\r\\n    NgtSobaOrbitControlsModule,\\r\\n    NgtSobaTextModule,\\r\\n\\r\\n    NgtGridHelperModule,\\r\\n    NgtMeshBasicMaterialModule,\\r\\n    NgtMeshPhongMaterialModule,\\r\\n    NgtSobaEnvironmentModule,\\r\\n    NgtSobaSkyModule,\\r\\n    NgtEffectComposerModule,\\r\\n    NgtSSAOModule,\\r\\n    NgtSobaLoaderModule,\\r\\n    NgtSobaBillboardModule,\\r\\n    NgtSobaGizmoHelperModule,\\r\\n    NgtSobaGradientTextureModule,\\r\\n    NgtSobaLineModule,\\r\\n    NgtSobaCubicBezierLineModule,\\r\\n    NgtSobaQuadraticBezierLineModule,\\r\\n    SimpleCubeComponentModule,\\r\\n    \\r\\n\\r\\n    NgtSobaHtmlModule,\\r\\n    NgtPrimitiveModule,\\r\\n    NgtSobaStageModule,\\r\\n    NgtBloomModule,\\r\\n    NgtNoiseModule,\\r\\n    NgtSobaTransformControlsModule\\r\\n  ]\\r\\n})\\r\\nexport class ThreejsBasicModule { }\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BoxComponent"},{"name":"CameracontrolComponent"},{"name":"CannonClumpComponent"},{"name":"CannonCompoundComponent"},{"name":"CannonKinematicComponent"},{"name":"CannonSingleComponent"},{"name":"CannonSphereComponent"},{"name":"CannonStartComponent"},{"name":"CardComponent"},{"name":"ClumpComponent"},{"name":"CompoundComponent"},{"name":"CubeCannonComponent"},{"name":"CubeComponent"},{"name":"CubeSingleComponent"},{"name":"CubedemoComponent"},{"name":"CubelightComponent"},{"name":"CubespotlightComponent"},{"name":"CubestateComponent"},{"name":"DemoCubeComponent"},{"name":"EarthComponent"},{"name":"EarthMarkerComponent"},{"name":"FirstPersonControlsComponent"},{"name":"FloorComponent"},{"name":"InstancedSpheresComponent"},{"name":"KBoxComponent"},{"name":"KInstancedSpheresComponent"},{"name":"KPlaneComponent"},{"name":"KeenBloomComponent"},{"name":"KeenComponent"},{"name":"KinematicCubeComponent"},{"name":"KinematicsComponent"},{"name":"MarkerComponent"},{"name":"MarmiRxstateComponent"},{"name":"OptionsComponent"},{"name":"PlaneComponent"},{"name":"PlaneCompoundComponent"},{"name":"PlaneSingleComponent"},{"name":"PlaneSphereComponent"},{"name":"PointerComponent"},{"name":"PresenterPatternSolution"},{"name":"RecipePreviewComponent"},{"name":"RxstateExampleComponent"},{"name":"RxstatePresenterComponent"},{"name":"ScalableBallComponent"},{"name":"SideEffectsSolution"},{"name":"SobaBillboardComponent"},{"name":"SpincubeComponent"},{"name":"ThreejsBasicComponent"},{"name":"TransformControlsDemoComponent"},{"name":"TwospinComponent"}]},{"type":"imports","elements":[{"name":"AppSharedModule"},{"name":"ThreejsBasicRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ThreejsBasicRoutingModule","id":"module-ThreejsBasicRoutingModule-8126922147397966a8784177728d3887a73606a5a0e1522b952c61d301fc50228302b6ce87d66383a417a3147284b7f70d86f49e26c88236192a8cd10e3dd48d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/threejs-basic/threejs-basic-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { RouterModule, Routes } from \'@angular/router\';\\r\\nimport { ThreejsBasicComponent } from \'./threejs-basic.component\';\\r\\nimport { OptionsComponent } from \'./options/options.component\';\\r\\nimport { CubeComponent } from \'./cube/cube.component\';\\r\\nimport { SpincubeComponent } from \'./spincube/spincube.component\';\\r\\nimport { CubestateComponent } from \'./cubestate/cubestate.component\';\\r\\nimport { TwospinComponent } from \'./twospin/twospin.component\';\\r\\nimport { CubelightComponent } from \'./cubelight/cubelight.component\';\\r\\nimport { CubespotlightComponent } from \'./cubespotlight/cubespotlight.component\';\\r\\nimport { CameracontrolComponent } from \'./cameracontrol/cameracontrol.component\';\\r\\n\\r\\nimport {KinematicsComponent } from \'./kinematics/kinematics.component\';\\r\\nimport {MarmiRxstateComponent } from \'./marmi-rxstate/marmi-rxstate.component\';\\r\\nimport { RxstatePresenterComponent } from \'./rxstate-presenter/rxstate-presenter.component\';\\r\\nimport { CannonStartComponent } from \'./cannon-start/cannon-start.component\';\\r\\nimport { CannonSingleComponent } from \'./cannon-single/cannon-single.component\';\\r\\nimport { CannonKinematicComponent } from \'./cannon-kinematic/cannon-kinematic.component\';\\r\\nimport { CannonCompoundComponent } from \'./cannon-compound/cannon-compound.component\';\\r\\nimport { CannonClumpComponent } from \'./cannon-clump/cannon-clump.component\';\\r\\nimport { CannonSphereComponent } from \'./cannon-sphere/cannon-sphere.component\';\\r\\n\\r\\nimport { SobaBillboardComponent } from \'./soba-billboard/soba-billboard.component\';\\r\\nimport { DemoCubeComponent } from \'./demo-cube/demo-cube.component\';\\r\\nimport { KeenBloomComponent } from \'./keen-bloom/keen-bloom.component\';\\r\\nimport { EarthMarkerComponent } from \'./earth-marker/earth-marker.component\';\\r\\nimport { KinematicCubeComponent } from \'./kinematic-cube/kinematic-cube.component\';\\r\\nimport { TransformControlsDemoComponent } from \'./transform-controls-demo/transform-controls-demo.component\';\\r\\n\\r\\nconst routes: Routes = [{   \\r\\n  path: \'\',\\r\\n  component: ThreejsBasicComponent ,\\r\\n  children: [\\r\\n    {\\r\\n      path: \'\',\\r\\n      children: [\\r\\n        { path: \'\', component: OptionsComponent },\\r\\n        { path: \'cube\', component: CubeComponent },\\r\\n        { path: \'spincube\', component: SpincubeComponent },\\r\\n        { path: \'cubestate\', component: CubestateComponent },\\r\\n        { path: \'twospin\', component: TwospinComponent },\\r\\n        { path: \'cubelight\', component: CubelightComponent },\\r\\n        { path: \'cubespotlight\', component: CubespotlightComponent },\\r\\n        { path: \'cameracontrol\', component: CameracontrolComponent },\\r\\n        { path: \'kinematics\', component: KinematicsComponent },\\r\\n        { path: \'marmi-rxstate\', component: MarmiRxstateComponent },        \\r\\n        { path: \'rxstate-presenter\', component: RxstatePresenterComponent },\\r\\n        { path: \'cannon-start\', component: CannonStartComponent },\\r\\n        { path: \'cannon-single\', component: CannonSingleComponent },        \\r\\n        { path: \'cannon-kinematic\', component: CannonKinematicComponent },\\r\\n        { path: \'cannon-compound\', component: CannonCompoundComponent },\\r\\n        { path: \'cannon-clump\', component: CannonClumpComponent },        \\r\\n        { path: \'cannon-sphere\', component: CannonSphereComponent },        \\r\\n        { path: \'soba-billboard\', component: SobaBillboardComponent },        \\r\\n        { path: \'demo-cube\', component: DemoCubeComponent }  ,        \\r\\n        { path: \'demo-keen\', component: KeenBloomComponent } ,        \\r\\n        { path: \'demo-kine\', component: KinematicCubeComponent },     \\r\\n        { path: \'demo-earth\', component: EarthMarkerComponent },    \\r\\n        { path: \'demo-transform\', component: TransformControlsDemoComponent }     \\r\\n        \\r\\n      ]\\r\\n    }]\\r\\n  \\r\\n}];\\r\\n\\r\\n\\r\\n\\r\\n@NgModule({\\r\\n  imports: [RouterModule.forChild(routes)],\\r\\n  exports: [RouterModule]\\r\\n})\\r\\nexport class ThreejsBasicRoutingModule { }\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ThreejsSobaModule","id":"module-ThreejsSobaModule-e073bff9d86ea4007d7fbb26d261abad17205d8393d258832dbe8cffe1bda8a7454851df5b5e21cc4ea0273c1a802756da4c1cc5f4424bdcc631a858aa83fad9","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/threejs-soba/threejs-soba.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { AppSharedModule } from \'../app-shared/app-shared.module\';\\r\\n\\r\\nimport {\\r\\n  NgtBoxGeometryModule,\\r\\n  NgtConeGeometryModule,\\r\\n  NgtPlaneGeometryModule,\\r\\n} from \'@angular-three/core/geometries\';\\r\\nimport { NgtGroupModule } from \'@angular-three/core/group\';\\r\\nimport { NgtMeshStandardMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtMeshModule } from \'@angular-three/core/meshes\';\\r\\nimport {\\r\\n  NgtSobaBillboardModule,\\r\\n  NgtSobaTextModule,\\r\\n} from \'@angular-three/soba/abstractions\';\\r\\nimport { NgtColorPipeModule, NgtCoreModule } from \'@angular-three/core\';\\r\\nimport {\\r\\n  NgtAmbientLightModule,\\r\\n  NgtPointLightModule,\\r\\n} from \'@angular-three/core/lights\';\\r\\n\\r\\nimport { NgtStatsModule } from \'@angular-three/core/stats\';\\r\\nimport { NgtSobaOrbitControlsModule } from \'@angular-three/soba/controls\';\\r\\nimport { NgtSobaLoaderModule } from \'@angular-three/soba/loaders\';\\r\\n\\r\\nimport { NgtPrimitiveModule } from \'@angular-three/core/primitive\';\\r\\nimport {\\r\\n  NgtSobaGizmoHelperModule,\\r\\n  NgtSobaGizmoViewcubeModule,\\r\\n  NgtSobaGizmoViewportModule,\\r\\n} from \'@angular-three/soba/abstractions\';\\r\\n\\r\\nimport { NgtSidePipeModule } from \'@angular-three/core\';\\r\\nimport { NgtMeshBasicMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtSobaGradientTextureModule } from \'@angular-three/soba/abstractions\';\\r\\n\\r\\nimport {\\r\\n  NgtSobaCubicBezierLineModule,\\r\\n  NgtSobaLineModule,\\r\\n  NgtSobaQuadraticBezierLineModule,\\r\\n} from \'@angular-three/soba/abstractions\';\\r\\n\\r\\n\\r\\nimport {\\r\\n  NgtMathPipeModule,\\r\\n  NgtRadianPipeModule\\r\\n} from \'@angular-three/core\';\\r\\nimport { NgtSobaCameraShakeModule } from \'@angular-three/soba/staging\';\\r\\n\\r\\nimport { NgtMeshNormalMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtSobaCenterModule } from \'@angular-three/soba/staging\';\\r\\n\\r\\nimport {\\r\\n  NgtIcosahedronGeometryModule\\r\\n} from \'@angular-three/core/geometries\';\\r\\nimport { NgtSobaContactShadowsModule } from \'@angular-three/soba/staging\';\\r\\n\\r\\nimport { NgtTorusKnotGeometryModule } from \'@angular-three/core/geometries\';\\r\\nimport {\\r\\n  NgtSobaEnvironmentModule\\r\\n} from \'@angular-three/soba/staging\';\\r\\n\\r\\nimport { NgtMeshPhongMaterialModule } from \'@angular-three/core/materials\';\\r\\nimport { NgtSobaSpotLightModule } from \'@angular-three/soba/staging\';\\r\\n\\r\\nimport { NgtSphereGeometryModule } from \'@angular-three/core/geometries\';\\r\\nimport { NgtSobaStageModule } from \'@angular-three/soba/staging\';\\r\\n\\r\\nimport { NgtSobaStarsModule } from \'@angular-three/soba/staging\';\\r\\nimport { NgtSobaOrthographicCameraModule } from \'@angular-three/soba/cameras\';\\r\\nimport { NgtSobaTransformControlsModule } from \'@angular-three/soba/controls\';\\r\\n\\r\\nimport { NgtSobaDetailedModule } from \'@angular-three/soba/performances\';\\r\\n\\r\\nimport { NgtSobaHtmlModule } from \'@angular-three/soba/misc\';\\r\\n\\r\\nimport { ThreejsSobaRoutingModule } from \'./threejs-soba-routing.module\';\\r\\nimport { ThreejsSobaComponent } from \'./threejs-soba.component\';\\r\\nimport { OptionsComponent } from \'./options/options.component\';\\r\\nimport { AbsBillboardComponent } from \'./abs-billboard/abs-billboard.component\';\\r\\nimport { AbsGizmoComponent, DefaultGizmo } from \'./abs-gizmo/abs-gizmo.component\';\\r\\nimport { AbsGradientComponent } from \'./abs-gradient/abs-gradient.component\';\\r\\nimport { AbsLineComponent } from \'./abs-line/abs-line.component\';\\r\\nimport { AbsTextComponent } from \'./abs-text/abs-text.component\';\\r\\nimport { StageShakeComponent, DefaultCameraShakeScene } from \'./stage-shake/stage-shake.component\';\\r\\nimport { StageCenterComponent, DefaultCenter } from \'./stage-center/stage-center.component\';\\r\\nimport { StageShadowComponent } from \'./stage-shadow/stage-shadow.component\';\\r\\nimport { StageSkyComponent } from \'./stage-sky/stage-sky.component\';\\r\\nimport { StageSpotComponent, DefaultSpotLightModule } from \'./stage-spot/stage-spot.component\';\\r\\nimport { StageStageComponent } from \'./stage-stage/stage-stage.component\';\\r\\nimport { StageStarsComponent } from \'./stage-stars/stage-stars.component\';\\r\\nimport { CamOthroComponent } from \'./cam-othro/cam-othro.component\';\\r\\nimport { ControlTransformComponent } from \'./control-transform/control-transform.component\';\\r\\nimport { ControlLockComponent } from \'./control-lock/control-lock.component\';\\r\\nimport { PerfDetailedComponent } from \'./perf-detailed/perf-detailed.component\';\\r\\nimport { MiscHtmlComponent } from \'./misc-html/misc-html.component\';\\r\\nimport { StageEnvComponent } from \'./stage-env/stage-env.component\';\\r\\n\\r\\nimport { NgtAxesHelperModule } from \'@angular-three/core/helpers\';\\r\\nimport { NgtSobaSkyModule } from \'@angular-three/soba/staging\';\\r\\n\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [\\r\\n    ThreejsSobaComponent,\\r\\n    OptionsComponent,\\r\\n    AbsBillboardComponent,\\r\\n    AbsGizmoComponent, DefaultGizmo,\\r\\n    AbsGradientComponent,\\r\\n    AbsLineComponent,\\r\\n    AbsTextComponent,\\r\\n    StageShakeComponent, DefaultCameraShakeScene,\\r\\n    StageCenterComponent, DefaultCenter,\\r\\n    StageShadowComponent,\\r\\n    StageSkyComponent,\\r\\n    StageSpotComponent,\\r\\n    StageStageComponent,\\r\\n    StageStarsComponent,\\r\\n    CamOthroComponent,\\r\\n    ControlTransformComponent,\\r\\n    ControlLockComponent,\\r\\n    PerfDetailedComponent,\\r\\n    MiscHtmlComponent,\\r\\n    StageEnvComponent\\r\\n    \\r\\n  ],\\r\\n  imports: [\\r\\n    CommonModule,\\r\\n    ThreejsSobaRoutingModule,\\r\\n    AppSharedModule,\\r\\n\\r\\n    NgtSobaBillboardModule,\\r\\n    NgtMeshStandardMaterialModule,\\r\\n    NgtMeshModule,\\r\\n    NgtPlaneGeometryModule,\\r\\n    NgtGroupModule,\\r\\n    NgtSobaTextModule,\\r\\n    NgtConeGeometryModule,\\r\\n    NgtBoxGeometryModule,\\r\\n    NgtCoreModule,\\r\\n    NgtStatsModule,\\r\\n    NgtAmbientLightModule,\\r\\n    NgtPointLightModule,\\r\\n    NgtSobaOrbitControlsModule,\\r\\n    NgtColorPipeModule,\\r\\n    NgtSobaLoaderModule,\\r\\n\\r\\n    NgtPrimitiveModule,\\r\\n    NgtSobaGizmoHelperModule,\\r\\n    NgtSobaGizmoViewcubeModule,\\r\\n    NgtSobaGizmoViewportModule,\\r\\n    NgtSidePipeModule,\\r\\n    NgtMeshBasicMaterialModule,\\r\\n    NgtSobaGradientTextureModule,\\r\\n    NgtSobaCubicBezierLineModule,\\r\\n    NgtSobaLineModule,\\r\\n    NgtSobaQuadraticBezierLineModule,\\r\\n    NgtMathPipeModule,\\r\\n    NgtRadianPipeModule,\\r\\n    NgtSobaCameraShakeModule,\\r\\n    NgtMeshNormalMaterialModule,\\r\\n    NgtSobaCenterModule,\\r\\n    NgtIcosahedronGeometryModule,\\r\\n    NgtSobaContactShadowsModule,\\r\\n    NgtTorusKnotGeometryModule,\\r\\n    NgtSobaEnvironmentModule,\\r\\n    NgtAxesHelperModule,\\r\\n    NgtSobaSkyModule,\\r\\n    NgtMeshPhongMaterialModule,\\r\\n    NgtSobaSpotLightModule,\\r\\n    DefaultSpotLightModule,\\r\\n    NgtSphereGeometryModule,\\r\\n    NgtSobaStageModule,\\r\\n    NgtSobaStarsModule,\\r\\n    NgtSobaOrthographicCameraModule,\\r\\n    NgtSobaTransformControlsModule,\\r\\n    NgtSobaDetailedModule,\\r\\n    NgtSobaHtmlModule\\r\\n\\r\\n  ]\\r\\n})\\r\\nexport class ThreejsSobaModule { }\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AbsBillboardComponent"},{"name":"AbsGizmoComponent"},{"name":"AbsGradientComponent"},{"name":"AbsLineComponent"},{"name":"AbsTextComponent"},{"name":"CamOthroComponent"},{"name":"ControlLockComponent"},{"name":"ControlTransformComponent"},{"name":"DefaultCameraShakeScene"},{"name":"DefaultCenter"},{"name":"DefaultGizmo"},{"name":"MiscHtmlComponent"},{"name":"PerfDetailedComponent"},{"name":"StageCenterComponent"},{"name":"StageEnvComponent"},{"name":"StageShadowComponent"},{"name":"StageShakeComponent"},{"name":"StageSkyComponent"},{"name":"StageSpotComponent"},{"name":"StageStageComponent"},{"name":"StageStarsComponent"},{"name":"ThreejsSobaComponent"}]},{"type":"imports","elements":[{"name":"AppSharedModule"},{"name":"DefaultSpotLightModule"},{"name":"ThreejsSobaRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ThreejsSobaRoutingModule","id":"module-ThreejsSobaRoutingModule-fdbc1037c9fe3ab33097d2a1a1872ecf6a8bf87bcce1ce1aa90b2bdd130fcf6c6018efb805410a1c94f3e9a24cb86de2a3ff1a86496d56c665fd371786d28184","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/threejs-soba/threejs-soba-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { ThreejsSobaComponent } from \'./threejs-soba.component\';\\n\\nimport { OptionsComponent } from \'./options/options.component\';\\n\\nimport { AbsBillboardComponent } from \'./abs-billboard/abs-billboard.component\';\\nimport { AbsGizmoComponent } from \'./abs-gizmo/abs-gizmo.component\';\\nimport { AbsGradientComponent } from \'./abs-gradient/abs-gradient.component\';\\nimport { AbsLineComponent } from \'./abs-line/abs-line.component\';\\nimport { AbsTextComponent } from \'./abs-text/abs-text.component\';\\nimport { StageShakeComponent } from \'./stage-shake/stage-shake.component\';\\nimport { StageCenterComponent } from \'./stage-center/stage-center.component\';\\nimport { StageShadowComponent } from \'./stage-shadow/stage-shadow.component\';\\nimport { StageSkyComponent } from \'./stage-sky/stage-sky.component\';\\nimport { StageSpotComponent } from \'./stage-spot/stage-spot.component\';\\nimport { StageStageComponent } from \'./stage-stage/stage-stage.component\';\\nimport { StageStarsComponent } from \'./stage-stars/stage-stars.component\';\\nimport { CamOthroComponent } from \'./cam-othro/cam-othro.component\';\\nimport { ControlTransformComponent } from \'./control-transform/control-transform.component\';\\nimport { ControlLockComponent } from \'./control-lock/control-lock.component\';\\nimport { PerfDetailedComponent } from \'./perf-detailed/perf-detailed.component\';\\nimport { MiscHtmlComponent } from \'./misc-html/misc-html.component\';\\nimport { StageEnvComponent } from \'./stage-env/stage-env.component\';\\nconst routes: Routes = [{   \\n  path: \'\',\\n  component: ThreejsSobaComponent ,\\n  children: [\\n    {\\n      path: \'\',\\n      children: [\\n        { path: \'\', component: OptionsComponent },\\n        { path: \'abs-billboard\', component: AbsBillboardComponent },\\n        { path: \'abs-gizmo\', component: AbsGizmoComponent },\\n        { path: \'abs-gradient\', component: AbsGradientComponent },\\n        { path: \'abs-line\', component: AbsLineComponent },\\n        { path: \'abs-text\', component: AbsTextComponent },\\n        { path: \'stage-shake\', component: StageShakeComponent },\\n        { path: \'stage-center\', component: StageCenterComponent },\\n        { path: \'stage-shadow\', component: StageShadowComponent },\\n        { path: \'stage-env\', component: StageEnvComponent },        \\n        { path: \'stage-sky\', component: StageSkyComponent },        \\n        { path: \'stage-spot\', component: StageSpotComponent },\\n        { path: \'stage-stage\', component: StageStageComponent },\\n        { path: \'stage-stars\', component: StageStarsComponent },   \\n        { path: \'cam-othro\', component: CamOthroComponent }, \\n        { path: \'control-transform\', component: ControlTransformComponent },  \\n        { path: \'control-lock\', component: ControlLockComponent },\\n        { path: \'perf-detailed\', component: PerfDetailedComponent },\\n        { path: \'misc-html\', component: MiscHtmlComponent }        \\n      ]\\n    }]\\n  \\n}];\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class ThreejsSobaRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  firebase: {\\n    projectId: \'angularthree-23829\',\\n    appId: \'1:231224100895:web:81ddf4c821917ddd25ad2a\',\\n    storageBucket: \'angularthree-23829.appspot.com\',\\n    locationId: \'asia-southeast2\',\\n    apiKey: \'\',\\n    authDomain: \'angularthree-23829.firebaseapp.com\',\\n    messagingSenderId: \'231224100895\',\\n    measurementId: \'G-P0SKLZKRKN\',\\n  },\\n  production: true\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  firebase: {\\n    projectId: \'angularthree-23829\',\\n    appId: \'1:231224100895:web:81ddf4c821917ddd25ad2a\',\\n    storageBucket: \'angularthree-23829.appspot.com\',\\n    locationId: \'asia-southeast2\',\\n    apiKey: \'\',\\n    authDomain: \'angularthree-23829.firebaseapp.com\',\\n    messagingSenderId: \'231224100895\',\\n    measurementId: \'G-P0SKLZKRKN\',\\n  },\\n  production: false\\n}"},{"name":"half","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(NUM - 1) / 2"},{"name":"initComponentState","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n}"},{"name":"initComponentState","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n}"},{"name":"Large","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"mat","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new THREE.Matrix4()"},{"name":"niceColor","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"niceColors[Math.floor(Math.random() * niceColors.length)]"},{"name":"niceColor","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"niceColors[Math.floor(Math.random() * niceColors.length)]"},{"name":"NUM","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"3"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"Secondary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Small","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Button>","defaultValue":"(args: Button) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Header>","defaultValue":"(args: Header) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Page>","defaultValue":"(args: Page) => ({\\n  props: args,\\n})"},{"name":"vec","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new THREE.Vector3()"}],"functions":[{"name":"createIngredient","file":"src/app/threejs-basic/receipe.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"ingredient","type":"Ingredient","deprecated":false,"deprecationMessage":""}],"returnType":"Ingredient","jsdoctags":[{"name":"ingredient","type":"Ingredient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createQuantity","file":"src/app/threejs-basic/receipe.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"quantity","type":"Quantity","deprecated":false,"deprecationMessage":""}],"returnType":"Quantity","jsdoctags":[{"name":"quantity","type":"Quantity","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createRecipe","file":"src/app/threejs-basic/receipe.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"recipe","type":"Recipe","deprecated":false,"deprecationMessage":""}],"returnType":"Recipe","jsdoctags":[{"name":"recipe","type":"Recipe","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getData","file":"src/app/service/list.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"cfg","type":"object","deprecated":false,"deprecationMessage":"","defaultValue":"{ num: 5 }"}],"returnType":"ListServerItem[]","jsdoctags":[{"name":"cfg","type":"object","deprecated":false,"deprecationMessage":"","defaultValue":"{ num: 5 }","tagName":{"text":"param"}}]}],"typealiases":[],"enumerations":[{"name":"presets","childs":[{"name":"rembrant","deprecated":false,"deprecationMessage":"","value":"rembrandt"},{"name":"portrait","deprecated":false,"deprecationMessage":"","value":"portrait"},{"name":"upfront","deprecated":false,"deprecationMessage":"","value":"upfront"},{"name":"soft","deprecated":false,"deprecationMessage":"","value":"soft"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/threejs-soba/stage-stage/stage-stage.component.ts"}],"groupedVariables":{"src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  firebase: {\\n    projectId: \'angularthree-23829\',\\n    appId: \'1:231224100895:web:81ddf4c821917ddd25ad2a\',\\n    storageBucket: \'angularthree-23829.appspot.com\',\\n    locationId: \'asia-southeast2\',\\n    apiKey: \'\',\\n    authDomain: \'angularthree-23829.firebaseapp.com\',\\n    messagingSenderId: \'231224100895\',\\n    measurementId: \'G-P0SKLZKRKN\',\\n  },\\n  production: true\\n}"}],"src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  firebase: {\\n    projectId: \'angularthree-23829\',\\n    appId: \'1:231224100895:web:81ddf4c821917ddd25ad2a\',\\n    storageBucket: \'angularthree-23829.appspot.com\',\\n    locationId: \'asia-southeast2\',\\n    apiKey: \'\',\\n    authDomain: \'angularthree-23829.firebaseapp.com\',\\n    messagingSenderId: \'231224100895\',\\n    measurementId: \'G-P0SKLZKRKN\',\\n  },\\n  production: false\\n}"}],"src/app/threejs-soba/cam-othro/cam-othro.component.ts":[{"name":"half","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(NUM - 1) / 2"},{"name":"NUM","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"3"}],"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts":[{"name":"initComponentState","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n}"}],"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts":[{"name":"initComponentState","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  refreshInterval: 10000,\\n  listExpanded: false,\\n  list: [],\\n}"}],"src/stories/Button.stories.ts":[{"name":"Large","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Secondary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Small","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Button>","defaultValue":"(args: Button) => ({\\n  props: args,\\n})"}],"src/stories/Header.stories.ts":[{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Header>","defaultValue":"(args: Header) => ({\\n  props: args,\\n})"}],"src/stories/Page.stories.ts":[{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Page>","defaultValue":"(args: Page) => ({\\n  props: args,\\n})"}],"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts":[{"name":"mat","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new THREE.Matrix4()"},{"name":"vec","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new THREE.Vector3()"}],"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts":[{"name":"niceColor","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"niceColors[Math.floor(Math.random() * niceColors.length)]"}],"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts":[{"name":"niceColor","ctype":"miscellaneous","subtype":"variable","file":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"niceColors[Math.floor(Math.random() * niceColors.length)]"}]},"groupedFunctions":{"src/app/threejs-basic/receipe.ts":[{"name":"createIngredient","file":"src/app/threejs-basic/receipe.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"ingredient","type":"Ingredient","deprecated":false,"deprecationMessage":""}],"returnType":"Ingredient","jsdoctags":[{"name":"ingredient","type":"Ingredient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createQuantity","file":"src/app/threejs-basic/receipe.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"quantity","type":"Quantity","deprecated":false,"deprecationMessage":""}],"returnType":"Quantity","jsdoctags":[{"name":"quantity","type":"Quantity","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createRecipe","file":"src/app/threejs-basic/receipe.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"recipe","type":"Recipe","deprecated":false,"deprecationMessage":""}],"returnType":"Recipe","jsdoctags":[{"name":"recipe","type":"Recipe","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/service/list.service.ts":[{"name":"getData","file":"src/app/service/list.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"cfg","type":"object","deprecated":false,"deprecationMessage":"","defaultValue":"{ num: 5 }"}],"returnType":"ListServerItem[]","jsdoctags":[{"name":"cfg","type":"object","deprecated":false,"deprecationMessage":"","defaultValue":"{ num: 5 }","tagName":{"text":"param"}}]}]},"groupedEnumerations":{"src/app/threejs-soba/stage-stage/stage-stage.component.ts":[{"name":"presets","childs":[{"name":"rembrant","deprecated":false,"deprecationMessage":"","value":"rembrandt"},{"name":"portrait","deprecated":false,"deprecationMessage":"","value":"portrait"},{"name":"upfront","deprecated":false,"deprecationMessage":"","value":"upfront"},{"name":"soft","deprecated":false,"deprecationMessage":"","value":"soft"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/threejs-soba/stage-stage/stage-stage.component.ts"}]},"groupedTypeAliases":{}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"src/app/app-routing.module.ts","module":"AppRoutingModule","children":[{"path":"","redirectTo":"beforelogin","pathMatch":"full"},{"path":"beforelogin","loadChildren":"./before-login/before-login.module#BeforeLoginModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/before-login/before-login-routing.module.ts","module":"BeforeLoginRoutingModule","children":[{"path":"","component":"BeforeLoginComponent"}],"kind":"module"}],"module":"BeforeLoginModule"}]},{"path":"basicthree","loadChildren":"./threejs-basic/threejs-basic.module#ThreejsBasicModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/threejs-basic/threejs-basic-routing.module.ts","module":"ThreejsBasicRoutingModule","children":[{"path":"","component":"ThreejsBasicComponent","children":[{"path":"","children":[{"path":"","component":"OptionsComponent"},{"path":"cube","component":"CubeComponent"},{"path":"spincube","component":"SpincubeComponent"},{"path":"cubestate","component":"CubestateComponent"},{"path":"twospin","component":"TwospinComponent"},{"path":"cubelight","component":"CubelightComponent"},{"path":"cubespotlight","component":"CubespotlightComponent"},{"path":"cameracontrol","component":"CameracontrolComponent"},{"path":"kinematics","component":"KinematicsComponent"},{"path":"marmi-rxstate","component":"MarmiRxstateComponent"},{"path":"rxstate-presenter","component":"RxstatePresenterComponent"},{"path":"cannon-start","component":"CannonStartComponent"},{"path":"cannon-single","component":"CannonSingleComponent"},{"path":"cannon-kinematic","component":"CannonKinematicComponent"},{"path":"cannon-compound","component":"CannonCompoundComponent"},{"path":"cannon-clump","component":"CannonClumpComponent"},{"path":"cannon-sphere","component":"CannonSphereComponent"},{"path":"soba-billboard","component":"SobaBillboardComponent"},{"path":"demo-cube","component":"DemoCubeComponent"},{"path":"demo-keen","component":"KeenBloomComponent"},{"path":"demo-kine","component":"KinematicCubeComponent"},{"path":"demo-earth","component":"EarthMarkerComponent"},{"path":"demo-transform","component":"TransformControlsDemoComponent"}]}]}],"kind":"module"}],"module":"ThreejsBasicModule"}]},{"path":"3jssoba","loadChildren":"./threejs-soba/threejs-soba.module#ThreejsSobaModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/threejs-soba/threejs-soba-routing.module.ts","module":"ThreejsSobaRoutingModule","children":[{"path":"","component":"ThreejsSobaComponent","children":[{"path":"","children":[{"path":"","component":"OptionsComponent"},{"path":"abs-billboard","component":"AbsBillboardComponent"},{"path":"abs-gizmo","component":"AbsGizmoComponent"},{"path":"abs-gradient","component":"AbsGradientComponent"},{"path":"abs-line","component":"AbsLineComponent"},{"path":"abs-text","component":"AbsTextComponent"},{"path":"stage-shake","component":"StageShakeComponent"},{"path":"stage-center","component":"StageCenterComponent"},{"path":"stage-shadow","component":"StageShadowComponent"},{"path":"stage-env","component":"StageEnvComponent"},{"path":"stage-sky","component":"StageSkyComponent"},{"path":"stage-spot","component":"StageSpotComponent"},{"path":"stage-stage","component":"StageStageComponent"},{"path":"stage-stars","component":"StageStarsComponent"},{"path":"cam-othro","component":"CamOthroComponent"},{"path":"control-transform","component":"ControlTransformComponent"},{"path":"control-lock","component":"ControlLockComponent"},{"path":"perf-detailed","component":"PerfDetailedComponent"},{"path":"misc-html","component":"MiscHtmlComponent"}]}]}],"kind":"module"}],"module":"ThreejsSobaModule"}]}],"kind":"module"}]},"coverage":{"count":0,"status":"low","files":[{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/before-login/before-login.component.ts","type":"component","linktype":"component","name":"BeforeLoginComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/service/list.service.ts","type":"injectable","linktype":"injectable","name":"ListService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/service/list.service.ts","type":"interface","linktype":"interface","name":"ListServiceState","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/service/list.service.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"getData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/service/userdata.service.ts","type":"injectable","linktype":"injectable","name":"UserdataService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/cameracontrol/cameracontrol.component.ts","type":"component","linktype":"component","name":"CameracontrolComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","type":"component","linktype":"component","name":"CannonClumpComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","type":"component","linktype":"component","name":"ClumpComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","type":"component","linktype":"component","name":"PointerComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mat","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/cannon-clump/cannon-clump.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"vec","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/cannon-compound/cannon-compound.component.ts","type":"component","linktype":"component","name":"CannonCompoundComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/threejs-basic/cannon-compound/cannon-compound.component.ts","type":"component","linktype":"component","name":"CompoundComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"src/app/threejs-basic/cannon-compound/cannon-compound.component.ts","type":"component","linktype":"component","name":"PlaneCompoundComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","type":"component","linktype":"component","name":"BoxComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","type":"component","linktype":"component","name":"CannonKinematicComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","type":"component","linktype":"component","name":"InstancedSpheresComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","type":"component","linktype":"component","name":"PlaneComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/cannon-kinematic/cannon-kinematic.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"niceColor","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/cannon-single/cannon-single.component.ts","type":"component","linktype":"component","name":"CannonSingleComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/cannon-single/cannon-single.component.ts","type":"component","linktype":"component","name":"CubeSingleComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/cannon-single/cannon-single.component.ts","type":"component","linktype":"component","name":"PlaneSingleComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-basic/cannon-sphere/cannon-sphere.component.ts","type":"component","linktype":"component","name":"CannonSphereComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-basic/cannon-sphere/cannon-sphere.component.ts","type":"component","linktype":"component","name":"PlaneSphereComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/cannon-sphere/cannon-sphere.component.ts","type":"component","linktype":"component","name":"ScalableBallComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/threejs-basic/cannon-start/cannon-start.component.ts","type":"component","linktype":"component","name":"CannonStartComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/cannon-start/cannon-start.component.ts","type":"component","linktype":"component","name":"CubeCannonComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/cannon-start/cannon-start.component.ts","type":"component","linktype":"component","name":"FloorComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/cube/cube.component.ts","type":"component","linktype":"component","name":"CubeComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/cubelight/cubelight.component.ts","type":"component","linktype":"component","name":"CubelightComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/threejs-basic/cubespotlight/cubespotlight.component.ts","type":"component","linktype":"component","name":"CubespotlightComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/threejs-basic/cubestate/cubestate.component.ts","type":"component","linktype":"component","name":"CubestateComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/threejs-basic/demo-cube/demo-cube.component.ts","type":"component","linktype":"component","name":"CubedemoComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/demo-cube/demo-cube.component.ts","type":"component","linktype":"component","name":"DemoCubeComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-basic/earth-marker/earth-marker.component.ts","type":"component","linktype":"component","name":"EarthComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/earth-marker/earth-marker.component.ts","type":"component","linktype":"component","name":"EarthMarkerComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/earth-marker/earth-marker.component.ts","type":"component","linktype":"component","name":"MarkerComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/threejs-basic/keen-bloom/keen-bloom.component.ts","type":"component","linktype":"component","name":"KeenBloomComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/keen-bloom/keen-bloom.component.ts","type":"component","linktype":"component","name":"KeenComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","type":"component","linktype":"component","name":"KBoxComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","type":"component","linktype":"component","name":"KinematicCubeComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","type":"component","linktype":"component","name":"KInstancedSpheresComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","type":"component","linktype":"component","name":"KPlaneComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/kinematic-cube/kinematic-cube.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"niceColor","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/kinematics/kinematics.component.ts","type":"component","linktype":"component","name":"FirstPersonControlsComponent","coveragePercent":0,"coverageCount":"0/18","status":"low"},{"filePath":"src/app/threejs-basic/kinematics/kinematics.component.ts","type":"component","linktype":"component","name":"KinematicsComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/threejs-basic/kinematics/kinematics.component.ts","type":"class","linktype":"classe","name":"Projectile","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/kinematics/kinematics.component.ts","type":"class","linktype":"classe","name":"Target","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","type":"component","linktype":"component","name":"CardComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","type":"component","linktype":"component","name":"MarmiRxstateComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","type":"component","linktype":"component","name":"RecipePreviewComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-basic/marmi-rxstate/marmi-rxstate.component.ts","type":"interface","linktype":"interface","name":"State","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/options/options.component.ts","type":"component","linktype":"component","name":"OptionsComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/receipe.ts","type":"interface","linktype":"interface","name":"Ingredient","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/receipe.ts","type":"interface","linktype":"interface","name":"ListServerItem","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/receipe.ts","type":"interface","linktype":"interface","name":"Quantity","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/receipe.ts","type":"interface","linktype":"interface","name":"Recipe","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/threejs-basic/receipe.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"createIngredient","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/receipe.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"createQuantity","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/receipe.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"createRecipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","type":"component","linktype":"component","name":"RxstateExampleComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","type":"component","linktype":"component","name":"SideEffectsSolution","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","type":"interface","linktype":"interface","name":"ComponentState","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","type":"interface","linktype":"interface","name":"DemoBasicsItem","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-example/rxstate-example.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"initComponentState","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"component","linktype":"component","name":"PresenterPatternSolution","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"component","linktype":"component","name":"RxstatePresenterComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"injectable","linktype":"injectable","name":"Adapter","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"injectable","linktype":"injectable","name":"Presenter","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"interface","linktype":"interface","name":"ComponentState","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"interface","linktype":"interface","name":"DemoBasicsItem","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"interface","linktype":"interface","name":"DemoBasicsItem","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/threejs-basic/rxstate-presenter/rxstate-presenter.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"initComponentState","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/simple-cube/simple-cube.component.ts","type":"component","linktype":"component","name":"CubeComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-basic/simple-cube/simple-cube.component.ts","type":"component","linktype":"component","name":"SimpleCubeComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-basic/soba-billboard/soba-billboard.component.ts","type":"component","linktype":"component","name":"SobaBillboardComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/spincube/spincube.component.ts","type":"component","linktype":"component","name":"SpincubeComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/threejs-basic/threejs-basic.component.ts","type":"component","linktype":"component","name":"ThreejsBasicComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/threejs-basic/transform-controls-demo/transform-controls-demo.component.ts","type":"component","linktype":"component","name":"TransformControlsDemoComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-basic/twospin/twospin.component.ts","type":"component","linktype":"component","name":"TwospinComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/threejs-soba/abs-billboard/abs-billboard.component.ts","type":"component","linktype":"component","name":"AbsBillboardComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/threejs-soba/abs-gizmo/abs-gizmo.component.ts","type":"component","linktype":"component","name":"AbsGizmoComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"src/app/threejs-soba/abs-gizmo/abs-gizmo.component.ts","type":"component","linktype":"component","name":"DefaultGizmo","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/threejs-soba/abs-gradient/abs-gradient.component.ts","type":"component","linktype":"component","name":"AbsGradientComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/threejs-soba/abs-line/abs-line.component.ts","type":"component","linktype":"component","name":"AbsLineComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/threejs-soba/abs-text/abs-text.component.ts","type":"component","linktype":"component","name":"AbsTextComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","type":"component","linktype":"component","name":"CamOthroComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"half","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-soba/cam-othro/cam-othro.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"NUM","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/threejs-soba/control-lock/control-lock.component.ts","type":"component","linktype":"component","name":"ControlLockComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/threejs-soba/control-transform/control-transform.component.ts","type":"component","linktype":"component","name":"ControlTransformComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/threejs-soba/misc-html/misc-html.component.ts","type":"component","linktype":"component","name":"MiscHtmlComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/threejs-soba/options/options.component.ts","type":"component","linktype":"component","name":"OptionsComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-soba/perf-detailed/perf-detailed.component.ts","type":"component","linktype":"component","name":"PerfDetailedComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/threejs-soba/stage-center/stage-center.component.ts","type":"component","linktype":"component","name":"DefaultCenter","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/threejs-soba/stage-center/stage-center.component.ts","type":"component","linktype":"component","name":"StageCenterComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/threejs-soba/stage-env/stage-env.component.ts","type":"component","linktype":"component","name":"StageEnvComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/threejs-soba/stage-shadow/stage-shadow.component.ts","type":"component","linktype":"component","name":"StageShadowComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/threejs-soba/stage-shake/stage-shake.component.ts","type":"component","linktype":"component","name":"DefaultCameraShakeScene","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-soba/stage-shake/stage-shake.component.ts","type":"component","linktype":"component","name":"StageShakeComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"src/app/threejs-soba/stage-sky/stage-sky.component.ts","type":"component","linktype":"component","name":"StageSkyComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/threejs-soba/stage-spot/stage-spot.component.ts","type":"component","linktype":"component","name":"DefaultSpotLight","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/threejs-soba/stage-spot/stage-spot.component.ts","type":"component","linktype":"component","name":"StageSpotComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/threejs-soba/stage-stage/stage-stage.component.ts","type":"component","linktype":"component","name":"StageStageComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/threejs-soba/stage-stage/stage-stage.component.ts","type":"interface","linktype":"interface","name":"stagestatege","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/threejs-soba/stage-stars/stage-stars.component.ts","type":"component","linktype":"component","name":"StageStarsComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/threejs-soba/threejs-soba.component.ts","type":"component","linktype":"component","name":"ThreejsSobaComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Large","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Secondary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Small","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Header.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedIn","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Header.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedOut","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Header.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Page.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedIn","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Page.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedOut","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Page.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/User.ts","type":"interface","linktype":"interface","name":"User","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"src/stories/header.component.ts","type":"component","linktype":"component","name":"HeaderComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/stories/page.component.ts","type":"component","linktype":"component","name":"PageComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.setCompodocJson)(documentation_namespaceObject);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.kg.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./src/stories/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/stories/assets/code-brackets.svg"),_assets_colors_svg__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/stories/assets/colors.svg"),_assets_comments_svg__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/stories/assets/comments.svg"),_assets_direction_svg__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/stories/assets/direction.svg"),_assets_flow_svg__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/stories/assets/flow.svg"),_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/stories/assets/plugin.svg"),_assets_repo_svg__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/stories/assets/repo.svg"),_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/stories/assets/stackalt.svg"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.h_,{title:"Example/Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("style",null,"\n  .subheading {\n    --mediumdark: '#999999';\n    font-weight: 900;\n    font-size: 13px;\n    color: #999;\n    letter-spacing: 6px;\n    line-height: 24px;\n    text-transform: uppercase;\n    margin-bottom: 12px;\n    margin-top: 40px;\n  }\n\n  .link-list {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    row-gap: 10px;\n  }\n\n  @media (min-width: 620px) {\n    .link-list {\n      row-gap: 20px;\n      column-gap: 20px;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media all and (-ms-high-contrast:none) {\n  .link-list {\n      display: -ms-grid;\n      -ms-grid-columns: 1fr 1fr;\n      -ms-grid-rows: 1fr 1fr;\n    }\n  }\n\n  .link-item {\n    display: block;\n    padding: 20px 30px 20px 15px;\n    border: 1px solid #00000010;\n    border-radius: 5px;\n    transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n    color: #333333;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .link-item:hover {\n    border-color: #1EA7FD50;\n    transform: translate3d(0, -3px, 0);\n    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n  }\n\n  .link-item:active {\n    border-color: #1EA7FD;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .link-item strong {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 2px;\n  }\n  \n  .link-item img {\n    height: 40px;\n    width: 40px;\n    margin-right: 15px;\n    flex: none;\n  }\n\n  .link-item span {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  .tip {\n    display: inline-block;\n    border-radius: 1em;\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 700;\n    background: #E7FDD8;\n    color: #66BF3C;\n    padding: 4px 12px;\n    margin-right: 10px;\n    vertical-align: top;\n  }\n\n  .tip-wrapper {\n    font-size: 13px;\n    line-height: 20px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n\n  .tip-wrapper code {\n    font-size: 12px;\n    display: inline-block;\n  }\n\n  \n"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("h1",{id:"welcome-to-storybook"},"Welcome to Storybook"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Storybook helps you build UI components in isolation from your app's business logic, data, and context.\nThat makes it easy to develop hard-to-reach states. Save these UI states as ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",{parentName:"p"},"stories")," to revisit during development, testing, or QA."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("p",null,"Browse example stories now by navigating to them in the sidebar.\nView their code in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("inlineCode",{parentName:"p"},"src/stories")," directory to learn how they work.\nWe recommend building UIs with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{parentName:"p",href:"https://componentdriven.org",target:"_blank",rel:"nofollow noopener noreferrer"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",{parentName:"a"},"component-driven"))," process starting with atomic components and ending with pages."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"subheading"},"Configure"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"link-list"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/addons/addon-types",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_8__,alt:"plugin"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Presets for popular tools"),"Easy setup for TypeScript, SCSS and more.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/configure/webpack",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_10__,alt:"Build"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Build configuration"),"How to customize webpack and Babel")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/configure/styling-and-css",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_colors_svg__WEBPACK_IMPORTED_MODULE_4__,alt:"colors"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Styling"),"How to load and configure CSS libraries")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs/react/get-started/setup#configure-storybook-for-your-stack",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_flow_svg__WEBPACK_IMPORTED_MODULE_7__,alt:"flow"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Data"),"Providers and mocking for data libraries"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"subheading"},"Learn"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"link-list"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/docs",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_repo_svg__WEBPACK_IMPORTED_MODULE_9__,alt:"repo"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Storybook documentation"),"Configure, customize, and extend")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://storybook.js.org/tutorials/",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_direction_svg__WEBPACK_IMPORTED_MODULE_6__,alt:"direction"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"In-depth guides"),"Best practices from leading teams")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://github.com/storybookjs/storybook",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_3__,alt:"code"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"GitHub project"),"View the source and add issues")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("a",{className:"link-item",href:"https://discord.gg/storybook",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("img",{src:_assets_comments_svg__WEBPACK_IMPORTED_MODULE_5__,alt:"comments"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("strong",null,"Discord chat"),"Chat with maintainers and the community"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("div",{className:"tip-wrapper"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("span",{className:"tip"},"Tip"),"Edit the Markdown in"," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)("code",null,"src/stories/Introduction.stories.mdx")))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Example/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta},"./src/styles.scss":()=>{},"./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/Button.stories.ts":"./src/stories/Button.stories.ts","./stories/Header.stories.ts":"./src/stories/Header.stories.ts","./stories/Page.stories.ts":"./src/stories/Page.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/Introduction.stories.mdx":"./src/stories/Introduction.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"},"./src/stories/assets/code-brackets.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/code-brackets.2e1112d7.svg"},"./src/stories/assets/colors.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/colors.a4bd0486.svg"},"./src/stories/assets/comments.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/comments.a3859089.svg"},"./src/stories/assets/direction.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/direction.b770f9af.svg"},"./src/stories/assets/flow.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/flow.edad2ac1.svg"},"./src/stories/assets/plugin.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/plugin.d494b228.svg"},"./src/stories/assets/repo.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/repo.6d496322.svg"},"./src/stories/assets/stackalt.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/stackalt.dba9fbb3.svg"},"./src/stories/button.css?ngResource":module=>{"use strict";module.exports=".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n"},"./src/stories/header.css?ngResource":module=>{"use strict";module.exports=".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n"},"./src/stories/page.css?ngResource":module=>{"use strict";module.exports="section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n"},"?4f7e":()=>{}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[376],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/dist/esm/preset/argsEnhancers.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.js"),__webpack_exec__("./node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css"),__webpack_exec__("./src/styles.scss"),__webpack_exec__("./src/polyfills.ts"),__webpack_exec__("./node_modules/core-js/proposals/reflect-metadata.js"))));__webpack_require__.O()}]);